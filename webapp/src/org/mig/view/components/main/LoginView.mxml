<?xml version="1.0" encoding="utf-8"?>
<s:Group
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:controls="org.mig.view.controls.*" 
	implements="org.mig.view.interfaces.ILoginView" 
	top="27" height="320"  width="300" clipAndEnableScrolling="false">
	
	<fx:Script>
		<![CDATA[
			import org.mig.model.vo.user.User;
			import org.mig.view.interfaces.ILoginView;
			
			public var complete:Boolean = false;
			private var _editViewEnabled:Boolean = false;

			[Bindable] public var user:User;

			public function set editViewEnabled(newVal:Boolean):void
			{
				_editViewEnabled = newVal;
				handleEditViewChanged();
			}
			public function get editViewEnabled():Boolean
			{
				return _editViewEnabled;
			}
			
			private function handleEditViewChanged():void {
				if(_editViewEnabled == true) {
					usernameField2.enabled = true;
					passwordField2.enabled = true;
					emailField2.enabled = true;
					
					editFormVBox.alpha = 1;
					editButton.label = "Save";
				}
				else {
					usernameField2.enabled = false;
					passwordField2.enabled = false;
					emailField2.enabled = false;
					
					editFormVBox.alpha = 0.5;
					editButton.label = "Edit User";
				}
			}
			public function login():void  {
				this.dispatchEvent(new Event("logIn"));
			}
			private function logout():void {
				this.dispatchEvent(new Event("logOut"));
			}
			private function submitRequestData():void  {
				this.dispatchEvent(new Event("forgotInfo"));
			}          
			private function handleEditButton():void {
				if(_editViewEnabled)
					this.dispatchEvent(new Event("saveInfo")); 
				editViewEnabled =! editViewEnabled;
			}
		]]>
	</fx:Script>
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0x1111111" alpha="0.95" />
		</s:fill>
	</s:Rect>

	<s:VGroup width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="10"  gap="2" clipAndEnableScrolling="false">
		<mx:ViewStack width="100%" height="100%" selectedIndex="{viewIndex}" id="stack">			
			<s:NavigatorContent width="100%" height="100%" id="loginView">
				<s:layout>
					<s:VerticalLayout gap="10" clipAndEnableScrolling="false"/>
				</s:layout>				
				<s:Label text="Username" styleName="bodyCopy" />
				<s:TextInput   id="usernameField"   width="80%"  styleName="inputFieldGray"  />
				<s:Rect height="3" />
				<s:Label text="Password" styleName="bodyCopy" />
				<s:TextInput  styleName="inputFieldGray"  id="passwordField" displayAsPassword="true" width="80%" enter="login()" />
				<s:Rect height="3" />
				<s:CheckBox id="rememberLogin"  color="#888888" label="Remember me on this computer"/>
				<s:Button styleName="textOnlyButton" color="#888888" label="Forget your password?" click="viewIndex=1" mouseChildren="false" buttonMode="true" />
				<s:Rect height="3" />
				<s:Button id="loginButton"  styleName="defaultGrayButton" label="Login" click="login()"/>				
		   </s:NavigatorContent>
		    
			<s:NavigatorContent width="100%" height="100%" id="requestView">
				<s:layout>
					<s:VerticalLayout gap="10" clipAndEnableScrolling="false"/>
				</s:layout>	
				<s:Label text="User Information Request" styleName="bodyCopy" />
		    	<s:TextInput  width="80%"  id="emailField" text="Email Address" styleName="inputFieldGray" />
		    	<s:Rect height="15" />
				<s:HGroup gap="3">
					<s:Button styleName="defaultGrayButton" label="Cancel" click="viewIndex=0"/>
	        		<s:Button styleName="defaultGrayButton" label="Send Request" click="submitRequestData();"/>
	    		</s:HGroup>
		    </s:NavigatorContent>
		    
			<s:NavigatorContent width="100%" height="100%" >
				<s:layout>
					<s:VerticalLayout gap="10" clipAndEnableScrolling="false"  paddingTop="0" paddingRight="0" paddingLeft="0" paddingBottom="0"/>
				</s:layout>
				<s:VGroup  width="100%" height="100%" id="editFormVBox" alpha="0.5">
		    	 	<s:Label text="Username" styleName="bodyCopy" />
					<s:TextInput  styleName="inputFieldGray" id="usernameField2" text="{user.username}"  width="80%" enabled="false" />
					<s:Rect height="3" />
					<s:Label text="Password" styleName="bodyCopy" />	
					<s:TextInput  styleName="inputFieldGray" id="passwordField2"  displayAsPassword="true" text="{user.password}" width="80%" enabled="false"  />
					<s:Rect height="3" />
					<s:Label text="Email" styleName="bodyCopy" />
					<s:TextInput   styleName="inputFieldGray" id="emailField2" text="{user.email}"  width="80%" enabled="false" />
					<s:Rect height="3" />
					<s:Label text="Permissions" styleName="bodyCopy" paddingBottom="0" />
					<s:Label text="{user.privilegesString}" styleName="bodyCopy" alpha="0.4" paddingTop="-5" />
				</s:VGroup>
		    		    
				<!--<controls:MiGTextInput  styleName="inputFieldGray" id="permissionsField" text="{_login.permissions}"  width="80%" enabled="false"/>-->
			    
				<s:HGroup width="100%" paddingTop="12" gap="3" bottom="5">
			   		 <s:Button styleName="defaultGrayButton" label="Cancel" click="editViewEnabled=false;this.visible = false;" />
			   		 <s:Button id="logOutButton" styleName="defaultGrayButton" label="Log Out" click="logout()" />
			   		 <!--<mx:Button  id="editButton" styleName="defaultGrayButton" label="Edit User" click="editButton.label='Save';editFormVBox.alpha=1" />-->
			   		 <s:Button  id="editButton" styleName="defaultGrayButton" label="Edit User" click="handleEditButton()" />	 		 	
			   </s:HGroup>
		  </s:NavigatorContent>		    
		</mx:ViewStack>
		<s:Rect height="3" />
		<s:Label id="statusText" height="20" hideEffect="fadeStatus"/>    
	</s:VGroup>
	
	<fx:Declarations>
		<fx:Number id="viewIndex">0</fx:Number>
		<fx:String id="prompt">User</fx:String>
		<mx:StringValidator source="{usernameField}" property="text" minLength="4" maxLength="20"/>
		<mx:StringValidator source="{passwordField}" property="text" minLength="4" maxLength="20"/>
		<mx:EmailValidator source="{emailField}" property="text"  required="true"/>
		<s:Fade startDelay="1500" duration="500" id="fadeStatus" alphaFrom="1" alphaTo="0" />		
	</fx:Declarations>


</s:Group>
				
