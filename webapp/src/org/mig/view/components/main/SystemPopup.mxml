<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	height="100%" width="100%"
	backgroundColor="#0000000" backgroundAlpha="0.8"
	creationComplete="handleCreationComplete(event)">
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			
			[Embed(source='/migAssets/library.swf#whiteKaboom')]
			[Bindable] private var alertIcon:Class;
			
			[Bindable] private var boxPadding:Number;
			
			//[Bindable] private var _isAlert:Boolean;
			
			
			/* 			public function get isAlert():Boolean
			{
			return _isAlert;
			} */
			private var _type:int = 0;
			public function get type():int {
				return _type;
			}
			public function set type(t:int):void {
				_type = t;
				switch(t) {
					case 0:
						currentState = "default";
					case 1:
						cancelLabelText = "OK";
						currentState = "alert";
						break;
					case 2:
						currentState = "alertPlusOption";
						break;
				}
			}
			private function handleClick(type:String):void {
				this.dispatchEvent(new Event(type));	
				PopUpManager.removePopUp(this);			
			} 

			private function handleCreationComplete(event:FlexEvent):void {
				if(currentState==null)
					currentState='default';
				this.width = FlexGlobals.topLevelApplication.width;
				this.height = FlexGlobals.topLevelApplication.height;
				FlexGlobals.topLevelApplication.addEventListener(ResizeEvent.RESIZE,handleResize);
				messageText.textFlow = TextConverter.importToFlow(message,TextConverter.TEXT_FIELD_HTML_FORMAT);
			}
			private function handleResize(event:ResizeEvent):void {
				this.width = FlexGlobals.topLevelApplication.width;
				this.height = FlexGlobals.topLevelApplication.height;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:String id="message"></fx:String>
		<fx:String id="optionMessage"></fx:String>
		
		
		<fx:Boolean id="includeCancel">true</fx:Boolean>
		<fx:Boolean id="includeNo">true</fx:Boolean>
		<fx:Boolean id="includeYes">true</fx:Boolean>
		<fx:String id="cancelLabelText">Cancel</fx:String>
		<fx:String id="noLabelText">No</fx:String>
		<fx:String id="yesLabelText">Yes</fx:String>	
		
	</fx:Declarations>

	<s:HGroup verticalCenter="0" horizontalCenter="0" height="100%" width="465" verticalAlign="middle">
		<s:BitmapImage source="{alertIcon}" width="86" />
		<s:VGroup  width="100%"  id="textBox" paddingLeft="5">
			<s:TextArea focusAlpha="0" minWidth="50"  heightInLines="{NaN}"  maxHeight="460" editable="false"  id="messageText" width="100%"  contentBackgroundAlpha="0" borderVisible="false" />
			<s:HGroup includeIn="alertStates">	
				<s:Button styleName="defaultGrayButton" visible="{includeCancel}" includeInLayout="{includeCancel}" label="{cancelLabelText}" click="handleClick('cancelSelected')" />
				<s:Button styleName="defaultGrayButton" visible="{includeNo}" label="{noLabelText}" click="handleClick('noSelected')" />
				<s:Button styleName="defaultGrayButton" visible="{includeYes}" label="{yesLabelText}" click="handleClick('yesSelected')"/>
			</s:HGroup>
			<s:Button includeIn="alert" styleName="defaultButton" visible="{includeCancel}" includeInLayout="{includeCancel}" label="{cancelLabelText}" click="PopUpManager.removePopUp(this)" />
			<s:CheckBox includeIn="alertPlusOption" label="{optionMessage}" id="option"/>
		</s:VGroup>
	</s:HGroup> 
	
	<s:BitmapImage id="logo" source="@Embed(source='/migAssets/library.swf#migLogoLine')" width="250" height="300" top="0" right="100" />
	
	<s:states>
		<s:State name="default" stateGroups="alertStates"/>
		<s:State name="alert" />	
		<s:State name="alertPlusOption" stateGroups="alertStates"/>
	</s:states>
	
</s:SkinnableContainer>
