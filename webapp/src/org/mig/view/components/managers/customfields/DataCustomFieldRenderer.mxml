<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				contentBackgroundAlpha="1"  width="100%" 
				implements="org.mig.view.interfaces.ICustomFieldView"
				creationComplete="createCustomField(event)" 
				autoDrawBackground="false">
	
		<s:layout>
			<s:HorizontalLayout gap="2" verticalAlign="top" paddingLeft="5" paddingRight="5" paddingTop="2" paddingBottom="2"/>
		</s:layout>
		
		<fx:Script>
			<![CDATA[
				import mx.core.UIComponent;
				import mx.events.FlexEvent;
				
				import org.mig.model.vo.ContentData;
				import org.mig.model.vo.ValueObject;
				import org.mig.model.vo.app.CustomField;
				import org.mig.utils.GlobalUtils;
				
				public var element:UIComponent;
				private var _vo:ContentData;
				private var _customfield:CustomField;
				private var created:Boolean = false;
				
				override public function set data(value:Object):void {
					super.data = value;
					customfield = value as CustomField;
				}
				
				public function set vo(value:ContentData):void {
						_vo = value as ContentData;
				}
				
				public function get vo():ContentData {
					return _vo
				}
				
				public function set customfield(value:CustomField):void {
					_customfield = value;
					if(_customfield && created) {
						this.removeElementAt(1);
						createCustomField();
					}
				}
				
				public function get customfield():CustomField {
					return _customfield;
				}						
				private function createCustomField(event:FlexEvent=null):void
				{
					created = true;
					var tmp:Array = GlobalUtils.createCustomField(this);
					if(tmp[0]) {
						element = tmp[0] as UIComponent;
						if(!vo)
							element.enabled = false;	
						else
							GlobalUtils.populateCustomField(this,element);
					}
				}
			]]>
		</fx:Script>
		<s:Label width="150" styleName="boldCopy" text="{data.displayname}"/>
</s:ItemRenderer>
