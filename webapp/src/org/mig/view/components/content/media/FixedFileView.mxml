<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	   creationComplete="init()"
	implements="org.mig.view.interfaces.IContentView, mx.controls.listClasses.IDropInListItemRenderer"  
	xmlns:controls="com.thanksmister.controls.*" xmlns:controls1="org.mig.view.controls.*" >
	
	<mx:Script>
		<![CDATA[
			import mx.controls.TextInput;
			import mx.controls.listClasses.BaseListData;
			import mx.controls.listClasses.ListBase;
			
			import org.mig.model.vo.BaseContentData;
			import org.mig.model.vo.ContentNode;
			import org.mig.model.vo.content.ContainerData;
			import org.mig.model.vo.media.FileNode;
	
		
		[Bindable] private var imageSource:Object;
		[Bindable] private var _content:ContentNode;
		[Bindable] private var _themeColor:uint;
		[Bindable] public var _data:ContainerData;
		private var _listData:BaseListData;
		private var created:Boolean = false;	
		private var isImage:Boolean;
		
		public var thumbURL:String;
		public function get listData():BaseListData
		{
			return _listData;
		}
		// Define the setter method,
		public function set listData(value:BaseListData):void
		{
			_listData = value;
		}	
					
		public function set content(contentNode:ContentNode):void
		{
			_content = contentNode; 
			_data = ContainerData(_content.data);
        	if(_data.credits == '')
        	{
        		_textColor = 0x333333;
        		_data.credits = 'Add credits';
        	}
        	else
        		_textColor = 0xffffff;
			if(_data.caption == '')
			{
        		_textColor2 = 0x333333;		
        		_data.caption = 'Add caption';		
			}			
			else
				_textColor2 = 0xffffff;
			if(_data.mimetype=='images')
			{
				imageSource = thumbURL+_data.path.toString()+_data.name.toString();
				isImage = true;
			}
			else
			{
				var arr:Array = _data.name.toString().split(".");
				imageSource = "migAssets/images/docIcon.png";	
				isImage = false;	
			}	
			if(_content is FileNode)
				_themeColor = getStyle('newSelectionColor')		
			else
				_themeColor = getStyle('selectionColor');	
		}
		public function get content():ContentNode
		{
			return _content;
		}
		public function get viewname():String
		{
			return "FixedFileView";
		}	
        override public function set data(value:Object):void
        {
        	super.data = value;
        	content = value as ContentNode;  	
        }
        private function init():void
        {
			created = true;		
        }			
        [Bindable] private var _textColor:uint = 0xffffff;
        [Bindable] private var _textColor2:uint = 0xffffff;

 		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
	 	{
	     	super.updateDisplayList(unscaledWidth, unscaledHeight);	 
	 	 	//figure out if this itemRenderer is selected
	 		if(ListBase(owner).isItemSelected(data))
		 	{
		 		if(_content is FileNode)
		 		{
		 			box.setStyle("backgroundColor", ListBase(owner).getStyle('newSelectionColor'));
		 		}
		 		else
		 		{
		 			box.setStyle("backgroundColor", ListBase(owner).getStyle('selectionColor'));
		 		}
		 	}
		 	else
		 	{
		 		if(_content is FileNode)
		 			box.setStyle('backgroundColor', 0x666666);
		 		else
		 			box.setStyle('backgroundColor', 0x111111);		 			
		 	}
		 }              
		 private function handleImageComplete():void
		 {
		 	//theImage.x = (imageHolder.width - theImage.contentWidth)/2;
		 	//theImage.y = (150 - theImage.contentHeight)/2;
		 	//trace(theImage.contentWidth,theImage.contentHeight,theImage.x,theImage.y);
		 }
		 private function handleEditorMD(event:Event):void
		 {
		 	var textInput:TextInput = event.currentTarget as TextInput;
		 	textInput.setStyle('backgroundAlpha',1);
		 	if(textInput.text == "Add caption" || textInput.text == "Add credits")
		 	{
		 		textInput.text = '';
		 		if(textInput == creditsText)
		 			_textColor = 0xffffff;
		 		else
		 			_textColor2 = 0xffffff;
		 	}
		 }
		 private function handleEditorMU(event:Event):void
		 {
		 	var textInput:TextInput = event.currentTarget as TextInput;
		 	textInput.setStyle('backgroundAlpha',0);
		 	if(_data.caption == "Add credits" && textInput == this.creditsText && textInput.text !='')
		 	{
		 		textInput.text = 'Add credits';
		 		_textColor = 0x333333;
		 	}
		 	if(_data.caption == "Add caption" && textInput == this.captionText && textInput.text !='')
		 	{
		 		textInput.text = 'Add caption';
		 		_textColor2 = 0x333333;
		 	}		 	
		 }
		private function handleCreditsChange():void
		{
			//_content.data.credits = XML('<credits>'+creditsText.text+'</credits>');
			_data.credits = creditsText.text;
		}					
		private function handleCaptionChange():void
		{
			//_content.data.caption = XML('<caption>'+captionText.text+'</caption>');
			_data.caption = captionText.text;
		}			 		 
		]]>
	</mx:Script>
	<mx:VBox backgroundColor="0x111111" backgroundAlpha="1" id="box"
	horizontalScrollPolicy="off" bottom="8" top="8" right="8" left="8"
	paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
		
	<controls:ImageCache id="theImage" width="100%" height="100%"  complete="handleImageComplete()" source="{imageSource}"  />	
	
	<mx:Label text="{_data.name}" truncateToFit="true" width="150" textAlign="left"  />
	<controls1:MiGTextInput
		backgroundAlpha="0"  id="creditsText"
		text="{_data.credits}" width="100%"  
		styleName="inputFieldGray"
		textAlign="left" 
		color="{_textColor}"    
		focusIn="handleEditorMD(event)"
		focusOut="handleEditorMU(event)"
		change="handleCreditsChange()"
		themeColor="{_themeColor}"  />
	<controls1:MiGTextInput
		text="{_data.caption}" width="100%"  
		styleName="inputFieldGray"
		textAlign="left"
		themeColor="{_themeColor}" 
		color="{_textColor2}"
		backgroundAlpha="0"
		id="captionText"
		change="handleCaptionChange()"
		focusIn="handleEditorMD(event)"
		focusOut="handleEditorMU(event)"/>
	</mx:VBox>
</mx:Canvas>