<?xml version="1.0" encoding="utf-8"?>
<s:VGroup
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	implements="org.mig.view.interfaces.IEditableContentView" 
	xmlns:controls="org.mig.view.controls.*"
	xmlns:containers="org.mig.view.containers.*"
	xmlns:tabs="org.mig.view.components.content.tabs.*"
	paddingLeft="2" paddingRight="2" paddingBottom="10" gap="5" xmlns:renderers="org.mig.view.renderers.*">
	<fx:Script>
		<![CDATA[
			import flash.events.DataEvent;
			
			import mx.effects.easing.Exponential;
			
			import org.mig.model.vo.ContentNode;
			import org.mig.view.interfaces.IEditableContentView;
			
			[Bindable] public var thumbURL:String;
			
			[Bindable] private var _content:ContentNode;
			[Bindable] public var scalePercent:Number;
			[Bindable] public var view1Selected:Boolean = false;
			[Bindable] public var view2Selected:Boolean = false;
			[Bindable] public var view3Selected:Boolean = false;
			
			public function set content(value:ContentNode):void {
				_content = value
			}
			public function get content():ContentNode {
				return _content;
			}
			public function submit(statusid:int=0):void {
				
			}
			private function handleViewBtn(index:int):void {
				this.dispatchEvent(new DataEvent("viewBtn",false,false,index.toString()));
			}
			private function parentDirIcon_clickHandler(event:MouseEvent):void {
				scaleSlider.value = 1;
				stack.selectedIndex = 0;
				this.currentState = "usage"; 
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="usage"  stateGroups="scalingStates"/>
		<s:State name="view1" stateGroups="viewingStates,scalingStates" />
		<s:State name="view2" stateGroups="viewingStates" />
		<s:State name="view3" stateGroups="viewingStates" />
	</s:states>

			
	<s:HGroup width="100%" height="30" id="controlBox" gap="0" verticalAlign="middle" paddingLeft="6" paddingRight="6">
		<s:Label id="typeLabel"  styleName="boldCopy" text="{usageList.selectedItem.name}" includeIn="viewingStates" />
		<mx:SWFLoader  source="@Embed(source='/migAssets/library.swf#mediaParentFolder')"  mouseChildren="false" id="parentDirIcon" 
		click="parentDirIcon_clickHandler(event)" toolTip="Up 1 Folder" buttonMode="true" useHandCursor="true"  includeIn="viewingStates"/>
		<s:Rect width="100%" />
			
		<s:ToggleButton includeIn="viewingStates" id="view1Btn"  width="30"  toolTip="Small"	click="handleViewBtn(1)" selected="{view1Selected}" />
		<s:ToggleButton includeIn="viewingStates" id="view2Btn"  width="30"  toolTip="Medium"  	click="handleViewBtn(2)" selected="{view2Selected}" />
		<s:ToggleButton includeIn="viewingStates" id="view3Btn"  width="30"  toolTip="Preview"  click="handleViewBtn(3)" selected="{view3Selected}" />
		
		<s:Rect width="5" includeIn="viewingStates"/>
		<controls:IconButton includeIn="viewingStates" id="trashButton" toolTip="Delete" styleName="grayIconButton" icon="@Embed(source='/migAssets/library.swf#trashUp')"/>
		
		<!--  dragDrop="handleTrashDrop(event)" click="handleTrashClick()" dragEnter="handleTrashEnter(event)" -->						
		<s:Rect width="5" includeIn="viewingStates"/>
		
		<controls:IconButton width="34" styleName="grayIconButton"  icon="@Embed(source='/migAssets/library.swf#fileActions')"  id="actionButton" includeIn="viewingStates" />	
		<s:Rect  width="5" includeIn="viewingStates"/><!-- click="actionButton_clickHandler(event)" -->
	</s:HGroup>	
	<s:SkinnableContainer backgroundColor="0x303030" width="100%" height="100%">
		<s:layout>
			<s:BasicLayout clipAndEnableScrolling="false" />
		</s:layout>
	<s:Label styleName="boldCopy" text="drag files and/or folders" color="0x191919" fontSize="20" id="instruction" textAlign="center" verticalCenter="0" horizontalCenter="0"/>

	<mx:ViewStack width="100%" height="100%" id="stack" creationPolicy="all">
		<s:NavigatorContent width="100%" height="100%" id="usageHolder">
			<s:List id="usageList"
		   	width="100%" height="100%" 
			rollOverColor="0xed1c58"   selectionColor="0xed1c58"
			doubleClickEnabled="true" requireSelection="false"
			allowMultipleSelection="true" borderVisible="false">
				<s:layout>
					<s:TileLayout  verticalGap="4" horizontalGap="4" clipAndEnableScrolling="true" useVirtualLayout="true" orientation="rows" rowHeight="{210*scalePercent}" columnWidth="{210*scalePercent}" />
				</s:layout>	
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer doubleClickEnabled="true" clipAndEnableScrolling="false" mouseChildren="false" buttonMode="true"
						scaleY="{outerDocument.scalePercent}" scaleX="{outerDocument.scalePercent}" doubleClick="itemrenderer1_doubleClickHandler(event)">

							<fx:Script>
								<![CDATA[
									import spark.components.List;
									import org.mig.view.events.ListItemEvent;
									private function itemrenderer1_doubleClickHandler(event:MouseEvent):void {
										var e:ListItemEvent = new ListItemEvent(ListItemEvent.ITEM_DOUBLE_CLICK);
										e.list = owner as List;
										e.itemIndex = this.itemIndex;
										owner.dispatchEvent(e);
									}
								]]>
							</fx:Script>
							<s:states>
								<s:State name="normal" />            
								<s:State name="hovered" />
								<s:State name="selected" />
								<s:State name="normalAndShowsCaret"/>
								<s:State name="hoveredAndShowsCaret"/>
								<s:State name="selectedAndShowsCaret"/>
								<s:State name="dragging"/>
							</s:states>
							<s:layout>
								<s:VerticalLayout paddingLeft="5" paddingTop="5" paddingRight="5" paddingBottom="5" />
							</s:layout>
							<mx:SWFLoader maintainAspectRatio="true" width="200" height="150" source="@Embed(source='/migAssets/library.swf#mediaFolder')" />
							<s:Label text="{data.name}" styleName="bodyMedium" fontSize="20" width="100%"  maxDisplayedLines="1" height="20" minHeight="20" />
						</s:ItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>		
		</s:NavigatorContent>
		
		<mx:Canvas width="100%" id="animatedTileHolder" height="100%" horizontalScrollPolicy="off">
			<containers:DragTile
				horizontalScrollPolicy="off"
				dataField="content" thumbURL="{thumbURL}"
				backgroundColor="#ffffff" backgroundAlpha="0" 
				scalePercent="{scalePercent}" 
				dragOver='event.target.showDragFeedback(event,"move")'
				dragEnter="event.target.allowDrag(event,'move')"
				id="animatedList" left="0" right="0" horizontalAlign="left"
				width="100%" height="100%" >
			</containers:DragTile>		
		</mx:Canvas>
	
		<s:NavigatorContent width="100%" height="100%" id="tileHolder">
			<!--dragEnter="handleDragEnter(event)" 
			dragComplete="animListDirty=true" -->
			<controls:MiGList
				id="fixedList" 
				width="100%" height="100%"
				dragFormat="TabFiles"  customProxy="true"
				doubleClickEnabled="true" 
				borderVisible="false"  requireSelection="false"
				contentBackgroundColor="0xffffff" contentBackgroundAlpha="0" focusAlpha="0"	
				rollOverColor="0xed1c58" color="0xed1c58" selectionColor="0xed1c58"  
				allowMultipleSelection="true"
				dropEnabled="true" dragMoveEnabled="true" dragEnabled="true"><!-- newSelectionColor="0xF491A9" -->
				<controls:layout>
					<s:TileLayout  rowHeight="240" columnWidth="200"   verticalGap="4" horizontalGap="4" clipAndEnableScrolling="true" useVirtualLayout="true" orientation="rows"  />
				</controls:layout>
				<controls:itemRenderer>
					<fx:Component>
						<renderers:MediaTabFixedListRenderer thumbURL="{outerDocument.thumbURL}" />
					</fx:Component>
				</controls:itemRenderer>
			</controls:MiGList>
		</s:NavigatorContent> 			
		
		<s:NavigatorContent  width="100%" height="100%">
		<!--	<mediaManager:MediaPlayer id="slideShowContainer" />-->
		</s:NavigatorContent>
	</mx:ViewStack>
	<tabs:ContentMediaDetailView maskType="clip"   id="detailView" y="-550" horizontalCenter="0" visible="false" showEffect="showDetailView"  hideEffect="hideDetailView">
		
	</tabs:ContentMediaDetailView>
	</s:SkinnableContainer>	
	<s:HGroup width="100%">
		<s:Rect width="100%" />
		<controls:MiGHSlider id="scaleSlider" value="1"  minimum="0.25" maximum="2" change="scalePercent=scaleSlider.value"   
		mouseEnabled="false" enabled="false" enabled.scalingStates="true" />
	</s:HGroup>

	<fx:Declarations>
		<mx:DefaultTileListEffect id="myTileListEffect" fadeOutDuration="150" suspendBackgroundProcessing="true" fadeInDuration="150" moveDuration="500" />
		<s:Fade id="fadeIn"   alphaFrom="0" alphaTo="1" duration="500"/>
		<s:Fade id="fadeOut" alphaTo="0" duration="500"/>	
		<s:Parallel id="showDetailView" duration="1500">
			<s:Move yTo="0" easer="{easeIn}" />
			<s:Fade alphaFrom="0" alphaTo="1" easer="{easeIn}"/>
		</s:Parallel>
		<s:Parallel id="hideDetailView" duration="1500">
			<s:Move yTo="-550" easer="{easeIn}" />
			<s:Fade alphaFrom="1" alphaTo="0" easer="{easeIn}"/>
		</s:Parallel>
		
		<s:Sine easeInFraction="1" id="easeIn" />	
	</fx:Declarations>
</s:VGroup>
