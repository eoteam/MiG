<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.elements"><apiName>flashx.textLayout.elements</apiName><apiDetail/><apiClassifier id="flashx.textLayout.elements:FlowLeafElement"><apiName>FlowLeafElement</apiName><shortdesc> Basisklasse für FlowElements, die auf der untersten Ebene der Textflusshierarchie stehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowElement</apiBaseClassifier></apiClassifierDef><apiDesc> Basisklasse für FlowElements, die auf der untersten Ebene der Textflusshierarchie stehen. FlowLeafElement-Objekte haben keine untergeordneten Elemente. Zu diesen Objekten gehören InlineGraphicElement- und SpanElement-Objekte.
	
	</apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:FlowLeafElement:FlowLeafElement"><apiName>FlowLeafElement</apiName><shortdesc> 
		 Basisklasse - ein Aufruf eines neuen FlowLeafElement() gibt einen Ausnahmefehler aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> 
		 Basisklasse - ein Aufruf eines neuen FlowLeafElement() gibt einen Ausnahmefehler aus. 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:FlowLeafElement:getComputedFontMetrics"><apiName>getComputedFontMetrics</apiName><shortdesc> Gibt das FontMetrics-Objekt für den Bereich zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>mit dem Bereich verknüpfte Schriftartmetriken
		 </apiDesc><apiType value="flash.text.engine:FontMetrics"/></apiReturn></apiOperationDef><apiDesc> Gibt das FontMetrics-Objekt für den Bereich zurück. Die Eigenschaften des FontMetrics-Objekts beschreiben die emBox, Durchstreichposition, Durchstreichstärke, Position der Unterstreichung und Stärke der Unterstreichung für die festgelegte Schriftart. 
		 
 		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.FontMetrics.xml"><linktext>flash.text.engine.FontMetrics</linktext></link><link href="" invalidHref="flash.text.engine.xml#ElementFormat/getFontMetrics"><linktext>flash.text.engine.ElementFormat.getFontMetrics</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowLeafElement:getNextLeaf"><apiName>getNextLeaf</apiName><shortdesc>
		 Gibt das nächste FlowLeafElement-Objekt zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>nächstes FlowLeafElement oder „null“, falls das Ende erreicht ist
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>limitElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowGroupElement</apiOperationClassifier><apiData>null</apiData><apiDesc>Legt das FlowGroupElement fest, auf dessen letztem Blatt die Suche beendet werden soll. Ein Wert „null“ (Standardwert) bedeutet, dass weiterhin gesucht wird, bis keine Elemente mehr vorhanden sind.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gibt das nächste FlowLeafElement-Objekt zurück.  
		 
		 </apiDesc><example conref="examples\FlowLeafElement_getNextLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowLeafElement:getPreviousLeaf"><apiName>getPreviousLeaf</apiName><shortdesc>
		 Gibt das vorherige FlowLeafElement-Objekt zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>vorheriges FlowLeafElement oder „null“, falls der Anfang erreicht wird
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>limitElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowGroupElement</apiOperationClassifier><apiData>null</apiData><apiDesc>Legt das FlowGroupElement fest, auf dessen erstem Blatt die Suche beendet werden soll. „null“ (Standardwert) bedeutet, dass weiterhin gesucht wird, bis keine Elemente mehr vorhanden sind.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gibt das vorherige FlowLeafElement-Objekt zurück.  
		 
		 </apiDesc><example conref="examples\FlowLeafElement_getPreviousLeafExample.as"/></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:FlowLeafElement:computedFormat:get"><apiName>computedFormat</apiName><shortdesc> 
		 Die berechneten Textformatattribute, die für dieses Element wirksam sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		 Die berechneten Textformatattribute, die für dieses Element wirksam sind. Berücksichtigt die Vererbung von Attributen.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowLeafElement:text:get"><apiName>text</apiName><shortdesc>
		 Der mit dem FlowLeafElement verknüpfte Text: Der Wert für die SpanElement-Unterklasse ist um ein Zeichen kleiner als textLength, wenn dies der letzte Bereich in einem ParagraphELement ist. Der Wert für die BreakElement-Unterklasse ist U+2028. Der Wert für die TabElement-Unterklasse ist ein Tabulator. Der Wert für die InlineGraphicElement-Unterklasse ist U+FDEF
		 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Der mit dem FlowLeafElement verknüpfte Text.
		 <p><ul>
		 <li>Der Wert für die SpanElement-Unterklasse ist um ein Zeichen kleiner als <codeph>textLength</codeph>, wenn dies der letzte Bereich in einem ParagraphELement ist.</li>
		 <li>Der Wert für die BreakElement-Unterklasse ist U+2028.</li>
		 <li>Der Wert für die TabElement-Unterklasse ist eine Tabulator.</li>
		 <li>Der Wert für die InlineGraphicElement-Unterklasse ist U+FDEF.</li>
		 </ul></p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#SpanElement/replaceText()"><linktext>flashx.textLayout.elements.SpanElement.replaceText()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:SpecialCharacterElement"><apiName>SpecialCharacterElement</apiName><shortdesc> Die SpecialCharacterElement-Klasse ist eine abstrakte Basisklasse für Elemente, die Sonderzeichen repräsentieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:SpanElement</apiBaseClassifier></apiClassifierDef><apiDesc> Die SpecialCharacterElement-Klasse ist eine abstrakte Basisklasse für Elemente, die Sonderzeichen repräsentieren.
	 
	 <p>Sie können kein SpecialCharacterElement-Objekt direkt erstellen. Bei Aufrufen von <codeph>new SpecialCharacterElement()</codeph>wird ein Ausnahmefehler ausgegeben.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#BreakElement"><linktext>BreakElement</linktext></link><link href="flashx.textLayout.elements.xml#TabElement"><linktext>TabElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:SpecialCharacterElement:SpecialCharacterElement"><apiName>SpecialCharacterElement</apiName><shortdesc>  
		 Basisklasse - das Aufrufen eines neuen SpecialCharacterElement() verursacht einen Ausnahmefehler.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>  
		 Basisklasse - das Aufrufen eines<codeph>new SpecialCharacterElement()</codeph> verursacht einen Ausnahmefehler.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:InlineGraphicElementStatus"><apiName>InlineGraphicElementStatus</apiName><shortdesc> Die InlineGraphicElementStatus-Klasse definiert einen Satz an Konstanten zum Überprüfen des Werts von InlineGraphicElement.status.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Die InlineGraphicElementStatus-Klasse definiert eine Gruppe von Konstanten zum Überprüfen des Werts von <codeph>InlineGraphicElement.status</codeph>.
     
     </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/status"><linktext>InlineGraphicElement.status</linktext></link></related-links><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:ERROR"><apiName>ERROR</apiName><shortdesc> Beim Laden einer referenzierten Grafik ist ein Fehler aufgetreten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc> Beim Laden einer referenzierten Grafik ist ein Fehler aufgetreten. 
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:LOADING"><apiName>LOADING</apiName><shortdesc> Der Ladevorgang wurde für ein Grafikelement ausgelöst (aber nicht abgeschlossen), das eine URL ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc> Der Ladevorgang wurde für ein Grafikelement ausgelöst (aber nicht abgeschlossen), das eine URL ist.  
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:LOAD_PENDING"><apiName>LOAD_PENDING</apiName><shortdesc> Das Grafikelement ist eine URL, die nicht geladen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadPending</apiData><apiType value="String"/></apiValueDef><apiDesc> Das Grafikelement ist eine URL, die nicht geladen wurde.  
    	 
    	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:READY"><apiName>READY</apiName><shortdesc> Die Grafik wurde vollständig geladen und die Größe richtig festgelegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc> Die Grafik wurde vollständig geladen und die Größe richtig festgelegt. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:SIZE_PENDING"><apiName>SIZE_PENDING</apiName><shortdesc> 
         Das Laden des Grafikelements mit einer automatischen oder prozentualen Breite/Höhe wurde abgeschlossen, aber es wurde nicht wieder zusammengestellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sizePending</apiData><apiType value="String"/></apiValueDef><apiDesc> 
         Das Laden des Grafikelements mit einer automatischen oder prozentualen Breite/Höhe wurde abgeschlossen, aber es wurde nicht wieder zusammengestellt. Bei der nächsten neuen Zusammenstellung wird die Originalgröße des grafischen Elements berechnet. 
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:TextFlow"><apiName>TextFlow</apiName><shortdesc>
	 Die TextFlow-Klasse dient zur Verwaltung des Textinhalts eines Textabschnitts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Die TextFlow-Klasse dient zur Verwaltung des Textinhalts eines Textabschnitts. Im TextLayout wird Text in einer hierarchischen Baumdarstellung der Elemente gespeichert. TextFlow ist das Stammobjekt des Elementbaums. Alle Elemente im Baum sind von der Basisklasse, FlowElement, abgeleitet. 
	 
	 <p>Ein TextFlow-Objekt kann ParagraphElement- und DivElement-Objekte als untergeordnete Elemente haben. Ein Div (DivElement-Objekt) repräsentiert eine Gruppe von Absätzen (ParagraphElement-Objekte). Ein Absatz kann SpanElement-, InlineGraphicElement-, LinkElement- und TCYElement-Objekte als untergeordnete Elemente haben.</p>
	 
	 <p>Ein Bereich (SpanElement) ist ein Textbereich in einem Absatz mit den gleichen Attributen. Ein Bild (InlineGraphicElement) repräsentiert eine beliebige Grafik, die als einzelnes Zeichen in einer Textzeile angezeigt wird. Ein LinkElement repräsentiert einen Hyperlink oder HTML <codeph>a</codeph>-Tag und kann mehrere Bereiche umfassen. Ein TCYElement-Objekt wird in japanischem Text verwendet, wenn ein kurzer Text senkrecht zum Rest der Zeile steht, wie in einem waagerechten Text in einer senkrechten Zeile. Ein TCYElement kann ebenfalls mehrere Bereiche enthalten.</p>
	 
	 <p>TextFlow ist außerdem von der ContainerFormattedElement-Klasse abgeleitet, die die Stammklasse für alle Blockelemente auf der Container-Ebene ist.</p>
 	 <p>Die folgende Abbildung zeigt die Beziehung der anderen Elemente zum TextFlow-Objekt an, z. B. Bereiche und Absätze.</p>
 	 <p><adobeimage alt="Beispiel TextFlow-Hierarchie" href="../../../images/textLayout_textFlowHierarchy.gif"/></p>
 	 
 	 <p>Zu jedem TextFlow-Objekt gehört ein entsprechendes Configuration-Objekt, sodass Sie ursprüngliche Zeichen- und Absatzformate sowie das ursprüngliche Containerformat festlegen können. Außerdem können Sie Attribute für die Auswahl, für Hyperlinks, für den Fokus und den Bildlauf festlegen. Wenn Sie ein Configuration-Objekt als Parameter für den <codeph>TextFlow()</codeph>-Konstruktor bereitstellen, wird ein schreibgeschützter Schnappschuss erstellt, auf den Sie über die <codeph>TextFlow.configuration</codeph>-Eigenschaft zugreifen können. Nach der Erstellung können Sie die TextFlow-Konfiguration nicht ändern. Wenn Sie keine Configuration festlegen, können Sie über die <codeph>TextFlow.defaultConfiguration</codeph>-Eigenschaft auf die Standardkonfiguration zugreifen.</p>
	 
	 </apiDesc><example conref="examples\TextFlowExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/configuration"><linktext>Konfiguration</linktext></link><link href="flashx.textLayout.elements.xml#IConfiguration"><linktext>IConfiguration</linktext></link><link href="flashx.textLayout.elements.xml#DivElement"><linktext>DivElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement"><linktext>FlowElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowGroupElement"><linktext>FlowGroupElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowLeafElement"><linktext>FlowLeafElement</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>IFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.UpdateCompleteEvent_updateComplete"><apiName>updateComplete</apiName><shortdesc> Wird jedes Mal durch ein TextFlow-Objekt ausgelöst, wenn einem Container neue DisplayObjects hinzugefügt wurden oder dieser aufgrund einer Zusammenstellung aktualisiert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.UpdateCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst durch ein TextFlow-Objekt, jedes Mal wenn ein Container infolge einer Erstellung neue DisplayObjects hinzugefügt oder aktualisiert hatte.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.DamageEvent_damage"><apiName>damage</apiName><shortdesc> Wird jedes Mal durch ein TextFlow-Objekt ausgelöst, wenn dieses beschädigt wurde. Sie können mit diesem Ereignis herausfinden, ob sich der TextFlow geändert hat, aber nicht auf den TextFlow selbst zugreifen, wenn dieses Ereignis ausgesendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.DamageEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Wird jedes Mal durch ein TextFlow-Objekt ausgelöst, wenn dieses beschädigt wurde. Sie können mit diesem Ereignis herausfinden, ob sich der TextFlow geändert hat, aber nicht auf den TextFlow selbst zugreifen, wenn dieses Ereignis ausgesendet wurde. Dieses Ereignis wird gesendet, wenn TextFlow-Änderungen teilweise durchgeführt wurden, sodass es in einem inkonsistenten Status vorhanden sein kann: einige Änderungen wurden bereits vorgenommen, andere Änderungen sind noch ausstehend. Rufen Sie die erforderlichen Informationen vom Ereignis ab, und nehmen Sie die erforderlichen Änderungen vor, nachdem die Anwendung wieder die Steuerung erhält.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.TextLayoutEvent_scroll"><apiName>scroll</apiName><shortdesc> Durch ein TextFlow-Objekt ausgelöst, nachdem innerhalb eines Steuerungscontainers ein Bildlauf durch den Text durchgeführt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.TextLayoutEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst durch ein TextFlow-Objekt, nachdem für Text innerhalb eines Containers ein Bildlauf durchgeführt wurde.  
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.StatusChangeEvent_inlineGraphicStatusChanged"><apiName>inlineGraphicStatusChanged</apiName><shortdesc> Ausgelöst, wenn die Größe eines InlineGraphicElement entsprechend der Breiten- und Höheneinstellung als Auto- oder Prozentangabe angepasst wird und das Laden der Grafik beendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.StatusChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Größe eines InlineGraphicElement entsprechend der Breiten- und Höheneinstellung als Auto- oder Prozentangabe angepasst wird und das Laden der Grafik beendet wurde. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_click"><apiName>click</apiName><shortdesc> Ausgelöst, wenn auf eine Verknüpfung geklickt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn auf eine Verknüpfung geklickt wurde. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_rollOut"><apiName>rollOut</apiName><shortdesc> Ausgelöst, wenn die Maus von einer Verknüpfung weg bewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus von einer Verknüpfung weg bewegt wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_rollOver"><apiName>rollOver</apiName><shortdesc> Ausgelöst, wenn die Maus zuerst auf einer Verknüpfung ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus zuerst auf einer Verknüpfung ist. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_mouseMove"><apiName>mouseMove</apiName><shortdesc> Ausgelöst, wenn die Maus über eine Verknüpfung bewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus über eine Verknüpfung bewegt wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_mouseUp"><apiName>mouseUp</apiName><shortdesc> Ausgelöst, wenn die Maus über einer Verknüpfung losgelassen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus über einer Verknüpfung losgelassen wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_mouseDown"><apiName>mouseDown</apiName><shortdesc> Ausgelöst, wenn die Maustaste über einer Verknüpfung gedrückt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maustaste über einer Verknüpfung gedrückt wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.CompositionCompleteEvent_compositionComplete"><apiName>compositionComplete</apiName><shortdesc> Ausgelöst nach jeder Neuerstellung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.CompositionCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst nach jeder Neuerstellung. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.SelectionEvent_selectionChange"><apiName>selectionChange</apiName><shortdesc> Ausgelöst, sobald die Auswahl geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.SelectionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, sobald die Auswahl geändert wurde. Wird hauptsächlich zum Aktualisieren der von der Auswahl abhängigen Benutzeroberfläche verwendet. Kann auch zum Ändern der Auswahl, jedoch nicht zum Ändern von TextFlow selbst verwendet werden.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE_flowOperationComplete"><apiName>flowOperationComplete</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END_flowOperationEnd"><apiName>flowOperationEnd</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN_flowOperationBegin"><apiName>flowOperationBegin</apiName><shortdesc>
	 
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flashx.textLayout.elements:TextFlow:TextFlow"><apiName>TextFlow</apiName><shortdesc> 
		 Konstruktor - erstellt eine neue TextFlow-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>config</apiItemName><apiOperationClassifier>flashx.textLayout.elements:IConfiguration</apiOperationClassifier><apiData>null</apiData><apiDesc>Legt die Konfiguration fest, die für dieses TextFlow-Objekt verwendet wird. Wenn der Wert „null“ ist, verwenden Sie <codeph>TextFlow.defaultConfiguration</codeph>, um auf Konfigurationswerte zuzugreifen. 
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> 
		 Konstruktor - erstellt eine neue TextFlow-Instanz.
		 
		 <p>Wenn Sie einen <codeph>config</codeph>-Parameter bereitstellen, werden die Inhalte des Configuration-Objekts kopiert und Sie können keine Änderungen durchführen. Sie können jedoch über die <codeph>configuration</codeph>-Eigenschaft auf Konfigurationseinstellungen zugreifen. Wenn der <codeph>config</codeph>-Parameter „null“ ist, können Sie über die <codeph>defaultConfiguration</codeph>-Eigenschaft auf die Standardkonfigurationseinstellungen zugreifen.</p> 
		 
		 <p>Das Configuration-Objekt stellt einen Mechanismus zum Festlegen von konfigurierbaren Standardattributen für einen TextFlow bereit. Obwohl Sie keine Änderungen am Configuration-Objekt durchführen können, ist es möglich, Standardattribute durch Festlegen der Attribute des TextFlow und der untergeordnete Elemente festzulegen, falls erforderlich.</p>
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.elements.xml#Configuration"><linktext>Configuration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow/configuration"><linktext>Konfiguration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow/defaultConfiguration"><linktext>defaultConfiguration</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.elements:TextFlow:addEventListener"><apiName>addEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#addEventListener()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#addEventListener()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:getElementByID"><apiName>getElementByID</apiName><shortdesc> Gibt ein Element zurück, dessen ID-Eigenschaft mit dem idName-Parameter übereinstimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Element, dessen ID mit <codeph>idName</codeph> übereinstimmt.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>idName</apiItemName><apiType value="String"/><apiDesc>Der <codeph>id</codeph>-Wert des zu suchenden Elements.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Gibt ein Element zurück, dessen <codeph>id</codeph>-Eigenschaft mit dem <codeph>idName</codeph>-Parameter übereinstimmt. Ermöglicht die Anwendung eines Stils anhand der <codeph>id</codeph>. 
		 
		 <p>Beispiel: In der folgenden Zeile wird der Stil für die Farbe auf 0xFF0000 (rot) für das Element mit der <codeph>id</codeph> „span1“ festgelegt.</p>
		 
		 <codeblock rev="3.0">
		 textFlow.getElementByID("span1").setStyle("color", 0xFF0000);
		 </codeblock>
		 
		 <p><b>Hinweis:</b> Im folgenden Code geschieht Folgendes: <codeph>p.addChild(s)</codeph> <i>entfernt</i> <codeph>s</codeph> vom ursprünglichen übergeordneten Element und fügt es zu <codeph>p</codeph>, dem neuen übergeordneten Element, hinzu.</p>
		 
		 <codeblock rev="3.0">
		 var s:SpanElement = new SpanElement();
		 var p:ParagraphElement = new ParagraphElement();
		 ...
		 s = textFlow.getElementByID("span3") as SpanElement;
		 p.addChild(s);
		 textFlow.addChild(p);
		 </codeblock>
		 
		 </apiDesc><example conref="examples\TextFlow_getElementByIDExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/id"><linktext>FlowElement.id</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:getElementsByStyleName"><apiName>getElementsByStyleName</apiName><shortdesc> Gibt alle Elemente zurück, die styleName als styleNameValue festgelegt haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array mit den Elementen, deren <codeph>styleName</codeph>-Wert mit <codeph>styleNameValue</codeph> übereinstimmt. Dies könnten z. B alle Elemente mit dem Stilnamen „Farbe“ sein.
		 
		 </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>styleNameValue</apiItemName><apiType value="String"/><apiDesc>Der Name des Stils, für den nach Elementen gesucht wird, bei denen dieser Stil festgelegt wurde.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Gibt alle Elemente zurück, für die <codeph>styleName</codeph> als <codeph>styleNameValue</codeph> festgelegt wurde.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/styleName"><linktext>FlowElement.styleName</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:hasEventListener"><apiName>hasEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:invalidateAllFormats"><apiName>invalidateAllFormats</apiName><shortdesc> Macht alle Formatierungsinformationen für den TextFlow ungültig, wodurch eine Neuberechnung erzwungen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Macht alle Formatierungsinformationen für den TextFlow ungültig, wodurch eine Neuberechnung erzwungen wird. Rufen Sie diese Methode auf, wenn Stile geändert wurden.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#IFormatResolver/invalidateAll"><linktext>IFormatResolver.invalidateAll</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:removeEventListener"><apiName>removeEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:willTrigger"><apiName>willTrigger</apiName><shortdesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:TextFlow:defaultConfiguration"><apiName>defaultConfiguration</apiName><shortdesc> Standardkonfiguration für alle neuen TextFlow-Objekte, wenn keine Konfiguration festgelegt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiValueClassifier>flashx.textLayout.elements:Configuration</apiValueClassifier></apiValueDef><apiDesc> Standardkonfiguration für alle neuen TextFlow-Objekte, wenn keine Konfiguration festgelegt wurde. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#Configuration"><linktext>Configuration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:configuration:get"><apiName>configuration</apiName><shortdesc> 
		Das Configuration-Objekt für dieses TextFlow-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:IConfiguration</apiValueClassifier></apiValueDef><apiDesc> 
		Das Configuration-Objekt für dieses TextFlow-Objekt. Das Configuration-Objekt legt die anfänglichen Zeichen- und Absatzformate, das anfängliche Containerformat sowie Attribute für das Hevorheben, für Hyperlinks, den Fokus und den Bildlauf fest.
		
		<p>Wenn Sie kein Configuration-Objekt festlegen, verwendet Text Layout Framework ein standardmäßiges Configuration-Objekt, auf das die <codeph>defaultConfiguration</codeph>-Eigenschaft verweist.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#Configuration"><linktext>Configuration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow/defaultConfiguration"><linktext>defaultConfiguration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:flowComposer:get"><apiName>flowComposer</apiName><shortdesc> Verwaltet die Container für dieses Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.compose:IFlowComposer</apiValueClassifier></apiValueDef><apiDesc> Verwaltet die Container für dieses Element.
		 
		 <p>Die TextLines, die aus dem Element erstellt werden, erscheinen als untergeordnete Elemente des Containers. Der flowComposer verwaltet die Container und fügt ihnen während der Textbearbeitung Zeilen hinzu bzw. entfernt sie daraus. Außerdem verwaltet der flowComposer einige kritische Attribute, z. B. die Breite und Höhe beim Zusammenstellen, die Aktivierung oder Deaktivierung des Bildlaufs usw.</p>
		 
		 <p>Der Container und <codeph>flowComposer</codeph> stehen in einem engen Zusammenhang. Wenn Sie <codeph>flowComposer</codeph> zurücksetzen, wird der Container auf den Container des neuen flowComposer zurückgesetzt. Dementsprechend wird <codeph>flowComposer</codeph> beim Zurücksetzen des Containers auf den neuen flowComposer des Container szurückgesetzt.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>FlowComposer</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:formatResolver:get"><apiName>formatResolver</apiName><shortdesc> Eine Rückruf-Funktion zum Auflösen von Elementstilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:IFormatResolver</apiValueClassifier></apiValueDef><apiDesc> Eine Rückruf-Funktion zum Auflösen von Elementstilen. Sie können dadurch eine Formatierung mithilfe von CSS oder benannten Stilen bereitstellen. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#IFormatResolver"><linktext>IFormatResolver</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:generation:get"><apiName>generation</apiName><shortdesc> 
		Die Erstellungsnummer für dieses TextFlow-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc> 
		Die Erstellungsnummer für dieses TextFlow-Objekt. Die Rückgängig- und Wiederholvorgänge überprüfen mithilfe der Erstellungsnummer, ob es zulässig ist, einen Vorgang rückgängig zu machen oder zu wiederholen. Die Erstellungsnummern müssen übereinstimmen. 
		
		<p>Jede Modelländerung erhöht <codeph>generation</codeph>, sodass Sie an einer Änderung der Erstellungsnummer erkennen, dass das TextFlow-Modell geändert wurde.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:hostFormat:get"><apiName>hostFormat</apiName><shortdesc> Das TextLayoutFormat-Objekt für dieses TextFlow-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> Das TextLayoutFormat-Objekt für dieses TextFlow-Objekt. Dadurch werden verschiedene Optimierungen zur Wiederverwendung von Host-Formaten ermöglicht. Beispiel;
		
		<codeblock>
		textFlowA.hostFormat = textFlowB.hostFormat
		</codeblock>
		
		Sie müssen vor dem Zuweisen des TextLayoutFormat-Objekts zu <codeph>hostFormat</codeph> Formatwerte festlegen. Beispiel: Die folgenden Zeilen legen die Schriftgröße <i>nicht</i> auf 24 fest, da die Schriftgröße erst festgelegt wird, <i>nachdem</i> das TextLayoutFormat-Objekt dem <codeph>hostFormat</codeph> zugewiesen wurde.
		
		<codeblock>
		format = new TextLayoutFormat()
		textFlow.hostFormat = format
		format.fontSize = 24;
		</codeblock>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:interactionManager:get"><apiName>interactionManager</apiName><shortdesc>
		 Der diesem TextFlow-Objekt zugeordnete InteractionManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:ISelectionManager</apiValueClassifier></apiValueDef><apiDesc>
		 Der diesem TextFlow-Objekt zugeordnete InteractionManager.
		 <p>Steuert die gesamte Auswahl und Bearbeitung des Texts. Wenn der TextFlow nicht auswählbar ist, hat der interactionManager den Wert „null“. Weisen Sie einen interactionManager zu, der sowohl ein ISelectionManager als auch ein IEditManager ist, damit der TextFlow bearbeitbar wird. Weisen Sie einen interactionManager zu, der nur ein ISelectionManager ist, damit ein TextFlow schreibgeschützt und auswählbar wird. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#ISelectionManager"><linktext>ISelectionManager</linktext></link><link href="flashx.textLayout.edit.xml#IEditManager"><linktext>IEditManager</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:ContainerFormattedElement"><apiName>ContainerFormattedElement</apiName><shortdesc> 
	ContainerFormattedElement ist die Stammklasse für alle Block-Elemente auf der Ebene der Container, wie DivElement- und TextFlow-Objekte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:ParagraphFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	ContainerFormattedElement ist die Stammklasse für alle Block-Elemente auf der Ebene der Container, wie DivElement- und TextFlow-Objekte. Blockelemente auf der Container-Ebene sind Gruppierungselemente für andere FlowElement-Objekte.
	
	</apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#DivElement"><linktext>DivElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiClassifier><apiClassifier id="flashx.textLayout.elements:IFormatResolver"><apiName>IFormatResolver</apiName><shortdesc> Schnittstelle zu einem Format-Resolver.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> Schnittstelle zu einem Format-Resolver. Mit einer Implementierung können Sie einem TextFlow eine Formatierungsfunktionalität Ihrer Wahl hinzufügen, z. B. eine Flex CSS-Formatierung und benannte Stile.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/formatResolver"><linktext>TextFlow.formatResolver</linktext></link></related-links><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:getResolverForNewFlow"><apiName>getResolverForNewFlow</apiName><shortdesc> Gibt den Format-Resolver zurück, wenn ein TextFlow kopiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>der Format-Resolver für die Kopie des TextFlows.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:IFormatResolver</apiOperationClassifier></apiReturn><apiParam><apiItemName>oldFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam><apiParam><apiItemName>newFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> Gibt den Format-Resolver zurück, wenn ein TextFlow kopiert wird.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:invalidateAll"><apiName>invalidateAll</apiName><shortdesc> Macht zwischengespeicherte Formatierungsinformationen für einen TextFlow ungültig, sodass die Formatierung neu berechnet werden muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>textFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> Macht zwischengespeicherte Formatierungsinformationen für einen TextFlow ungültig, sodass die Formatierung neu berechnet werden muss.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:invalidate"><apiName>invalidate</apiName><shortdesc> Macht zwischengespeicherte Formatierungsinformationen für dieses Element ungültig, da beispielsweise „parent“ oder „id“ oder „styleName“ geändert wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc> Macht zwischengespeicherte Formatierungsinformationen für dieses Element ungültig, da beispielsweise <codeph>parent</codeph>, <codeph>id</codeph> oder <codeph>styleName</codeph> geändert wurden. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:resolveFormat"><apiName>resolveFormat</apiName><shortdesc> Diese Methode gibt Formateinstellungen für ein gegebenes FlowElement- oder ContainerController-Objekt zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Formateinstellungen für das festgelegte Objekt.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc> Diese Methode gibt Formateinstellungen für ein gegebenes FlowElement- oder ContainerController-Objekt zurück.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:resolveUserFormat"><apiName>resolveUserFormat</apiName><shortdesc> Diese Methode gibt den Formatwert für ein gegebenes FlowElement- oder ContainerController-Objekt und den Namen einer entsprechenden Formateigenschaft zurück. Wird kein Wert gefunden, gibt die Methode „undefined“ zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>der Wert des festgelegten Formats für das festgelegte Objekt.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>userFormat</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Diese Methode gibt den Formatwert für ein gegebenes FlowElement- oder ContainerController-Objekt und den Namen einer entsprechenden Formateigenschaft zurück. Wird kein Wert gefunden, gibt die Methode<codeph>undefined</codeph> zurück.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.elements:TabElement"><apiName>TabElement</apiName><shortdesc> 
	 Die TabElement-Klasse repräsentiert &amp;lt;tab/&amp;gt; im nächsten Textfluss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:SpecialCharacterElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die TabElement-Klasse repräsentiert einen &lt;tab/> im Textfluss. Sie weisen Tabulatoren als Array von TabStopFormat-Objekten der <codeph>ParagraphElement.tabStops</codeph>-Eigenschaft zu.
	 
	 <p><b>Hinweis</b>: Diese Klasse ist hauptsächlich vorhanden, um &lt;tab/> in MXML-Markup zu unterstützen. Sie können Tabulatorzeichen (\t) folgenderweise direkt in den Text einfügen:</p>
	 
	 <codeblock rev="3.0">
	 spanElement1.text += '\t';
	 </codeblock>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TabStopFormat"><linktext>flashx.textLayout.formats.TabStopFormat</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement/tabStops"><linktext>ParagraphElement.tabStops</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:TabElement:TabElement"><apiName>TabElement</apiName><shortdesc> Konstruktor - erstellt eine neue TabElement-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt eine neue TabElement-Instanz. 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:IConfiguration"><apiName>IConfiguration</apiName><shortdesc> Schreibgeschützte Schnittstelle für ein Konfigurationsobjekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> Schreibgeschützte Schnittstelle für ein Konfigurationsobjekt. Vom TextFlow verwendet, um sicherzustellen, dass dessen Konstruktion nach seiner Erstellung unveränderbar ist.
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:defaultLinkActiveFormat:get"><apiName>defaultLinkActiveFormat</apiName><shortdesc> 
		Legt die aktiven Zeichenformatattribute fest, die normalerweise auf alle Hyperlinks (LinkElement-Objekte) im Textfluss angewendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Legt die aktiven Zeichenformatattribute fest, die normalerweise auf alle Hyperlinks (LinkElement-Objekte) im Textfluss angewendet werden. Dies sind Standardwerte für neue LinkElement-Objekte, die keine Werte für diese Attribute festlegen. 
		
		<p>Der Standardwert ist <codeph>null</codeph>.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkActiveFormat"><linktext>FlowElement.linkActiveFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:defaultLinkHoverFormat:get"><apiName>defaultLinkHoverFormat</apiName><shortdesc> 
		Legt die ursprünglichen Zeichenformatattribute fest, die auf einen Hyperlink (LinkElement-Objekte) im Textfluss angewendet werden, wenn die Maus sich darüber befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Legt die ursprünglichen Zeichenformatattribute fest, die auf einen Hyperlink (LinkElement-Objekte) im Textfluss angewendet werden, wenn die Maus sich darüber befindet. Dies sind Standardwerte für neue LinkElement-Objekte, die keine Werte für diese Attribute festlegen.
		
		<p>Der Standardwert ist <codeph>null</codeph>.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkHoverFormat"><linktext>FlowElement.linkHoverFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:defaultLinkNormalFormat:get"><apiName>defaultLinkNormalFormat</apiName><shortdesc> 
		Legt die ursprünglichen Hyperlinkattribute für alle LinkElement-Objekte im Textfluss fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Legt die ursprünglichen Hyperlinkattribute für alle LinkElement-Objekte im Textfluss fest. Dies sind Standardwerte für neue LinkElement-Objekte, die keine Werte für diese Attribute festlegen. 
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkNormalFormat"><linktext>FlowElement.linkNormalFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:enableAccessibility:get"><apiName>enableAccessibility</apiName><shortdesc> 
		Legt fest, ob Eingabehilfen zur Barrierefreiheit aktiviert sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		Legt fest, ob Eingabehilfen zur Barrierefreiheit aktiviert sind. Ist der Wert <codeph>true</codeph>, kann der TextFlow-Inhalt von Bildschirmleseprogrammen gelesen werden.
		
		<p>Der Standardwert ist <codeph>false</codeph></p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:flowComposerClass:get"><apiName>flowComposerClass</apiName><shortdesc> Gibt den Typ des Flow-Composers an, der standardmäßig einem neuen TextFlow-Objekt angehängt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef><apiDesc> Gibt den Typ des Flow-Composers an, der standardmäßig einem neuen TextFlow-Objekt angehängt werden soll. Der Standardwert ist „StandardFlowComposer“.
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:focusedSelectionFormat:get"><apiName>focusedSelectionFormat</apiName><shortdesc> 
		Das ursprüngliche Auswahlformat (SelectionFormat) für einen Textfluss (TextFlow), wenn das dazugehörige Fenster den Fokus hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Das ursprüngliche Auswahlformat (SelectionFormat) für einen Textfluss (TextFlow), wenn das dazugehörige Fenster den Fokus hat. Text Layout Framework verwendet <codeph>focusedSelectionFormat</codeph>, um die Auswahl zu zeichnen, wenn das Fenster aktiv ist und einer der Container im TextFlow den Fokus hat. Sie können dieses Format gegebenenfalls mithilfe von <codeph>SelectionManager.focusedSelectionFormat</codeph> überschreiben.
		
		<p>Die SelectionFormat-Klasse legt die Standardwerte fest, die die Textfarbe und den Texthintergrund umkehren.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/focusedSelectionFormat"><linktext>SelectionManager.focusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:inactiveSelectionFormat:get"><apiName>inactiveSelectionFormat</apiName><shortdesc> 
		Das ursprüngliche Auswahlformat (SelectionFormat) für einen Textfluss (TextFlow), wenn sein Fenster nicht aktiv ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Das ursprüngliche Auswahlformat (SelectionFormat) für einen Textfluss (TextFlow), wenn sein Fenster nicht aktiv ist. Text Layout Framework verwendet <codeph>inactiveSelectionFormat</codeph>, um die Auswahl zu zeichnen, wenn das Fenster nicht aktiv ist. Sie können dieses Format gegebenenfalls mithilfe von <codeph>SelectionManager.inactiveSelectionFormat</codeph> überschreiben.
		
		<p>Wenn Sie <codeph>unfocusedSelectionFormat</codeph> nicht überschreiben, sind die für SelectionFormat verwendeten Werte:</p> 
		<ul>
		  <li><codeph>color = 0xffffff</codeph> (weiß)</li>
		  <li><codeph>alpha = 0</codeph></li>
		  <li><codeph>blendMode = flash.display.BlendMode.DIFFERENCE</codeph></li>
		</ul>
		<p>Als Ergebnis wird keine Auswahl angezeigt.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/inactiveSelectionFormat"><linktext>SelectionManager.inactiveSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:inlineGraphicResolverFunction:get"><apiName>inlineGraphicResolverFunction</apiName><shortdesc> Legt den Rückruf fest, der für die Auflösung eines Inline-Grafikelements verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Function"/></apiValueDef><apiDesc> Gibt den Rückruf an, der zum Auflösen eines Inline-Grafikelements verwendet wird. Der Rückruf verwendet ein <codeph>flashx.textLayout.elements.InlineGraphicElement</codeph>-Objekt und gibt den als <codeph>flashx.textLayout.elements.InlineGraphicElement#source</codeph> des Elements zu verwendenden Wert zurück. Dieser Rückruf bietet den Verzögerungsmechanismus, indem die Quelle eines Inline-Grafikelements kurz vor der Zusammenstellung zur Verfügung gestellt wird.
		<p><b>Hinweis:</b> Dieser Rückruf wird nur aufgerufen, wenn eine Platzhalterquelle des Typs String bereits festgelegt ist. Außerdem kann er mehrmals aufgerufen werden. </p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:manageEnterKey:get"><apiName>manageEnterKey</apiName><shortdesc> 
		Legt fest, ob die Eingabetaste als Text über Text Layout Framework eingegeben wird, um z. B. einen Absatz aufzuteilen, oder die Verarbeitung über den Clientcode erfolgt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		Legt fest, ob die Eingabetaste als Text über Text Layout Framework eingegeben wird, um z. B. einen Absatz aufzuteilen, oder die Verarbeitung über den Clientcode erfolgt. Der Client-Code verarbeitet dies möglicherweise, indem z. B. ein Formular übernommen wird, das eine Standardschaltfläche für diesen Zweck enthält. 
		
		<p>Der Standardwert ist <codeph>true</codeph>.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:manageTabKey:get"><apiName>manageTabKey</apiName><shortdesc> 
		Legt fest, ob die Tabulatortaste als Text über Text Layout Framework eingegeben wird oder die Verarbeitung über den Flash Player oder AIR erfolgt und die Tasteneingabe in ein Bedienfeldereignis mit Registerkarten umgewandelt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		Legt fest, ob die Tabulatortaste als Text über Text Layout Framework eingegeben wird oder die Verarbeitung über den Flash Player oder AIR erfolgt und die Tasteneingabe in ein Bedienfeldereignis mit Registerkarten umgewandelt wird. 
		
		<p>Der Standardwert ist <codeph>false</codeph></p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:overflowPolicy:get"><apiName>overflowPolicy</apiName><shortdesc> 
		Richtlinie, mit der entschieden wird, ob die letzte Zeile eines Containers in den Container passen oder über diesen hinausreichen soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> 
		Richtlinie, mit der entschieden wird, ob die letzte Zeile eines Containers in den Container passen oder über diesen hinausreichen soll. Verwenden Sie die Konstanten der OverflowPolicy-Klasse, um diese Eigenschaft festzulegen.
		
		<p>Der Standardwert ist OverflowPolicy.FIT_DESCENDERS. Dabei wird die Zeile in den Satzbereich eingepasst, wenn auch der Bereich vom oberen Ende bis zur Grundlinie hineinpasst.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#OverflowPolicy"><linktext>OverflowPolicy</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:releaseLineCreationData:get"><apiName>releaseLineCreationData</apiName><shortdesc> Erfordert, dass der Vorgang der Textzusammenstellung nach der Zusammenstellung jedes Absatzes Zeilenerstellungsdaten freigibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Erfordert, dass der Vorgang der Textzusammenstellung nach der Zusammenstellung jedes Absatzes Zeilenerstellungsdaten freigibt. Durch diese Anforderung wird weniger Speicher benötigt, aber der Zusammenstellungsvorgang wird verlangsamt.
		
		<p>Der Standardwert ist <codeph>false</codeph></p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="" invalidHref="flash.text.engine.xml#TextBlock/releaseLineCreationData"><linktext>TextBlock.releaseLineCreationData</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollDragDelay:get"><apiName>scrollDragDelay</apiName><shortdesc> 
		Gibt eine Zeitverzögerung zwischen Bildläufen an, um einen zu schnellen Bildlauf zu verhindern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		Gibt eine Zeitverzögerung zwischen Bildläufen an, um einen zu schnellen Bildlauf zu verhindern. Dieser Wert legt die Verzögerung in Millisekunden fest. Der Standardwert ist 35.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollDragPixels:get"><apiName>scrollDragPixels</apiName><shortdesc> Legt die Standardpixelanzahl für einen Bildlauf fest, wenn der Benutzer durch Ziehen der Auswahl einen automatischen Bildlauf initiiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Legt die Standardpixelanzahl für einen Bildlauf fest, wenn der Benutzer durch Ziehen der Auswahl einen automatischen Bildlauf initiiert. Der Standardwert ist 20.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollMouseWheelMultiplier:get"><apiName>scrollMouseWheelMultiplier</apiName><shortdesc> Legt die Standardpixelanzahl für einen Bildlauf bei Mausradereignissen fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Legt die Standardpixelanzahl für einen Bildlauf bei Mausradereignissen fest. Der Standardwert ist 20.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollPagePercentage:get"><apiName>scrollPagePercentage</apiName><shortdesc>
		Legt den Standardprozentsatz des Textflusses für den Bildlauf durch Seiten fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		Legt den Standardprozentsatz des Textflusses für den Bildlauf durch Seiten fest. Der Standardwert ist 7,0 / 8,0 oder ,875.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:textFlowInitialFormat:get"><apiName>textFlowInitialFormat</apiName><shortdesc> 
		Legt die TextLayoutFormat-Konfiguration zur anfänglichen Formatierung eines Textflusses fest (TextFlow-Objekt).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Legt die TextLayoutFormat-Konfiguration zur anfänglichen Formatierung eines Textflusses fest (TextFlow-Objekt).
		
		<p>Der Standardwert ist <codeph>null</codeph>.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:unfocusedSelectionFormat:get"><apiName>unfocusedSelectionFormat</apiName><shortdesc> 
		Das ursprüngliche Auswahlformat, das Text Layout Framework verwendet, um die Auswahl zu zeichnen, wenn das Fenster aktiv ist, aber keiner der Container im TextFlow einen Fokus hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc> 
		Das ursprüngliche Auswahlformat, das Text Layout Framework verwendet, um die Auswahl zu zeichnen, wenn das Fenster aktiv ist, aber keiner der Container im TextFlow einen Fokus hat. Sie können dieses Format überschreiben, wenn Sie <codeph>SelectionManager.unfocusedSelectionFormat</codeph> verwenden, falls erforderlich.
		
		<p>Wenn Sie <codeph>unfocusedSelectionFormat</codeph> nicht überschreiben, sind die für SelectionFormat verwendeten Werte:</p>
		
		<ul>
		  <li><codeph>color = 0xffffff</codeph> (weiß)</li>
		  <li><codeph>alpha = 0</codeph></li>
		  <li><codeph>blendMode = flash.display.BlendMode.DIFFERENCE</codeph></li>
		</ul>
		<p>Als Ergebnis wird keine Auswahl angezeigt.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/unfocusedSelectionFormat"><linktext>SelectionManager.unfocusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:LinkState"><apiName>LinkState</apiName><shortdesc>
	  Die LinkState-Klasse definiert einen Konstantensatz für die linkState-Eigenschaft der LinkElement-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Die LinkState-Klasse definiert einen Konstantensatz für die <codeph>linkState</codeph>-Eigenschaft der LinkElement-Klasse. 
	 
	 </apiDesc><example conref="examples\LinkStateExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#LinkElement/linkState"><linktext>LinkElement.linkState</linktext></link></related-links><apiValue id="flashx.textLayout.elements:LinkState:ACTIVE"><apiName>ACTIVE</apiName><shortdesc> 
	 Wert für den aktiven Status, der auftritt, wenn Sie die Maustaste über einem Hyperlink gedrückt halten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>active</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 Wert für den aktiven Status, der auftritt, wenn Sie die Maustaste über einem Hyperlink gedrückt halten. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:LinkState:HOVER"><apiName>HOVER</apiName><shortdesc> 
	 Wert für den Status, der auftritt, wenn Sie die Maus über einen Hyperlink ziehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hover</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 Wert für den Status, der auftritt, wenn Sie die Maus über einen Hyperlink ziehen. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:LinkState:LINK"><apiName>LINK</apiName><shortdesc> 
	 Wert für den normalen, standardmäßigen Hyperlinkstatus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>link</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 Wert für den normalen, standardmäßigen Hyperlinkstatus. 
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:ParagraphElement"><apiName>ParagraphElement</apiName><shortdesc> 
	 Die ParagraphElement-Klasse repräsentiert einen Absatz in der Textflusshierarchie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:ParagraphFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die ParagraphElement-Klasse repräsentiert einen Absatz in der Textflusshierarchie. Das übergeordnete Element ist ein ParagraphFormattedElement und die untergeordneten Elemente können Bereiche (SpanElement), Bilder (inLineGraphicElement), Hyperlinks (LinkElement) und TCY-Elemente (Tatechuuyoko - ta-tae-chu-yo-ko) (TCYElement) enthalten. Der Absatztext wird in einem oder mehreren SpanElement-Objekten gespeichert, die die Textbereiche mit den gemeinsam verwendeten Attributen definieren. Ein TCYElement-Objekt definiert einen kurzen japanischen Text, der senkrecht zum Rest der Zeile steht, wie in einem waagerechten Text in einer senkrechten Zeile. Außerdem kann ein TCYElement mehrere Bereiche enthalten.
	 
	 </apiDesc><example conref="examples\ParagraphElementExample.as"/><example conref="examples\ParagraphElementExample2.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link><link href="flashx.textLayout.elements.xml#TCYElement"><linktext>TCYElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:ParagraphElement:ParagraphElement"><apiName>ParagraphElement</apiName><shortdesc> Konstruktor - repräsentiert einen Absatz in einem Textfluss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - repräsentiert einen Absatz in einem Textfluss. 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:ParagraphElement:findNextAtomBoundary"><apiName>findNextAtomBoundary</apiName><shortdesc> 
		 Führt einen Suchlauf vorwärts von der angegebenen Position an durch, um nach der Position im Text des nächsten Atoms zu suchen, und gibt die Indexposition zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indexposition im Text des folgenden Atoms
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> Startposition im Text, beginnend bei „0“
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Führt einen Suchlauf vorwärts von der angegebenen Position an durch, um nach der Position im Text des nächsten Atoms zu suchen, und gibt die Indexposition zurück. Der Begriff Atom bezeichnet sowohl Grafikelemente als auch Zeichen (auch Gruppen von kombinierten Zeichen), die unsichtbaren Entitäten, aus denen eine Textzeile besteht.
		 
		 </apiDesc><example conref="examples\ParagraphElement_findNextAtomBoundary.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:findNextWordBoundary"><apiName>findNextWordBoundary</apiName><shortdesc> 
		 Gibt die Indexposition der nächsten Wortgrenze im Text zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indexposition im Text der nächsten Wortgrenze
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> Startposition im Text, beginnend bei „0“
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Gibt die Indexposition der nächsten Wortgrenze im Text zurück.
		 
		 <p>Führt einen Suchlauf vorwärts von der angegebenen Position an durch, um nach der nächsten Position im Text zu suchen, an der ein Wort beginnt oder endet. </p>
		 
		 </apiDesc><example conref="examples\ParagraphElement_findNextWordBoundary.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:findPreviousAtomBoundary"><apiName>findPreviousAtomBoundary</apiName><shortdesc> 
		 Führt einen Suchlauf rückwärts von der zur Verfügung gestellten Position an durch, um nach der Position im Text des vorherigen Atoms zu suchen und gibt die Indexposition zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indexposition im Text des vorherigen Clusters
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> Startposition im Text, beginnend bei „0“
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Führt einen Suchlauf rückwärts von der zur Verfügung gestellten Position an durch, um nach der Position im Text des vorherigen Atoms zu suchen und gibt die Indexposition zurück. Der Begriff Atom bezeichnet sowohl Grafikelemente als auch Zeichen (auch Gruppen von kombinierten Zeichen), die unsichtbaren Entitäten, aus denen eine Textzeile besteht.
		 
		 </apiDesc><example conref="examples\ParagraphElement_findPreviousAtomBoundary.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:findPreviousWordBoundary"><apiName>findPreviousWordBoundary</apiName><shortdesc> 
		 Gibt die Indexposition der vorherigen Wortgrenze im Text zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indexposition im Text der vorherigen Wortgrenze
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> Startposition im Text, beginnend bei „0“
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Gibt die Indexposition der vorherigen Wortgrenze im Text zurück.
		 
		 <p>Führt einen Suchlauf rückwärts von der angegebenen Position an durch, um nach der vorherigen Position im Text zu suchen, an der ein Wort beginnt oder endet. </p>
		 
		 </apiDesc><example conref="examples\ParagraphElement_findPreviousWordBoundary.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:getNextParagraph"><apiName>getNextParagraph</apiName><shortdesc> Gibt den Absatz zurück, der diesem folgt, oder den Wert „null“, wenn keine weiteren Absätze vorhanden sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Textabsatz oder „null“, wenn keine weiteren Absätze vorhanden sind.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt den Absatz zurück, der diesem folgt, oder den Wert „null“, wenn keine weiteren Absätze vorhanden sind. 
		 
		 </apiDesc><example conref="examples\ParagraphElement_getNextParagraph.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement/getPreviousParagraph"><linktext>getPreviousParagraph</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:getPreviousParagraph"><apiName>getPreviousParagraph</apiName><shortdesc> Gibt den Absatz zurück, der diesem vorangeht, oder null, wenn dieser Absatz der erste im TextFlow ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt den Absatz zurück, der diesem vorangeht, oder null, wenn dieser Absatz der erste im TextFlow ist. 
		 
		 </apiDesc><example conref="examples\ParagraphElement_getPreviousParagraph.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement/getNextParagraph"><linktext>getNextParagraph</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.elements:TextRange"><apiName>TextRange</apiName><shortdesc>
	 Eine schreibgeschützte Klasse, die einen Bereich mit zusammenhängendem Text beschreibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Eine schreibgeschützte Klasse, die einen Bereich mit zusammenhängendem Text beschreibt. Ein solcher Bereich tritt auf, wenn Sie einen Textabschnitt auswählen. Der Bereich besteht aus dem Ankerpunkt der Auswahl <codeph>anchorPosition</codeph> und dem durch Aktionen zu ändernden Punkt <codeph>activePosition</codeph>. Während Blockauswahlen geändert und erweitert werden, verbleibt <codeph>anchorPosition</codeph> unverändert und <codeph>activePosition</codeph> wird geändert. Die Ankerposition kann im Text vor oder nach der aktiven Position platziert werden.
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.edit.xml#SelectionState"><linktext>SelectionState</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:TextRange:TextRange"><apiName>TextRange</apiName><shortdesc> Konstruktor - erstellt eine neue TextRange-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>root</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier><apiDesc>der mit der Auswahl verknüpfte TextFlow.
		 </apiDesc></apiParam><apiParam><apiItemName>anchorIndex</apiItemName><apiType value="int"/><apiDesc>die Indexposition des Ankers in der Auswahl. Die erste Position in diesem Text ist die Position 0.
		 </apiDesc></apiParam><apiParam><apiItemName>activeIndex</apiItemName><apiType value="int"/><apiDesc>die Indexposition der aktiven Position in der Auswahl. Die erste Position in diesem Text ist die Position 0. 
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> Konstruktor - erstellt eine neue TextRange-Instanz. Eine TextRange kann (-1,-1) sein, wobei kein Bereich angegeben wird, oder ein Wertepaar von 0 bis <codeph>TextFlow.textLength</codeph>.
		
		</apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>FlowElement.textLength</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.elements:TextRange:updateRange"><apiName>updateRange</apiName><shortdesc> Aktualisiert den Bereich mit neuen Werten für die Ankerposition oder die aktive Position.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>„true“, wenn die Auswahl geändert wurde.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>newAnchorPosition</apiItemName><apiType value="int"/><apiDesc>Die Ankerindexposition der Auswahl.
		  </apiDesc></apiParam><apiParam><apiItemName>newActivePosition</apiItemName><apiType value="int"/><apiDesc>die aktive Indexposition der Auswahl.
		  </apiDesc></apiParam></apiOperationDef><apiDesc> Aktualisiert den Bereich mit neuen Werten für die Ankerposition oder die aktive Position.
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:TextRange:absoluteEnd:get"><apiName>absoluteEnd</apiName><shortdesc> Das Ende der Auswahl als eine absolute Position im TextFlow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Das Ende der Auswahl als eine absolute Position im TextFlow.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:absoluteStart:get"><apiName>absoluteStart</apiName><shortdesc> Der Anfang der Auswahl als eine absolute Position im TextFlow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Der Anfang der Auswahl als eine absolute Position im TextFlow.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:activePosition:get"><apiName>activePosition</apiName><shortdesc> Aktive Position der Auswahl als eine absolute Position im TextFlow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Aktive Position der Auswahl als eine absolute Position im TextFlow.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:anchorPosition:get"><apiName>anchorPosition</apiName><shortdesc> Ankerposition der Auswahl als eine absolute Position im TextFlow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> Ankerposition der Auswahl als eine absolute Position im TextFlow.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:textFlow:get"><apiName>textFlow</apiName><shortdesc> Gibt den mit der Auswahl verknüpften TextFlow zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc> Gibt den mit der Auswahl verknüpften TextFlow zurück.
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:SubParagraphGroupElement"><apiName>SubParagraphGroupElement</apiName><shortdesc> 
	 Die SubParagraphGroupElement-Klasse fasst FlowLeafElements zusammen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die SubParagraphGroupElement-Klasse fasst FlowLeafElements zusammen. Ein SubParagraphGroupElement ist einem ParagraphElement-Objekt untergeordnet und kann ein oder mehrere FlowLeafElement-Objekte als untergeordnete Elemente enthalten.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowLeafElement"><linktext>FlowLeafElement</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TCYElement"><linktext>TCYElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:SubParagraphGroupElement:SubParagraphGroupElement"><apiName>SubParagraphGroupElement</apiName><shortdesc> Konstruktor - erstellt eine neue SubParagraphGroupElement-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt eine neue SubParagraphGroupElement-Instanz.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:SpanElement"><apiName>SpanElement</apiName><shortdesc> 
	Die SpanElement-Klasse repräsentiert einen Textabschnitt, auf den ein einzelner Satz von Formatierungsattributen angewendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowLeafElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	Die SpanElement-Klasse repräsentiert einen Textabschnitt, auf den ein einzelner Satz von Formatierungsattributen angewendet wird. SpanElement-Objekte enthalten den Text in einem Absatz. Ein einfacher Absatz (ParagraphElement) enthält ein oder mehrere SpanElement-Objekte. 
	
	<p>Ein ParagraphElement enthält ein einzelnes SpanElement-Objekt, wenn der ganze Text im Absatz dieselben Attribute gemeinsam verwendet. Es enthält mehrere SpanElement-Objekte, wenn auf den Text im Absatz mehrere Formate angewendet werden.</p>
	
	</apiDesc><example conref="SpanElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement"><linktext>FlowElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:SpanElement:SpanElement"><apiName>SpanElement</apiName><shortdesc> Konstruktor - erstellt ein SpanElement-Objekt, um einen Textabschnitt in einem Absatz aufzunehmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt ein SpanElement-Objekt, um einen Textabschnitt in einem Absatz aufzunehmen.
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:SpanElement:getText"><apiName>getText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>paragraphSeparator</apiItemName><apiType value="String"/><apiData> </apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:SpanElement:tlf_internal:normalizeRange"><apiName>normalizeRange</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="tlf_internal"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>normalizeStart</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>normalizeEnd</apiItemName><apiType value="uint"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:SpanElement:replaceText"><apiName>replaceText</apiName><shortdesc> 
		 Aktualisiert den Text im Textbereich basierend auf den festgelegten Start- und Endpositionen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Die festgelegte <codeph>relativeStartPosition</codeph> oder <codeph>relativeEndPosition</codeph> liegt außerhalb des zulässigen Bereichs oder ein Ersatzpaar wird infolge der Ersetzung geteilt.
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>relativeStartPosition</apiItemName><apiType value="int"/><apiDesc>Die Indexposition am Anfang des zu ersetzenden Texts relativ zum Anfang des Bereichs. Das erste Zeichen im Bereich befindet sich an der Position 0.
		  </apiDesc></apiParam><apiParam><apiItemName>relativeEndPosition</apiItemName><apiType value="int"/><apiDesc>Die Indexposition eins nach dem letzten Zeichen des zu ersetzenden Texts relativ zum Beginn des Bereichs. Legen Sie diesen Wert gleich der <codeph>relativeStartPos</codeph> fest, wenn Text eingefügt werden soll. 
		  </apiDesc></apiParam><apiParam><apiItemName>textValue</apiItemName><apiType value="String"/><apiDesc>Der Ersetzungstext oder der ggf. hinzuzufügende Text.
		 
		  </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Aktualisiert den Text im Textbereich basierend auf den festgelegten Start- und Endpositionen. Um Text einzufügen, legen Sie für die Endposition denselben Wert fest wie für die Anfangsposition. Um dem vorhandenen Text im Bereich weiteren Text anzuhängen, legen Sie die Anfangs- und Endposition gleich der Länge des vorhandenen Textes fest.
		 
		 <p>Der ersetzte Text enthält das Startzeichen bis zum Endzeichen (wobei dieses nicht einbezogen wird).</p>
		 
		  </apiDesc><example conref="SpanElement_replaceTextExample.as"/></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:SpanElement:mxmlChildren:get"><apiName>mxmlChildren</apiName><shortdesc> 
		 Legt Text anhand des Inhalts zwischen Span-Tags fest; untergeordnete Elemente werden immer gelöscht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiException><apiDesc>wenn das Array-Element kein SpecialCharacterElement oder ein String ist
		 </apiDesc><apiItemName>TypeError</apiItemName><apiOperationClassifier>TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> 
		 Legt Text anhand des Inhalts zwischen Span-Tags fest; untergeordnete Elemente werden immer gelöscht. Diese Eigenschaft ist zur Verwendung bei MXML-kompilierten Importen vorgesehen. Wenn TLF- Markupelemente weitere TLF-Markupelemente als untergeordnete Elemente enthalten, werden die untergeordneten Elemente dieser Eigenschaft zugewiesen.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:SpanElement:text:set"><apiName>text</apiName><shortdesc> 
		 Empfängt den String mit Text, den dieses SpanElement-Objekt aufnimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 Empfängt den String mit Text, den dieses SpanElement-Objekt aufnimmt.
		 
		 <p>Der Text eines Bereiches enthält nicht den Wagenrücklauf (CR) am Ende des Absatzes, dieser ist jedoch im Wert von <codeph>textLength</codeph> enthalten.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:ParagraphFormattedElement"><apiName>ParagraphFormattedElement</apiName><shortdesc> Die ParagraphFormattedElement-Klasse ist eine abstrakte Basisklasse für FlowElement-Klassen mit Absatzeigenschaften.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> Die ParagraphFormattedElement-Klasse ist eine abstrakte Basisklasse für FlowElement-Klassen mit Absatzeigenschaften.
	
	<p>Sie können kein ParagraphFormattedElement-Objekt direkt erstellen. Durch das Aufrufen von <codeph>new ParagraphFormattedElement()</codeph> wird ein Ausnahmefehler ausgegeben.</p> 
	
	</apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#ContainerFormattedElement"><linktext>ContainerFormattedElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link></related-links></apiClassifier><apiClassifier id="flashx.textLayout.elements:DivElement"><apiName>DivElement</apiName><shortdesc> 
	 Die DivElement-Klasse definiert ein Element zum Gruppieren von Absätzen (ParagraphElement-Objekte).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die DivElement-Klasse definiert ein Element zum Gruppieren von Absätzen (ParagraphElement-Objekte). Wenn eine Gruppe von Absätzen die gleichen Formatierungsattribute verwenden soll, können Sie sie in einem DivElement-Objekt gruppieren und die Attribute darauf anwenden. Die Absätze übernehmen die Attribute vom DivElement-Objekt.
	 
	 </apiDesc><example conref="examples\DivElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:DivElement:DivElement"><apiName>DivElement</apiName><shortdesc> Konstruktor - erstellt ein neues DivElement-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt ein neues DivElement-Objekt.
			
		</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:Configuration"><apiName>Configuration</apiName><shortdesc> 
	Die Configuration-Klasse ist eine primäre Integrationsmöglichkeit zwischen dem Text Layout Framework und einer Anwendung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.elements:IConfiguration</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	Die Configuration-Klasse ist eine primäre Integrationsmöglichkeit zwischen dem Text Layout Framework und einer Anwendung. Sie können ein Configuration-Objekt bei der Erstellung einer neuen TextFlow-Instanz als Parameter dem <codeph>TextFlow()</codeph>-Konstruktor hinzufügen. Dadurch kann die Anwendung zunächst steuern, wie sich das Text Layout Framework verhält.
	
	<p>Mithilfe der Configuration-Klasse können Sie Ausgangs-, Absatz- und Containerformate für den Textfluss mithilfe der <codeph>textFlowInitialFormat</codeph>-Eigenschaft festlegen. Außerdem können Sie anfängliche Formatattribute für Hyperlinks, Auswahl, Bildlauf und Verwendung der Tabulator- und Eingabetaste festlegen.</p>
	
	</apiDesc><example conref="examples\ConfigurationExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>TextDecoration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:Configuration:Configuration"><apiName>Configuration</apiName><shortdesc> Konstruktor - erstellt eine Standardkonfiguration.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initializeWithDefaults</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Legt fest, ob die Konfiguration mit den Standardwerten initialisiert wird. Der Standardwert lautet <codeph>true</codeph>. Wenn <codeph>false</codeph> festgelegt wird, erfolgt die Initialisierung ohne Standardwerte, wodurch einige Objekte gespeichert werden. Die <codeph>clone()</codeph>-Methode legt hierfür <codeph>false</codeph> fest und kopiert die Eigenschaften aus dem ursprünglichen Objekt.
		
		</apiDesc></apiParam></apiConstructorDef><apiDesc> Konstruktor - erstellt eine Standardkonfiguration. 
		
		</apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.elements:Configuration:clone"><apiName>clone</apiName><shortdesc> Erstellt einen Klon des Configuration-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.elements:Configuration</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Erstellt einen Klon des Configuration-Objekts.
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:Configuration:defaultLinkActiveFormat:get"><apiName>defaultLinkActiveFormat</apiName><shortdesc conref="IConfiguration#defaultLinkActiveFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#defaultLinkActiveFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkActiveFormat"><linktext>FlowElement.linkActiveFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:defaultLinkHoverFormat:get"><apiName>defaultLinkHoverFormat</apiName><shortdesc conref="IConfiguration#defaultLinkHoverFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#defaultLinkHoverFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkHoverFormat"><linktext>FlowElement.linkHoverFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:defaultLinkNormalFormat:get"><apiName>defaultLinkNormalFormat</apiName><shortdesc conref="IConfiguration#defaultLinkNormalFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#defaultLinkNormalFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkNormalFormat"><linktext>FlowElement.linkNormalFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:enableAccessibility:get"><apiName>enableAccessibility</apiName><shortdesc conref="IConfiguration#enableAccessibility"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#enableAccessibility"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:flowComposerClass:get"><apiName>flowComposerClass</apiName><shortdesc conref="IConfiguration#flowComposerClass"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Class"/></apiValueDef><apiDesc conref="IConfiguration#flowComposerClass"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:focusedSelectionFormat:get"><apiName>focusedSelectionFormat</apiName><shortdesc conref="IConfiguration#focusedSelectionFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#focusedSelectionFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/focusedSelectionFormat"><linktext>SelectionManager.focusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:inactiveSelectionFormat:get"><apiName>inactiveSelectionFormat</apiName><shortdesc conref="IConfiguration#inactiveSelectionFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#inactiveSelectionFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/inactiveSelectionFormat"><linktext>SelectionManager.inactiveSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:inlineGraphicResolverFunction:get"><apiName>inlineGraphicResolverFunction</apiName><shortdesc conref="IConfiguration#inlineGraphicResolver"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc conref="IConfiguration#inlineGraphicResolver"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:manageEnterKey:get"><apiName>manageEnterKey</apiName><shortdesc conref="IConfiguration#manageEnterKey"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#manageEnterKey"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:manageTabKey:get"><apiName>manageTabKey</apiName><shortdesc conref="IConfiguration#manageTabKey"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#manageTabKey"> </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:overflowPolicy:get"><apiName>overflowPolicy</apiName><shortdesc conref="IConfiguration#overflowPolicy"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="IConfiguration#overflowPolicy"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#OverflowPolicy"><linktext>OverflowPolicy</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:releaseLineCreationData:get"><apiName>releaseLineCreationData</apiName><shortdesc conref="IConfiguration#releaseLineCreationData"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#releaseLineCreationData"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="" invalidHref="flash.text.engine.xml#TextBlock/releaseLineCreationData"><linktext>TextBlock.releaseLineCreationData</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollDragDelay:get"><apiName>scrollDragDelay</apiName><shortdesc conref="IConfiguration#scrollDragDelay"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollDragDelay"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollDragPixels:get"><apiName>scrollDragPixels</apiName><shortdesc conref="IConfiguration#scrollDragPixels"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollDragPixels"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollMouseWheelMultiplier:get"><apiName>scrollMouseWheelMultiplier</apiName><shortdesc conref="IConfiguration#scrollMouseWheelMultiplier"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollMouseWheelMultiplier"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollPagePercentage:get"><apiName>scrollPagePercentage</apiName><shortdesc conref="IConfiguration#scrollPagePercentage">
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollPagePercentage">
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:textFlowInitialFormat:get"><apiName>textFlowInitialFormat</apiName><shortdesc conref="IConfiguration#textFlowInitialFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#textFlowInitialFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:unfocusedSelectionFormat:get"><apiName>unfocusedSelectionFormat</apiName><shortdesc conref="IConfiguration#unfocusedSelectionFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#unfocusedSelectionFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/unfocusedSelectionFormat"><linktext>SelectionManager.unfocusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:FlowElement"><apiName>FlowElement</apiName><shortdesc>
 Der Text in einem Textfluss wird in Baumform mit den Elementen des Baums gespeichert, die logische Unterteilungen innerhalb des Texts repräsentieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.formats:ITextLayoutFormat</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Der Text in einem Textfluss wird in Baumform mit den Elementen des Baums gespeichert, die logische Unterteilungen innerhalb des Texts repräsentieren. Die FlowElement-Klasse ist die abstrakte Basisklasse aller Objekte in diesem Baum. FlowElement-Objekte repräsentieren Absätze, Textbereiche innerhalb von Absätzen und Absatzgruppen.
 
 <p>Der Stamm eines zusammenstellbaren FlowElement-Baums ist immer ein TextFlow-Objekt. Blattelemente des Baums sind immer Unterklassen der FlowLeafElement-Klasse. Alle in einem zusammenstellbaren TextFlow angeordneten Blätter haben ein übergeordnetes ParagraphElement.
 </p> 
 
 <p>Sie können kein FlowElement-Objekt direkt erstellen. Durch das Aufrufen von <codeph>new FlowElement()</codeph> wird ein Ausnahmefehler ausgegeben.</p>
 
 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowGroupElement"><linktext>FlowGroupElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowLeafElement"><linktext>FlowLeafElement</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:FlowElement:FlowElement"><apiName>FlowElement</apiName><shortdesc> Basisklasse - das Aufrufen eines neuen FlowElement() gibt einen Ausnahmefehler aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Basisklasse - das Aufrufen eines <codeph>neuen FlowElement()</codeph> gibt einen Ausnahmefehler aus.
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:FlowElement:clearStyle"><apiName>clearStyle</apiName><shortdesc> Löscht den vom styleProp-Parameter festgelegten Stil aus diesem FlowElement-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Der Name des zu löschenden Stils.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Löscht den vom <codeph>styleProp</codeph>-Parameter festgelegten Stil von diesem FlowElement-Objekt. Legt den Wert auf <codeph>undefined</codeph> fest.
		 
		 </apiDesc><example conref="examples\FlowElement_clearStyleExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getStyle()"><linktext>getStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/setStyle()"><linktext>setStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:deepCopy"><apiName>deepCopy</apiName><shortdesc>
		 Erstellt eine tiefe Kopie dieses FlowElement-Objekts, einschließlich untergeordneter Elemente, indem der Inhalt zwischen zwei festgelegten Zeichenpositionen kopiert und die Kopie als FlowElement-Objekt zurückgegeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das vom tiefen Kopiervorgang erstellte Objekt.
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>relative Textposition des ersten zu kopierenden Zeichens. Die erste Position ist 0.
		 </apiDesc></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>relative Textposition des letzten zu kopierenden Zeichens. Ein Wert von -1 bedeutet, dass alle Zeichen bis zum Ende kopiert werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Erstellt eine tiefe Kopie dieses FlowElement-Objekts, einschließlich untergeordneter Elemente, indem der Inhalt zwischen zwei festgelegten Zeichenpositionen kopiert und die Kopie als FlowElement-Objekt zurückgegeben wird.
		 
		 <p>Sind keine Argumente vorhanden, kopiert <codeph>deepCopy()</codeph> standardmäßig das vollständige Element.</p>
		 
		 </apiDesc><example conref="examples\FlowElement_deepCopyExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/shallowCopy()"><linktext>shallowCopy()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:equalUserStyles"><apiName>equalUserStyles</apiName><shortdesc> Vergleicht die userStyles mit elem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Wert „true“, wenn die Benutzerstile gleich sind; andernfalls Wert „false“.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>otherElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>Das FlowElement-Objekt, mit dem die Benutzerstile verglichen werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Vergleicht die userStyles mit elem. 
		 
		 </apiDesc><example conref="examples\FlowElement_equalUserStylesExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getStyle()"><linktext>getStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/setStyle()"><linktext>setStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getAbsoluteStart"><apiName>getAbsoluteStart</apiName><shortdesc>
		 Gibt die Startposition des Elements im Textfluss als absolute Indexposition zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Indexposition des Elementanfangs vom Beginn des TextFlow-Objekts.
 		 
 		 </apiDesc><apiType value="int"/></apiReturn></apiOperationDef><apiDesc>
		 Gibt die Startposition des Elements im Textfluss als absolute Indexposition zurück. Das erste Zeichen im Textfluss ist Position 0.
		 
		 </apiDesc><example conref="examples\FlowElement_getAbsoluteStartExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/parentRelativeStart"><linktext>parentRelativeStart</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/TextFlow"><linktext>TextFlow</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getCharAtPosition"><apiName>getCharAtPosition</apiName><shortdesc> 
		Gibt das Zeichen an der festgelegten Position relativ zu diesem FlowElement-Objekt zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>String, der das Zeichen enthält.
		
		</apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>Die relative Position des Zeichens in diesem FlowElement-Objekt.
		</apiDesc></apiParam></apiOperationDef><apiDesc> 
		Gibt das Zeichen an der festgelegten Position relativ zu diesem FlowElement-Objekt zurück. Das erste Zeichen befindet sich an der relativen Position 0.
		
		</apiDesc><example conref="examples\FlowElement_getCharAtPositionExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getCharCodeAtPosition()"><linktext>getCharCodeAtPosition()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getCharCodeAtPosition"><apiName>getCharCodeAtPosition</apiName><shortdesc> Gibt den Zeichencode an der festgelegten Position relativ zu diesem FlowElement zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>der Unicode-Wert für dieses Zeichen an der festgelegten Position.
		
		</apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>	Die relative Position des Zeichens in diesem FlowElement-Objekt.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> Gibt den Zeichencode an der festgelegten Position relativ zu diesem FlowElement zurück. Das erste Zeichen befindet sich an der relativen Position 0.
		
		</apiDesc><example conref="examples\FlowElement_getCharCodeAtPositionExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getCharAtPosition()"><linktext>getCharAtPosition()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getElementRelativeStart"><apiName>getElementRelativeStart</apiName><shortdesc>
		 Gibt den Beginn dieses Elements relativ zu einem übergeordneten Element zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das Offset dieses Elements.
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>ancestorElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>Das Element, von dem an nach dem relativen Beginn dieses Elements gesucht wird.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gibt den Beginn dieses Elements relativ zu einem übergeordneten Element zurück. Es wird angenommen, dass das übergeordnete Element zur übergeordneten Kette gehört. Wenn das übergeordnete Element diesem Element direkt übergeordnet ist, entspricht es <codeph>this.parentRelativeStart</codeph>. Wenn das übergeordnete Element zwei Ebenen über diesem Element steht, entspricht es <codeph>parentRelativeStart</codeph> plus <codeph>parent.parentRelativeStart</codeph> usw.
		 
		 </apiDesc><example conref="examples\FlowElement_getElementRelativeStartExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getAbsoluteStart()"><linktext>getAbsoluteStart()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getNextSibling"><apiName>getNextSibling</apiName><shortdesc> Gibt das nächste gleichgeordnete FlowElement in der Textflusshierarchie zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das nächste FlowElement-Objekt des gleichen Typs oder „null“, wenn keine gleichgeordneten Elemente vorhanden sind.
		
		</apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt das nächste gleichgeordnete FlowElement in der Textflusshierarchie zurück. 
		
		</apiDesc><example conref="examples\FlowElement_getNextSiblingExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getPreviousSibling()"><linktext>getPreviousSibling()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getParagraph"><apiName>getParagraph</apiName><shortdesc>
		 Gibt das mit diesem Element verknüpfte ParagraphElement-Objekt zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das ParagraphElement-Objekt, das mit diesem FlowElement-Objekt verknüpft ist.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Gibt das mit diesem Element verknüpfte ParagraphElement-Objekt zurück. Die Textflusshierarchie wird durchsucht und das erste ParagraphElement-Objekt wird zurückgegeben.
		 
		 </apiDesc><example conref="examples\FlowElement_getParagraphExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getTextFlow()"><linktext>getTextFlow()</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getPreviousSibling"><apiName>getPreviousSibling</apiName><shortdesc> Gibt das vorherige gleichgeordnete FlowElement in der Textflusshierarchie zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das vorherige FlowElement-Objekt des gleichen Typs oder „null“, wenn kein vorheriges gleichgeordnetes Element vorhanden ist.
		
		</apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt das vorherige gleichgeordnete FlowElement in der Textflusshierarchie zurück. 
		
		</apiDesc><example conref="examples\FlowElement_getPreviousSiblingExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getNextSibling()"><linktext>getNextSibling()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getStyle"><apiName>getStyle</apiName><shortdesc> Gibt den Wert des vom styleProp-Parameter festgelegten Stils zurück. Dieser legt den Stilnamen fest und kann einen beliebigen Benutzerstilnamen enthalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Wert des festgelegten Stils. Der Typ richtet sich nach dem Typ des Stils, auf den zugegriffen wird. Gibt <codeph>undefined</codeph> zurück, wenn der Stil nicht festgelegt ist.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Der Name des Stils, dessen Wert abgerufen werden soll.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Gibt den Wert des vom <codeph>styleProp</codeph>-Parameter festgelegten Stils zurück. Dieser legt den Stilnamen fest und kann einen beliebigen Benutzerstilnamen enthalten. Greift auf einen vorhandenen Bereich, Absatz, Textfluss oder Containerstil zu. Durchsucht die übergeordnete Struktur, wenn der Wert eines Stils <codeph>undefined</codeph> auf einem bestimmten Element entspricht.
		 
		 </apiDesc><example conref="examples\FlowElement_getStyleExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/clearStyle()"><linktext>clearStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/setStyle()"><linktext>setStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getTextFlow"><apiName>getTextFlow</apiName><shortdesc>
		 Durchsucht die Textflusshierarchie in aufsteigender Richtung, um das TextFlow-Stammobjekt für das Element zurückzugeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das TextFlow-Stammobjekt für dieses FlowElement-Objekt.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Durchsucht die Textflusshierarchie in aufsteigender Richtung, um das TextFlow-Stammobjekt für das Element zurückzugeben.
		 
		 </apiDesc><example conref="examples\FlowElement_getTextFlowExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getText"><apiName>getText</apiName><shortdesc> 
		 Ruft den angegebenen Textbereich aus einem Flusselement ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der angeforderte Text.
		 
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Anfangsposition des abzurufenden Textbereichs in Relation zum FlowElement
		 </apiDesc></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Endposition des abzurufenden Textbereichs in Relation zum Anfang des FlowElement, -1 für bis zum Ende des Elements.
		 </apiDesc></apiParam><apiParam><apiItemName>paragraphSeparator</apiItemName><apiType value="String"/><apiData> </apiData><apiDesc>Zeichen, das zwischen Absätze gesetzt werden soll
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Ruft den angegebenen Textbereich aus einem Flusselement ab.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:initialized"><apiName>initialized</apiName><shortdesc> </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>
		 </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>Der vom Dokument für den Verweis auf dieses Objekt verwendete Bezeichner.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:setStyle"><apiName>setStyle</apiName><shortdesc> Legt für den vom styleProp-Parameter festgelegten Stil den vom newValue-Parameter festgelegten Wert fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Der Name des festzulegenden Stils.
		</apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="any"/><apiDesc>Der Wert, auf den der Stil festgestellt werden soll.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> Legt für den vom <codeph>styleProp</codeph>-Parameter festgelegten Stil den vom <codeph>newValue</codeph>-Parameter festgelegten Wert fest. Sie können einen Stil für einen Bereich, Absatz, Textfluss oder Container festlegen, einschließlich eines beliebigen Benutzername-Wert-Paars.
		
		<p><b>Hinweis:</b> Wenn Sie einen benutzerdefinierten Stil zuweisen, kann dieser von Text Layout Framework importiert und exportiert, aber nicht von kompiliertem MXML unterstützt werden. </p>
		
		</apiDesc><example conref="examples\FlowElement_setStyleExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/clearStyle()"><linktext>clearStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/getStyle()"><linktext>getStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:shallowCopy"><apiName>shallowCopy</apiName><shortdesc>
		 Erstellt eine Kopie dieses FlowElement-Objekts, indem der Inhalt zwischen zwei angegebenen Zeichenpositionen kopiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das vom Kopiervorgang erstellte Objekt.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die relative Textposition des ersten zu kopierenden Zeichens. Die erste Position ist 0.
		 </apiDesc></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die relative Textposition des letzten zu kopierenden Zeichens. Der Wert -1 bedeutet, dass alle Zeichen bis zum Ende kopiert werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Erstellt eine Kopie dieses FlowElement-Objekts, indem der Inhalt zwischen zwei angegebenen Zeichenpositionen kopiert wird. Die Kopie wird als neues FlowElement-Objekt zurückgegeben. Im Gegensatz zu <codeph>deepCopy()</codeph> werden bei <codeph>shallowCopy()</codeph> keine untergeordneten Elemente dieses FlowElement-Objekts kopiert. 
		 
		 <p>Sind keine Argumente vorhanden, kopiert <codeph>shallowCopy()</codeph> standardmäßig den gesamten Inhalt.</p>
		 
		 </apiDesc><example conref="examples\FlowElement_shallowCopyExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/deepCopy()"><linktext>deepCopy()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:splitAtPosition"><apiName>splitAtPosition</apiName><shortdesc> 
		 Teilt dieses FlowElement-Objekt an der vom relativePosition-Parameter angegebenen Position, die einer relativen Position im Text für dieses Element entspricht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>falls <codeph>relativePosition</codeph> größer als <codeph>textLength</codeph> oder kleiner als 0 ist
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>das neue Objekt, das den Inhalt des ursprünglichen Objekts enthält, ab der angegebenen Position
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>die Position, an der der Inhalt des ursprünglichen Objekts geteilt werden soll, wobei die erste Position bei 0 beginnt
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Teilt dieses FlowElement-Objekt an der vom <codeph>relativePosition</codeph>-Parameter angegebenen Position, die einer relativen Position im Text für dieses Element entspricht. Durch diese Methode wird nur das SpanElement- und FlowGroupElement-Objekt geteilt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:FlowElement:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Grundlinie an, an dem die dominierende Grundlinie ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Grundlinie an, an der die dominierende Grundlinie ausgerichtet wird. Wenn Sie beispielsweise für <codeph>dominantBaseline</codeph> den Wert ASCENT und für <codeph>alignmentBaseline</codeph> den Wert DESCENT festlegen, wird der obere Textrand an der DESCENT-Grundlinie oder unter der Linie ausgerichtet. Das größte Element in der Zeile bestimmt im Allgemeinen die Grundlinien.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert USE_DOMINANT_BASELINE verwendet.</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 TextLayoutFormat: Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit dem alpha-Wert 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 1 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 TextLayoutFormat: Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Kann entweder der Konstantenwert <codeph>BackgroundColor.TRANSPARENT</codeph> oder ein hexadezimaler Wert sein, der die drei RGB-Werte in 8-Bit (rot, grün, blau) festlegt; z. B. 0xFF0000 für Rot und 0x00FF00 für Grün.
		 <p>Zulässige Werte als String: flashx.textLayout.formats.BackgroundColor.TRANSPARENT, flashx.textLayout.formats.FormatValue.INHERIT und Einheiten von 0x0 bis 0xffffffff.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TRANSPARENT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 TextLayoutFormat: Betrag, um den die Grundlinie vom dominantBaseline-Wert verschoben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Betrag, um den die Grundlinie vom <codeph>dominantBaseline</codeph>-Wert verschoben wird. Einheiten in Pixeln oder einem Prozentwert für <codeph>fontSize</codeph> (geben Sie in diesem Fall einen Stringwert wie beispielsweise 140 % ein). Positive Werte verschieben die Zeile bei horizontalem Text nach oben (bei vertikalem nach rechts), negative Werte verschieben sie bei horizontalem Text nach unten (bei vertikalem nach links). 
		 <p>Zulässige Werte sind flashx.textLayout.formats.BaselineShift.SUPERSCRIPT, flashx.textLayout.formats.BaselineShift.SUBSCRIPT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 und 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0.0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 TextLayoutFormat: Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an. Zeilen werden entweder von oben nach unten (<codeph>BlockProgression.TB</codeph> für horizontalen Text) oder von rechts nach links (<codeph>BlockProgression.RL</codeph> für vertikalen Text) platziert.
		 <p>Zulässige Werte sind flashx.textLayout.formats.BlockProgression.RL, flashx.textLayout.formats.BlockProgression.TB, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert TB verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Position von Zeilenumbrüchen in einem mehrzeiligen Text an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Position von Zeilenumbrüchen in einem mehrzeiligen Text an. Mit der Einstellung <codeph>BreakOpportunity.AUTO</codeph> wird der Text normal umbrochen. Mit der Einstellung <codeph>BreakOpportunity.NONE</codeph> wird der Text <i>nicht</i> umbrochen, es sei denn, er wird zu lang und die Zeile kann an keiner anderen Position umbrochen werden. Legen Sie <codeph>BreakOpportunity.ANY</codeph> fest, damit die Zeile an einer beliebigen Stelle und nicht nur zwischen den Wörtern umbrochen werden kann. Legen Sie <codeph>BreakOpportunity.ALL</codeph> fest, damit jede typografische Gruppe auf einer einzelnen Zeile platziert wird (hilfreich bei Text in einem Pfad).
		 <p>Zulässige Werte sind flash.text.engine.BreakOpportunity.ALL, flash.text.engine.BreakOpportunity.ANY, flash.text.engine.BreakOpportunity.AUTO, flash.text.engine.BreakOpportunity.NONE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete Art des CFF-Hintings.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete Art des CFF-Hintings. Durch CFF-Hinting wird bestimmt, ob die Flash-Laufzeitumgebung erzwingt, dass starke horizontale Ausläufer in das Subpixel-Raster eingefügt werden oder nicht. Diese Eigenschaft gilt nur, wenn die <codeph>renderingMode</codeph>-Eigenschaft auf <codeph>RenderingMode.CFF</codeph> festgelegt und die Schriftart eingebettet ist (<codeph>fontLookup</codeph>-Eigenschaft auf <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt). Bei kleinen Bildschirmgrößen entsteht durch Hinting ein klar lesbarer Text.
		 <p>Zulässige Werte sind flash.text.engine.CFFHinting.NONE, flash.text.engine.CFFHinting.HORIZONTAL_STEM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert HORIZONTAL_STEM verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:color:get"><apiName>color</apiName><shortdesc>
		 TextLayoutFormat: Farbe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Farbe des Texts. Ein Hexadezimalwert, der drei 8-Bit-RGB-Werte (red, green, blue) angibt; beispielsweise 0xFF0000 für rot und 0x00FF00 für grün. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 TextLayoutFormat: Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Die Spaltenzahl überschreibt die anderen Spalteneinstellungen. Als Wert ist eine ganze Zahl oder <codeph>FormatValue.AUTO</codeph> festgelegt, falls nicht angegeben. Wenn <codeph>columnCount</codeph> nicht festgelegt ist, wird <codeph>columnWidth</codeph> dazu verwendet, so viele Spalten zu erstellen, wie in den Container passen.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT sowie Ganzzahlen von 1 bis 50.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 TextLayoutFormat: Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Wert ist eine Zahl
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 20 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 TextLayoutFormat: Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Wenn Sie die Breite, aber nicht die Anzahl der Spalten festlegen, erstellt TextLayout so viele Spalten dieser Breite wie möglich, wobei die Containerbreite und die <codeph>columnGap</codeph>-Einstellungen zugrunde gelegt werden. Der restliche Raum befindet sich links nach der letzten Spalte. Der Wert ist eine Zahl.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 8000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:computedFormat:get"><apiName>computedFormat</apiName><shortdesc> 
		 Gibt die berechneten Formatattribute zurück, die für dieses Element wirksam sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		 Gibt die berechneten Formatattribute zurück, die für dieses Element wirksam sind. Berücksichtigt die Vererbung von Attributen aus übergeordneten Elementen.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:coreStyles:get"><apiName>coreStyles</apiName><shortdesc> Gibt die Kernstile einer FlowElement-Instanz zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc> Gibt die Kernstile einer FlowElement-Instanz zurück. Gibt eine Kopie der Kernstile zurück. 
		  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernart. Die <codeph>DigitCase.OLD_STYLE</codeph>-Einstellung stellt eine Annäherung an Kleinbuchstaben mit verschiedenen Oberlängen und Unterlängen dar. Die Ziffern haben proportionale Zwischenräume. Dieser Stil ist nur in ausgewählten Schriftarten verfügbar, am häufigsten in einem zusätzlichen oder Expert-Font. Die <codeph>DigitCase.LINING</codeph>-Einstellung hat eine All-Cap-Höhe und erscheint für die Darstellung in Tabellen im Allgemeinen in Monospace.<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitCase.DEFAULT, flash.text.engine.DigitCase.LINING, flash.text.engine.DigitCase.OLD_STYLE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernbreite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernbreite. Dies kann <codeph>DigitWidth.PROPORTIONAL</codeph> sein, was optimal für einzelne Zahlen aussieht, oder <codeph>DigitWidth.TABULAR</codeph>, was optimal für Zahlen in Tabellen, Diagrammen und vertikalen Zeilen funktioniert.<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitWidth.DEFAULT, flash.text.engine.DigitWidth.PROPORTIONAL, flash.text.engine.DigitWidth.TABULAR, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:direction:get"><apiName>direction</apiName><shortdesc>
		 TextLayoutFormat: Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an. Lesereihenfolge von links nach rechts wie in lateinischen Skripten oder von rechts nach links (Arabisch, Hebräisch). Diese Eigenschaft wirkt sich auf die Spaltenanordnung aus, wenn sie auf der Containerebene angewendet wird. Spalten können ebenso wie Text von links nach rechts oder von rechts nach links ausgerichtet sein. Im Folgenden sind einige Beispiele aufgeführt:<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.Direction.LTR, flashx.textLayout.formats.Direction.RTL, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert LTR verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 TextLayoutFormat: Gibt an, welche Elementgrundlinie an der alignmentBaseline ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt an, welche Elementgrundlinie an der <codeph>alignmentBaseline</codeph> ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen. Ein Wert von <codeph>TextBaseline.AUTO</codeph> wählt die dominierende Grundlinie basierend auf der <codeph>locale</codeph>-Eigenschaft des übergeordneten Absatzes. Für Japanisch und Chinesisch ist der ausgewählte Grundlinienwert <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Diese Grundlinienauswahl wird durch die Auswahl der Schriftart und der Schriftgröße bestimmt.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.FormatValue.AUTO, flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Grundlinienposition der ersten Linie im Container an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Grundlinienposition der ersten Linie im Container an. Auf welche Grundlinie diese Eigenschaft verweist, hängt vom Gebietsschema auf Containerebene ab. Für Japanisch und Chinesisch ist es <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Der Offset vom oberen Versatz (oder dem rechten Einzug, wenn für <codeph>blockProgression</codeph> RL eingestellt wurde) des Containers zur Grundlinie der ersten Zeile kann <codeph>BaselineOffset.ASCENT</codeph>, d. h. gleich der Oberlänge der Zeile 
(<codeph>BaselineOffset.LINE_HEIGHT</codeph>) sein und damit der Höhe dieser ersten Zeile entsprechen oder eine beliebige Zahl mit einem Festwert für einen absoluten Abstand sein. <codeph>BaselineOffset.AUTO</codeph> richtet die Oberlänge der Zeile am oberen Versatz des Containers aus.<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>Zulässige Werte: flashx.textLayout.formats.BaselineOffset.AUTO, flashx.textLayout.formats.BaselineOffset.ASCENT, flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		 TextLayoutFormat: Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen. Die Flash-Laufzeitumgebung rendert das Element mit der ersten verfügbaren Schriftart in der Liste. Beispiel: Bei Arial, Helvetica und _sans sucht der Player nach Arial, dann nach Helvetica (wenn Arial nicht gefunden wurde) und anschließend nach _sans.
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert Arial verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 TextLayoutFormat: Zu verwendende Schriftartsuche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Zu verwendende Schriftartsuche. Durch Angeben von <codeph> FontLookup.DEVICE</codeph> werden die auf dem System, das die SWF-Datei ausführt, installierten Schriftarten verwendet. Geräteschriftarten führen zu einer kleineren Filmgröße, der Text wird jedoch auf verschiedenen Systemen und Plattformen nicht unbedingt auf dieselbe Weise wiedergegeben. Durch Festlegen von <codeph>FontLookup.EMBEDDED_CFF</codeph> werden Schriftkonturen verwendet, die in der veröffentlichten SWF-Datei eingebettet sind. Eingebettete Schriftarten erhöhen die Größe der SWF-Datei (manchmal erheblich), der Text wird jedoch konsistent in der gewählten Schriftart angezeigt.
		 <p>Zulässige Werte sind flash.text.engine.FontLookup.DEVICE, flash.text.engine.FontLookup.EMBEDDED_CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEVICE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 TextLayoutFormat: Die Textgröße in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die Textgröße in Pixeln.
		 <p>Zulässige Werte sind Zahlen von 1 bis 720 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 12 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 TextLayoutFormat: Stil des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Stil des Texts. Kann <codeph>FontPosture.NORMAL</codeph> für einfachen Text oder <codeph>FontPosture.ITALIC</codeph> für Kursivschrift sein. Diese Eigenschaft gilt nur für Geräteschriftarten (<codeph>fontLookup</codeph>-Eigenschaft wird festgelegt auf flash.text.engine.FontLookup.DEVICE).
		 <p>Zulässige Werte sind flash.text.engine.FontPosture.NORMAL, flash.text.engine.FontPosture.ITALIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 TextLayoutFormat: Schriftartstärke.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Schriftartstärke. Kann <codeph>FontWeight.NORMAL</codeph> für normalen Text oder <codeph>FontWeight.BOLD</codeph> sein. Wird nur auf Geräteschriftarten angewendet (für <codeph>fontLookup</codeph>-Eigenschaft ist flash.text.engine.FontLookup.DEVICE festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.FontWeight.NORMAL, flash.text.engine.FontWeight.BOLD, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:format:get"><apiName>format</apiName><shortdesc> Direkt für dieses Element angewendete TextLayoutFormat-Eigenschaften.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> Direkt für dieses Element angewendete TextLayoutFormat-Eigenschaften.
		 <p>Jedes Element hat möglicherweise Eigenschaften, die als Teil des Formats angewendet werden. Eigenschaften, die auf dieses Element angewendet werden, überschreiben vom übergeordneten Element vererbte Eigenschaften. Auf dieses Element angewendete Eigenschaften werden wiederum von untergeordneten Elementen übernommen, wenn sie nicht im untergeordneten Element überschrieben werden. Wenn keine Eigenschaft auf das Element angewendet werden, ist dies „null“.</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 TextLayoutFormat: Regel zum Ausrichten von Text in einem Absatz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Regel zum Ausrichten von Text in einem Absatz. Standardwert ist <codeph>FormatValue.AUTO</codeph>, durch den der Text anhand der <codeph>locale</codeph>-Eigenschaft des Absatzes ausgerichtet wird. Bei allen Sprachen (mit Ausnahme von Japanisch und Chinesisch) wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustificationRule.SPACE</codeph>, wodurch zusätzlicher Leerraum zu den Leerzeichen hinzugefügt wird. Bei Japanisch und Chinesisch wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustficationRule.EAST_ASIAN</codeph>. Teilweise wird durch die Ausrichtung der Abstand der Interpunktion geändert. Bei Text mit lateinischen Buchstaben nehmen sowohl Komma als auch japanische Punkte die volle Zeichenbreite ein, bei Text mit ostasiatischen Zeichen nur die halbe Zeichenbreite. Bei ostasiatischem Text ist außerdem der Abstand zwischen aufeinanderfolgdenden Satzzeichen geringer, da dies den üblichen typographischen Konventionen in ostasiatischen Sprachen entspricht. Beachten Sie außerdem im folgenden Beispiel den Zeilenabstand, der auf die zweite Zeile der Absätze angewendet wird. In der ostasiatischen Version werden die letzten zwei Zeilen nach links verschoben. In der lateinischen Version werden die zweite und folgende Zeilen nach links verschoben.<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.JustificationRule.EAST_ASIAN, flashx.textLayout.formats.JustificationRule.SPACE, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 TextLayoutFormat: Der Stil, der zum Ausrichten des Absatzes verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Der Stil, der zum Ausrichten des Absatzes verwendet wird. Nur zusammen mit einer <codeph>justificationRule</codeph>-Einstellung von <codeph>JustificationRule.EAST_ASIAN</codeph> verwendet. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird in <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> für alle Gebietsschemata aufgelöst. Die von der JustificationStyle-Klasse definierten Konstanten legen die Optionen für die Verarbeitung von Kinsoku-Zeichen fest. Diese japanischen Zeichen können weder am Anfang noch am Ende einer Zeile stehen. Legen Sie <codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> fest, wenn die Abstände im Text größer sein sollen. Wenn Sie das gleiche Verhalten wie mit <codeph>justificationRule</codeph> auch mit <codeph>JustificationRule.SPACE</codeph> erzielen möchten, verwenden Sie <codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph>.
		 <p>Zulässige Werte sind flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU, flash.text.engine.JustificationStyle.PUSH_OUT_ONLY, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:kerning:get"><apiName>kerning</apiName><shortdesc>
		 TextLayoutFormat: Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern. Kerning wird für alle Schriftarten mit Kerningtabellen unterstützt.
		 <p>Zulässige Werte sind flash.text.engine.Kerning.ON, flash.text.engine.Kerning.OFF, flash.text.engine.Kerning.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 TextLayoutFormat: Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist. Die Leerraumbasis ist die Grundlinie, auf die sich die <codeph>lineHeight</codeph>-Eigenschaft bezieht. Die Zeilenabstandsrichtung bestimmt, ob die <codeph>lineHeight</codeph>-Eigenschaft auf den Abstand der Grundlinie einer Zeile zu derjenigen der vorherigen oder nachfolgenden Zeile verweist. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird basierend auf der <codeph>locale</codeph>-Eigenschaft des Absatzes aufgelöst. Für Japanisch und Chinesisch ist es <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>, für alle anderen Sprachen ist es <codeph>LeadingModel.ROMAN_UP</codeph>.<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.LeadingModel.ROMAN_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN, flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD, flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP, flashx.textLayout.formats.LeadingModel.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 TextLayoutFormat: Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können. Die Ligaturen, die für jede dieser Einstellungen angezeigt werden, sind von der Schriftart abhängig. Eine Ligatur tritt dann auf, wenn zwei oder mehr Buchstabenformen zu einer Glyphe zusammengefasst sind. Ligaturen ersetzen in der Regel aufeinanderfolgende Zeichen, die gemeinsame Komponenten aufweisen, beispielsweise die Buchstabenpaare fi, fl und ae. Sie werden sowohl für lateinische als auch nicht-lateinische Zeichensätze verwendet. Die Ligaturen, die von den Werten der LigatureLevel-Klasse aktiviert werden (<codeph>MINIMUM</codeph>, <codeph>COMMON</codeph>, <codeph>UNCOMMON</codeph> und <codeph>EXOTIC</codeph>) sind additiv. Jeder Wert aktiviert einen neuen Satz von Ligaturen, beinhaltet jedoch auch die der vorhergehenden Typen.<p><b>Hinweis:</b> Bei der Arbeit mit arabischen oder syrischen Schriftarten muss <codeph>ligatureLevel</codeph> als „MINIMUM“ oder höher festgelegt werden.</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>Zulässige Werte sind flash.text.engine.LigatureLevel.MINIMUM, flash.text.engine.LigatureLevel.COMMON, flash.text.engine.LigatureLevel.UNCOMMON, flash.text.engine.LigatureLevel.EXOTIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COMMON verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 TextLayoutFormat: Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Text im Container kann an die Breite des Containers angepasst werden (<codeph>LineBreak.TO_FIT</codeph>) bzw. kann so festgelegt werden, dass nur bei expliziten Zeilenendschaltungen oder Zeilenvorschüben der Umbruch erfolgt (<codeph>LineBreak.EXPLICIT</codeph>).
		 <p>Zulässige Werte sind flashx.textLayout.formats.LineBreak.EXPLICIT, flashx.textLayout.formats.LineBreak.TO_FIT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TO_FIT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 TextLayoutFormat: Steuerelemente für den Zeilenabstand des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Steuerelemente für den Zeilenabstand des Texts. Der Abstand von der Grundlinie der vorherigen oder nächsten Zeile (auf der Basis des <codeph>LeadingModel</codeph>) zur Grundlinie der aktuellen Zeile ist mit dem maximalen zusätzlichen Leerraum identisch, der auf jedes Zeichen in der Zeile angewendet wird. Dies ist entweder eine Zahl oder ein Prozentsatz. Geben Sie beim Festlegen als Prozentangabe einen Stringwert wie 140% ein.<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>Zulässige Werte als Zahlen liegen zwischen -720 und 720.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 120 % verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 TextLayoutFormat: Wenn „true“, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Wenn <codeph>true</codeph>, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.
		 <p>Zulässige Werte sind „true“, „false“ und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „false“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:linkActiveFormat:set"><apiName>linkActiveFormat</apiName><shortdesc> äquivalent zu setStyle(linkActiveFormat,value).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc> äquivalent zu setStyle(linkActiveFormat,value). Erwartet ein Wörterbuch mit Eigenschaften. Konvertiert ein Array von Objekten mit Schlüssel und Wert als Mitglieder eines Wörterbuchs. </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:linkHoverFormat:set"><apiName>linkHoverFormat</apiName><shortdesc> äquivalent zu setStyle(linkHoverFormat,value).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc> äquivalent zu setStyle(linkHoverFormat,value). Erwartet ein Wörterbuch mit Eigenschaften. Konvertiert ein Array von Objekten mit Schlüssel und Wert als Mitglieder eines Wörterbuchs. </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:linkNormalFormat:set"><apiName>linkNormalFormat</apiName><shortdesc> äquivalent zu setStyle(linkNormalFormat,value).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc> äquivalent zu setStyle(linkNormalFormat,value). Erwartet ein Wörterbuch mit Eigenschaften. Konvertiert ein Array von Objekten mit Schlüssel und Wert als Mitglieder eines Wörterbuchs. </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:locale:get"><apiName>locale</apiName><shortdesc>
		 TextLayoutFormat: Das Gebietsschema des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Das Gebietsschema des Texts. Steuert Buchstabentransformationen und -formung. Standardmäßige Gebietsschemabezeichner werden verwendet, wie in Unicode Technical Standard #35 beschrieben. Beispiel: „en“, „en_US“ und „en-US“ stehen für Englisch, „ja“ für Japanisch. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „en“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 TextLayoutFormat: Unterer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Unterer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem unteren Rand des Containers und dem Text. Der Wert ist eine Zahl. <p> Bei horizontalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum unten im Container angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 TextLayoutFormat: Linker Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Linker Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem linken Rand des Containers und dem Text. Der Wert ist eine Zahl.<p> Bei vertikalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum am Ende des Containers angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 TextLayoutFormat: Rechter Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Rechter Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem rechten Rand des Containers und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 TextLayoutFormat: Oberer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Oberer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem oberen Rand des Containers und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des unteren Absatzrands in Pixeln angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des unteren Absatzrands in Pixeln angibt. Dieser Wert gilt für den rechten Rand bei von links nach rechts verlaufendem Text und für den linken Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Leerraum nach dem Absatz (in Pixeln) festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Leerraum nach dem Absatz (in Pixeln) festlegt. Wird zusammen mit <codeph>paragraphSpaceBefore</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Wert für den Leeraum vor dem Absatz in Pixeln angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Wert für den Leeraum vor dem Absatz in Pixeln angibt. Wird zusammen mit <codeph>paragraphSpaceAfter</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des oberen Absatzrands angibt in Pixeln angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des oberen Absatzrands angibt in Pixeln angibt. Dieser Wert gilt für den linken Rand bei von links nach rechts verlaufendem Text und für den rechten Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:parentRelativeEnd:get"><apiName>parentRelativeEnd</apiName><shortdesc> Gibt das relative Ende diesesFlowElement-Objekts im übergeordneten Element zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Gibt das relative Ende diesesFlowElement-Objekts im übergeordneten Element zurück. Wenn das übergeordnete Element „null“ ist, ist es immer gleich <codeph>textLength</codeph>. Wenn das übergeordnete Element nicht „null“ ist, ist sein Wert die Summe der Textlängen dieser und aller vorherigen gleichgeordneten Elemente, Dies entspricht dem ersten Zeichen im nächsten FlowElement-Objekt.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowGroupElement"><linktext>FlowGroupElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>textLength</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:parentRelativeStart:get"><apiName>parentRelativeStart</apiName><shortdesc> Gibt den relativen Beginn diesesFlowElement-Objekts im übergeordneten Element zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Gibt den relativen Beginn diesesFlowElement-Objekts im übergeordneten Element zurück. Wenn das übergeordnete Element „null“ ist, ist dieser Wert immer „null“. Wenn das übergeordnete Element nicht „null“ ist, entspricht der Wert der Summe der Textlängen aller vorherigen gleichgeordneten Elemente.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>textLength</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:parent:get"><apiName>parent</apiName><shortdesc> Gibt das übergeordnete Element dieses FlowElement-Objekts zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:FlowGroupElement</apiValueClassifier></apiValueDef><apiDesc> Gibt das übergeordnete Element dieses FlowElement-Objekts zurück. Jedes FlowElement hat mindestens ein übergeordnetes Element.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 TextLayoutFormat: Der für diesen Text verwendete Wiedergabemodus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Der für diesen Text verwendete Wiedergabemodus. Wird nur auf eingebettete Schriftarten angewendet (für die <codeph>fontLookup</codeph>-Eigenschaft ist <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.RenderingMode.NORMAL, flash.text.engine.RenderingMode.CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert CFF verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:styleName:get"><apiName>styleName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Tabulatoren an, die dem Absatz zugewiesen sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Tabulatoren an, die dem Absatz zugewiesen sind. Set-Funktionen können ein Array mit flashx.textLayout.formats.TabStopFormat, eine zusammengezogene Stringdarstellung, nicht definierte Werte oder <codeph>FormatValue.INHERIT</codeph> verarbeiten. Die zusammengezogene Stringdarstellung wird immer in ein Array mit flashx.textLayout.formats.TabStopFormat konvertiert. <p>Das stringbasierte Format ist eine Liste von Tabulatorpositionen, wobei die einzelnen Tabulatoren durch eine oder mehrere Leerstellen getrennt sind.</p><p>Ein Tabulator hat die folgende Form: &lt;Ausrichtungstyp>&lt;Ausrichtungsposition>|&lt;Ausrichtungs-Token>.</p><p>Der Ausrichtungstyp ist ein einzelnes Zeichen und kann S, E, C oder D sein (oder entsprechend mit Kleinbuchstaben sein). S oder s für Start, E oder e für End, C oder c für Center und D oder d für Decimal. Der Ausrichtungstyp ist optional und ist standardmäßig S, wenn er nicht festgelegt wurde.</p><p>Die Ausrichtungsposition ist eine Zahl und wird entsprechend der FXG-Spezifikation für Zahlen (dezimal oder wissenschaftliche Schreibweise) angegeben. Die Ausrichtungsposition ist erforderlich.</p><p>Mithilfe des vertikalen Balkens wird die Ausrichtungsposition vom Ausrichtungs-Token getrennt. Dieser Balken sollte nur vorhanden sein, wenn das Ausrichtungs-Token vorhanden ist.</p><p> Das Ausrichtungs-Token ist optional, wenn der Ausrichtungstyp D ist, nicht jedoch für die anderen Ausrichtungstypen. Das Ausrichtungs-Token kann eine beliebige Zeichensequenz sein, die durch das Leerzeichen beendet wird, das den Tabulator abschließt (für den letzten Tabulator ist das abschließenden Leerzeichen optional; das Ende des Ausrichtungs-Tokens ist implizit). Ein Leerzeichen ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm der umgekehrte Schrägstrich (\) als Escape-Zeichen vorangeht. Ein umgekehrter Schrägstrich ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm ein weiterer umgekehrter Schrägstrich (\) als Escape-Zeichen vorangeht. Wenn der Ausrichtungstyp D ist und kein Ausrichtungstoken angegeben ist, weist er den Standardwert „null“ auf.</p><p>Werden keine Tabulatoren festgelegt, wird die Tabulatortaste standardmäßig am Ende der Zeile ausgelöst.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „null“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 TextLayoutFormat: Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text. Wenn für <codeph>textAlign</codeph> die Einstellung <codeph>TextAlign.JUSTIFY</codeph> festgelegt ist, gibt <codeph>textAlignLast</codeph> an, wie die letzte Zeile (oder einzige Zeile, wenn es sich dabei um einen Zeilenblock handelt) ausgerichtet wird. Werte sind gleich <codeph>textAlign</codeph>.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 TextLayoutFormat: Ausrichtung der Zeilen im Absatz relativ zum Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Ausrichtung der Zeilen im Absatz relativ zum Container. <codeph>TextAlign.LEFT</codeph> richtet Zeilen am linken Rand des Containers aus. <codeph>TextAlign.RIGHT</codeph> führt Ausrichtung am rechten Rand aus. <codeph>TextAlign.CENTER</codeph> richtet die Zeile in gleichen Abständen vom linken und rechten Rand aus. <codeph>TextAlign.JUSTIFY</codeph> richtet die Zeilen so aus, dass sie den Raum ausfüllen. <codeph>TextAlign.START</codeph> entspricht der Einstellung von links bei von links nach rechts verlaufendem Text oder von rechts bei von rechts nach links verlaufendem Text. <codeph>TextAlign.END</codeph> entspricht der Einstellung von rechts bei von links nach rechts verlaufendem Text oder von links bei von rechts nach links verlaufendem Text.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 TextLayoutFormat: Wert für Alpha (Transparenz) des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Wert für Alpha (Transparenz) des Texts. Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit einem <codeph>textAlpha</codeph>-Wert von 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 1 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 TextLayoutFormat: Auszeichnung im Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Auszeichnung im Text. Zum Anwenden der Unterstreichung verwenden; Standardeinstellung ist „keine“.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextDecoration.NONE, flashx.textLayout.formats.TextDecoration.UNDERLINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NONE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt. Durch eine negative Einrückung wird die Zeile an den Rand und möglicherweise aus dem Container verschoben.
		 <p>Zulässige Werte sind Zahlen von -1000 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 TextLayoutFormat: Gibt Optionen für die Ausrichtung des Texts an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt Optionen für die Ausrichtung des Texts an. Der Standardwert ist <codeph>TextJustify.INTER_WORD</codeph>, d. h., bei der Ausrichtung wird zusätzlicher Leerraum den Leerzeichen hinzugefügt. <codeph>TextJustify.DISTRIBUTE</codeph> fügt den Leerzeichen und zwischen einzelnen Buchstaben zusätzlichen Raum hinzu. Wird nur zusammen mit einem <codeph>justificationRule</codeph>-Wert von <codeph>JustificationRule.SPACE</codeph> verwendet.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextJustify.INTER_WORD, flashx.textLayout.formats.TextJustify.DISTRIBUTE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert INTER_WORD verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textLength:get"><apiName>textLength</apiName><shortdesc>
		 Gibt die Gesamtlänge des Textes, der zum FlowElement-Objekt und den untergeordneten Elementen gehört, zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Gibt die Gesamtlänge des Textes, der zum FlowElement-Objekt und den untergeordneten Elementen gehört, zurück. Wenn ein Element keinen Text enthält, ist der Wert von <codeph>textLength</codeph> normalerweise „null“. 
		 
		 <p>Zu ParagraphElement-Objekten gehört ein abschließender Bereich mit einem Absatzendezeichen für das letzte SpanElement-Objekt. Das Endezeichen ist im Wert der <codeph>textLength</codeph> des SpanElement-Objekts und aller übergeordneten Elemente enthalten. Er ist nicht in der <codeph>text</codeph>-Eigenschaft des SpanElement-Objekts enthalten.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>textLength</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 TextLayoutFormat: Bestimmt die Gradzahl zum Drehen dieses Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Bestimmt die Gradzahl zum Drehen dieses Texts.
		 <p>Zulässige Werte: flash.text.engine.TextRotation.ROTATE_0, flash.text.engine.TextRotation.ROTATE_180, flash.text.engine.TextRotation.ROTATE_270, flash.text.engine.TextRotation.ROTATE_90, flash.text.engine.TextRotation.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, auf die linke Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent der <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, auf die linke Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent von <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingRight</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingRight</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete typografische Buchstabenart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete typografische Buchstabenart. Im Folgenden sind einige Beispiele dafür aufgeführt:<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.TLFTypographicCase.DEFAULT, flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS, flashx.textLayout.formats.TLFTypographicCase.UPPERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:userStyles:get"><apiName>userStyles</apiName><shortdesc> Ermöglicht das Lesen und Schreiben von Benutzerstilen in einem FlowElement-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc> Ermöglicht das Lesen und Schreiben von Benutzerstilen in einem FlowElement-Objekt. Beim Lesen dieser Eigenschaft wird eine Kopie des Wörterbuchs mit den Benutzerstilen erstellt. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 TextLayoutFormat: Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Bestimmt, wie TextFlow-Elemente innerhalb des Containers ausgerichtet werden.
		 <p>Zulässige Werte sind flashx.textLayout.formats.VerticalAlign.TOP, flashx.textLayout.formats.VerticalAlign.MIDDLE, flashx.textLayout.formats.VerticalAlign.BOTTOM, flashx.textLayout.formats.VerticalAlign.JUSTIFY, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TOP an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 TextLayoutFormat: Blendet Leerraum aus oder behält ihn bei, wenn Text in einem TextFlow importiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Entfernt Leerraum oder behält ihn bei, wenn Text in einem TextFlow importiert wird. <codeph>WhiteSpaceCollapse.PRESERVE</codeph> behält alle Whitespace-Zeichen bei. <codeph>WhiteSpaceCollapse.COLLAPSE</codeph> entfernt Zeichen für neue Zeilen, Tabulatoren sowie Leerzeichen am Anfang und Ende bei einem importierten Textblock. Zeilenumbruch-Tags () und Unicode-Zeilentrennzeichen werden beibehalten.
		 <p>Zulässige Werte sind flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE, flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COLLAPSE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:tlf_internal:impliedElement:set"><apiName>impliedElement</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="tlf_internal"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:tracking:set"><apiName>tracking</apiName><shortdesc>
		 Legt das Verfolgen fest und ist synonym mit der trackingRight-Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
		 Legt das Verfolgen fest und ist synonym mit der <codeph>trackingRight</codeph>-Eigenschaft. Als eine Pixelzahl oder einen Prozentsatz von <codeph>fontsize</codeph> festgelegt.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/trackingRight"><linktext>trackingRight</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:LinkElement"><apiName>LinkElement</apiName><shortdesc> Die LinkElement-Klasse definiert einen Hyperlink für einen URI (Universal Resource Identifier), der durch Klicken des Benutzers ausgeführt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>flashx.textLayout.elements:SubParagraphGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> Die LinkElement-Klasse definiert einen Hyperlink für einen URI (Universal Resource Identifier), der durch Klicken des Benutzers ausgeführt wird. Die LinkElement-Klasse ist eine Unterklasse der SubParagraphGroupElement-Klasse. Sie kann ein oder mehrere FlowElement-Objekte enthalten, z. B. ein SpanElement-Objekt, das den Hyperlinktext speichert. Ein leeres LinkElement, das kein FlowElement-Objekt enthält, wird ignoriert.
	 <p>Wenn Sie ein Ziel festlegen, müssen Sie einen der folgenden Werte verwenden:
	 <adobetable class="innertable">
	 
	 
	 
	 
	 
	 <tgroup cols="2"><thead><row><entry>Zielwert</entry><entry>description</entry></row></thead><tbody><row>
	   <entry>_self</entry>
	   <entry>Ersetzt die aktuelle HTML-Seite. Wenn diese sich in sich in einem Frame oder einem Frameset befindet, wird dieser Frame zum Laden verwendet. Wenn es der vollständige Browser ist, wird er geöffnet, um die ursprüngliche Seite zu ersetzen.</entry>
	 </row><row>
	   <entry>_blank</entry>
	   <entry>Öffnet einen neuen Browser ohne Namen.</entry>
	 </row><row>
	   <entry>_parent</entry>
	   <entry>Ersetzt die HTML-Seite, aus der das Element stammt.</entry>
	 </row><row>
	   <entry>_top</entry>
	   <entry>Lädt den aktuellen Browser, wobei alles ersetzt wird, z. B. ein Frameset.</entry>
	 </row></tbody></tgroup></adobetable>
	 </p>
	 
	 </apiDesc><example conref="examples\LinkElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#LinkState"><linktext>LinkState</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/linkActiveFormat"><linktext>FlowElement.linkActiveFormat</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/linkHoverFormat"><linktext>FlowElement.linkHoverFormat</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/linkNormalFormat"><linktext>FlowElement.linkNormalFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.CLICK_click"><apiName>click</apiName><shortdesc> 
	 Wird durch Klicken auf den Hyperlink ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.CLICK</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 Wird durch Klicken auf den Hyperlink ausgelöst. Clients können überschreiben, wie der Hyperlink das Ereignis verarbeitet, indem sie es selbst verarbeiten und die preventDefault()-Methode aufrufen.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.ROLL_OUT_rollOut"><apiName>rollOut</apiName><shortdesc> 
	 Wird ausgelöst, wenn der Mauszeiger den Hyperlink verlässt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.ROLL_OUT</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 Wird ausgelöst, wenn der Mauszeiger den Hyperlink verlässt. 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.ROLL_OVER_rollOver"><apiName>rollOver</apiName><shortdesc>
	 Wird ausgelöst, wenn der Mauszeiger den Hyperlink berührt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.ROLL_OVER</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn der Mauszeiger den Hyperlink berührt. 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.MOUSE_MOVE_mouseMove"><apiName>mouseMove</apiName><shortdesc> 
	 Wird ausgelöst, wenn der Mauszeiger über den Hyperlink bewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.MOUSE_MOVE</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 Wird ausgelöst, wenn der Mauszeiger über den Hyperlink bewegt wird. 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.MOUSE_UP_mouseUp"><apiName>mouseUp</apiName><shortdesc> 
	 Wird ausgelöst, wenn die Maustaste über einem Hyperlink losgelassen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.MOUSE_UP</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 Wird ausgelöst, wenn die Maustaste über einem Hyperlink losgelassen wird. 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.MOUSE_DOWN_mouseDown"><apiName>mouseDown</apiName><shortdesc> 
	 Wird ausgelöst, wenn die Maustaste über einem Hyperlink gedrückt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.MOUSE_DOWN</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 Wird ausgelöst, wenn die Maustaste über einem Hyperlink gedrückt wird.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flashx.textLayout.elements:LinkElement:LinkElement"><apiName>LinkElement</apiName><shortdesc> Konstruktor - erstellt eine neue LinkElement-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt eine neue LinkElement-Instanz.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:LinkElement:addEventListener"><apiName>addEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#addEventListener()">
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Typ des Ereignisses.
		</apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Die Listener-Funktion, die das Ereignis verarbeitet. Diese Funktion muss, wie das nachfolgende Beispiel zeigt, ein Ereignisobjekt als einzigen Parameter akzeptieren und keinen Wert zurückgeben:
		<p><codeph>function(evt:Event):void</codeph></p>
		Der Name der Funktion ist beliebig.
		</apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob der Listener in der Aufnahmephase oder in der Ziel- und Bubbling-Phase arbeitet. Ist <codeph>useCapture</codeph> auf <codeph>true</codeph> gesetzt, so verarbeitet der Listener das Ereignis nur während der Aufnahmephase und nicht während der Ziel- oder Bubbling-Phase. Hat <codeph>useCapture</codeph> hingegen den Wert <codeph>false</codeph>, verarbeitet der Listener das Ereignis nur während der Ziel- oder Bubbling-Phase. Damit das Ereignis in allen drei Phasen aktiv ist, rufen Sie <codeph>addEventListener()</codeph> zweimal auf; einmal ist <codeph>useCapture</codeph> auf <codeph>true</codeph> gesetzt, und beim zweiten Mal hat <codeph>useCapture</codeph> den Wert <codeph>false</codeph>.
		</apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Prioritätsstufe des Ereignis-Listeners. Prioritäten werden über eine 32-Bit-Ganzzahl zugewiesen. Je höher die Zahl, desto höher die Priorität. Alle Listener mit der Priorität <i>n</i> werden vor Listenern mit der Priorität <i>n-1</i> verarbeitet. Wenn zwei oder mehr Listener die gleiche Priorität aufweisen, werden sie in der Reihenfolge verarbeitet, in der sie hinzugefügt wurden. Die Standardpriorität ist 0. 
		</apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob der Verweis auf den Listener stark oder schwach ist. Ein starker Verweis (der Standard) verhindert, dass der Listener von einem Garbage Collector entfernt wird. Ein schwacher Verweis hingegen nicht. <p>Funktionen von Mitgliedern auf Klassenebene unterliegen nicht der Garbage Collection. Daher können Sie <codeph>useWeakReference</codeph> für Mitgliedsfunktionen auf Klassenebene auf <codeph>true</codeph> setzen, ohne sie der Garbage Collection zu unterziehen. Wenn Sie <codeph>useWeakReference</codeph> für einen Listener, der eine verschachtelte innere Funktion ist, auf <codeph>true</codeph> setzen, wird Garbage Collection auf diese Funktion angewendet, die damit nicht mehr permanent gespeichert wird. Indem Sie Verweise auf die innere Funktion erstellen (d. h sie in einer anderen Variable speichern), umgehen Sie die Garbage Collection, sodass die Funktion permanent gespeichert bleibt.</p>
		
		</apiDesc></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#addEventListener()">
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>evt</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:hasEventListener"><apiName>hasEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:removeEventListener"><apiName>removeEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Typ des Ereignisses.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Das zu entfernende Listener-Objekt.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob der Listener in der Aufnahmephase oder in der Ziel- und Bubbling-Phase registriert wurde. Wenn der Listener sowohl für die Erfassungs- als auch für die Bubbling-Phase registriert wurde, sind auch zwei Aufrufe von <codeph>removeEventListener()</codeph> erforderlich, um beide zu entfernen: ein Aufruf, bei dem <codeph>useCapture</codeph> auf <codeph>true</codeph> gesetzt ist, und einer, bei dem <codeph>useCapture</codeph> auf <codeph>false</codeph> gesetzt ist. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:willTrigger"><apiName>willTrigger</apiName><shortdesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:LinkElement:href:get"><apiName>href</apiName><shortdesc>
		 Der mit dem LinkElement-Objekt verknüpfte Uniform Resource Identifier (URI).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Der mit dem LinkElement-Objekt verknüpfte Uniform Resource Identifier (URI). Der URI kann ein beliebiger URI sein, der von der <codeph>flash.net.navigateToURL()</codeph>-Methode unterstützt wird. Diese Eigenschaft wird dem <codeph>request</codeph>-Parameter für diese Methode zugeordnet.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.xml#net/navigateToURL()"><linktext>flash.net.navigateToURL()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:LinkElement:linkState:get"><apiName>linkState</apiName><shortdesc>
		 Der aktuelle Status des Hyperlinks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Der aktuelle Status des Hyperlinks.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#LinkState"><linktext>LinkState</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:LinkElement:target:get"><apiName>target</apiName><shortdesc>
		 Der mit dem LinkElement verknüpfte Target-Wert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Der mit dem LinkElement verknüpfte Target-Wert. Mögliche Werte sind „_self“, „_blank“, „_parent“ und „_top“. Dieser Wert wird dem <codeph>window</codeph>-Parameter der <codeph>flash.net.navigateToURL()</codeph>-Methode zugeordnet.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.xml#net/navigateToURL()"><linktext>flash.net.navigateToURL()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:TCYElement"><apiName>TCYElement</apiName><shortdesc> 
	 Die TCYElement-Klasse (Tatechuuyoko - ta-tae-chu-yo-ko) ist eine Unterklasse von SubParagraphGroupElement. Dabei wird Text horizontal innerhalb einer vertikalen Zeile gezeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:SubParagraphGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die TCYElement-Klasse (Tatechuuyoko - ta-tae-chu-yo-ko) ist eine Unterklasse von SubParagraphGroupElement. Dabei wird Text horizontal innerhalb einer vertikalen Zeile gezeichnet. Traditionell wird dies durchgeführt, um kleine Blöcke mit nicht-japanischem Text oder Zahlen, z. B. Datumsangaben, lesbarer zu gestalten. TCY kann auf horizontalen Text angewendet werden, hat aber keine Auswirkung auf den Zeichenstil, es sei denn, dieser wird vertikal gedreht. TCY-Blöcke, die keinen Text enthalten, werden während der Normalisierung aus dem Textfluss entfernt.
	 <p>
	 Im unteren Beispiel zeigt das rechte Bild TCY, das auf die Zahl 57 angewendet wurde, während das linke Bild keine TCY-Formatierung aufweist.</p>
	 <p><adobeimage alt="TCYElement" border="0" href="../../../images/textLayout_TCYElement.png"/>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:TCYElement:TCYElement"><apiName>TCYElement</apiName><shortdesc> Konstruktor - erstellt eine neue TCYElement-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt eine neue TCYElement-Instanz.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:OverflowPolicy"><apiName>OverflowPolicy</apiName><shortdesc>
	  Die OverflowPolicy-Klasse definiert einen Konstantensatz für die overflowPolicy-Eigenschaft der IConfiguration-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Die OverflowPolicy-Klasse definiert einen Konstantensatz für die <codeph>overflowPolicy</codeph>-Eigenschaft der IConfiguration-Klasse. Dadurch wird definiert, wie der Composer Zeilen am Ende des Zusammenstellungsbereichs behandelt.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.elements:OverflowPolicy:FIT_ANY"><apiName>FIT_ANY</apiName><shortdesc> 
	 Fügt die Zeile in den Eingabebereich ein, wenn ein Teil der Zeile passt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fitAny</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 Fügt die Zeile in den Eingabebereich ein, wenn ein Teil der Zeile passt.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:OverflowPolicy:FIT_DESCENDERS"><apiName>FIT_DESCENDERS</apiName><shortdesc> 
	 Fügt die Zeile in den Eingabebereich ein, wenn der Bereich von oben bis zur Grundlinie passt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fitDescenders</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 Fügt die Zeile in den Eingabebereich ein, wenn der Bereich von oben bis zur Grundlinie passt.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:GlobalSettings"><apiName>GlobalSettings</apiName><shortdesc> Konfiguration, die auf alle TextFlow-Objekte angewendet wird.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Konfiguration, die auf alle TextFlow-Objekte angewendet wird.
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.elements:GlobalSettings:tlf_internal:enableDefaultTabStops:get"><apiName>enableDefaultTabStops</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="tlf_internal"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:enableSearch:get"><apiName>enableSearch</apiName><shortdesc> Steuert, ob der Text für Suchmaschinen sichtbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> Steuert, ob der Text für Suchmaschinen sichtbar ist. Standardmäßig ist dieser Wert <codeph>true</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:fontMapperFunction:get"><apiName>fontMapperFunction</apiName><shortdesc> 
		Gibt den Rückruf an, der für die Schriftzuordnung verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
		Gibt den Rückruf an, der für die Schriftzuordnung verwendet wird. Der Rückruf verwendet ein <codeph>flash.text.engine.FontDescription</codeph>-Objekt und aktualisiert es gegebenenfalls. Nach dem Festlegen eines neuen Rückrufs für Schriftzuordnung oder dem Ändern des Verhaltens des vorhandenen Rückrufs für Schriftzuordnung, muss der Client für jeden betroffenen Textfluss ausdrücklich <codeph>flashx.textLayout.elements.TextFlow.invalidateAllFormats</codeph> aufrufen. Dadurch wird sichergestellt, dass nach dem erneuten Zusammenstellen eines leaf-Elements im Textfluss die darauf angewendete FontDescription erneut berechnet und der Rückruf aufgerufen wird. 
		
		</apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontDescription.xml"><linktext>FontDescription</linktext></link><link href="" invalidHref="flashx.textLayout.elements.TextFlow.invalidateAllFormats.xml"><linktext>invalidateAllFormats</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:resolveFontLookupFunction:get"><apiName>resolveFontLookupFunction</apiName><shortdesc> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
		     
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#ISWFContext"><linktext>flashx.textLayout.compose.ISWFContext</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link><link href="" invalidHref="flash.text.engine.ElementFormat.xml"><linktext/></link><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:resourceStringFunction:get"><apiName>resourceStringFunction</apiName><shortdesc> Funktion, die zwei Parameter annimmt, eine Ressourcen-ID und ein optionales Array von Parametern, die im String ersetzt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> Funktion, die zwei Parameter annimmt, eine Ressourcen-ID und ein optionales Array von Parametern, die im String ersetzt werden. Der String hat das Format "Inhalt {0} mehr Inhalt {1}". Die Parameter werden aus dem optionalen Array gelesen und durch die in eckige Klammern gesetzten Substrings ersetzt; TLF stellt eine Standardimplementierung mit Standardstrings bereit. Clients können diese Funktion bei der Lokalisierung durch ihre eigene Implementierung ersetzen.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:BreakElement"><apiName>BreakElement</apiName><shortdesc> 
	Die BreakElement-Klasse definiert einen Zeilenumbruch, wodurch Sie einen Zeilenumbruch im Text erstellen können, ohne einen neuen Absatz erstellen zu müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:SpecialCharacterElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	Die BreakElement-Klasse definiert einen Zeilenumbruch, wodurch Sie einen Zeilenumbruch im Text erstellen können, ohne einen neuen Absatz erstellen zu müssen. Ein U+2028-Zeichen wird im Absatztext eingefügt.
	
	<p><b>Hinweis</b>: Diese Klasse ist hauptsächlich vorhanden, um break-Tags in MXML-Markup zu unterstützen. Um Zeilenumbrüche zu erstellen, können Sie wie folgt Zeichen für „neue Zeile“ (\n) in den Text einfügen:</p>
	
	<codeblock rev="3.0">
	spanElement1.text += '\n';
	</codeblock>
	
	</apiDesc><example conref="examples\BreakElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:BreakElement:BreakElement"><apiName>BreakElement</apiName><shortdesc> Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor. 
		
		</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:InlineGraphicElement"><apiName>InlineGraphicElement</apiName><shortdesc> Die InlineGraphicElement-Klasse verarbeitet Grafikobjekte, die Inline-Elemente im Text anzeigen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:FlowLeafElement</apiBaseClassifier></apiClassifierDef><apiDesc> Die InlineGraphicElement-Klasse verarbeitet Grafikobjekte, die Inline-Elemente im Text anzeigen. 
	 
	 <p>Sie können eine Grafik oder ein DisplayObject einbetten oder eine URL für den Standort der Grafik festlegen. Die <codeph>height</codeph>- und <codeph>width</codeph>-Eigenschaften von InlineGraphicElement steuern die tatsächliche Größe der anzuzeigenden Grafik. Diese Werte steuern auch den verfügbaren Raum für die Grafik im TextLine-Objekt, das die Grafik enthält. Die <codeph>height</codeph>- und <codeph>width</codeph>-Eigenschaften können jeden eine der folgenden sein:</p>
	 <ol>
	 <li>Anzahl der Pixel</li>
	 <li>Die gemessene Größe eines Bildes in Prozent</li>
	 <li>Die Konstante „auto“, die die Größe berechnet (Default-Wert)</li>
	 </ol>
	 Es gibt drei Eigenschaften oder Akzessoren, die für die Breite und Höhe einer Grafik gelten:
	 <ul>
	 <li>Die <codeph>width</codeph>- und <codeph>height</codeph>-Eigenschaften</li>
	 <li>Die <codeph>measuredWidth</codeph>- und <codeph>measuredHeight</codeph>-Eigenschaften, die die Breite und Höhe der Grafik zum Zeitpunkt des Ladens angeben.</li>
	 <li>Die <codeph>actualWidth</codeph>- und <codeph>actualHeight</codeph>-Eigenschaften, die die tatsächliche Breite und Höhe der Grafik bei der Anzeige und der Zusammenstellung angeben, wie sie aus <codeph>width</codeph> oder <codeph>height</codeph> und <codeph>measuredWidth</codeph> oder <codeph>measuredHeight</codeph> berechnet wird.</li>
	 </ul>
	 <p>Die Werte der <codeph>actualWidth</codeph>- und <codeph>actualHeight</codeph>-Eigenschaften sind immer „null“, bis die Grafik geladen wird.</p>
	 
	 <p>Wenn <codeph>source</codeph> als ein URI festgelegt ist, wird die Grafik asynchron geladen. Für ein DisplayObject verwendet TextLayout <codeph>width</codeph> und <codeph>height</codeph> als <codeph>measuredHeight</codeph> und <codeph>measuredWidth</codeph>, wenn die Grafik für das InlineGraphicElement-Objekt eingefügt wird. Die Breite und Höhe werden unmittelbar gelesen.</p>
	 <p><b>Hinweise</b>: Bei asynchron geladenen Grafiken muss der Benutzer auf ein StatusChangeEvent.INLINE_GRAPHIC_STATUS_CHANGE-Ereignis im TextFlow warten und <codeph>IFlowComposer.updateAllControllers()</codeph> aufrufen, damit die Grafik angezeigt wird. Der Wert von <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> für Grafiken, die geladen werden, ist „null“.</p>
	 
	 <p>Einige Inline-Grafiken sind Animationen oder Video, die möglicherweise Audio enthalten. Die Ausführung beginnt bei der ersten Zusammenstellung nach Abschluss des Ladevorgangs. Die Ausführung wird erst dann gestoppt, wenn der flowComposer im TextFlow auf „null“ gesetzt wurde. Daraufhin werden sie gestoppt und entladen.</p>
	 
	 
	 <ol>
	 	<li> </li>.
	 <li>  </li>
	 	<li> </li>
	 </ol>
	 </apiDesc><example conref="examples\InlineGraphicElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualHeight"><linktext>actualHeight</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualWidth"><linktext>actualWidth</linktext></link><link href="" invalidHref="flash.display.DisplayObject.xml"><linktext>DisplayObject</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer/updateAllControllers()"><linktext>flashx.textLayout.compose.IFlowComposer.updateAllControllers()</linktext></link><link href="flashx.textLayout.events.xml#StatusChangeEvent"><linktext>StatusChangeEvent</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:InlineGraphicElement:InlineGraphicElement"><apiName>InlineGraphicElement</apiName><shortdesc> Konstruktor - erstellt ein neues InlineGraphicElement-Objekt
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Konstruktor - erstellt ein neues InlineGraphicElement-Objekt
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.elements:InlineGraphicElement:actualHeight:get"><apiName>actualHeight</apiName><shortdesc> Die tatsächlich wirksame Höhe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Die tatsächlich wirksame Höhe. Dies ist die Anzeige- und Zusammenstellungshöhe, die aus den <codeph>height</codeph>- und <codeph>measuredHeight</codeph>-Eigenschaften berechnet wird.
		
		<p>Die Werte der <codeph>actualHeight</codeph>-Eigenschaft werden entsprechend der folgenden Tabelle berechnet:</p>
		<adobetable class="innertable">
		
		
		
		
		<tgroup cols="2"><thead><row><entry>height-Eigenschaft</entry><entry>actualHeight</entry></row></thead><tbody><row>
		  <entry>auto</entry>
		  <entry>measuredheight</entry>
		</row><row>
		  <entry>h eines Prozents</entry>
		  <entry>h Prozent von measuredheight</entry>
		</row><row>
		  <entry>h einer Zahl</entry>
		  <entry>h</entry>
		</row></tbody></tgroup></adobetable>
		<p><b>Hinweise</b>: Wenn die Inline-Grafik ein DisplayObject ist, werden die Breite und Höhe sofort gelesen. Wenn <codeph>measuredWidth</codeph> oder <codeph>measuredHeight</codeph> „null“ sind, wird für automatische Berechnungen, die eine Division von null versursachen würde, das Ergebnis „null“ festgelegt.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/height"><linktext>height</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredHeight"><linktext>measuredHeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:actualWidth:get"><apiName>actualWidth</apiName><shortdesc> Die tatsächlich wirksame Breite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Die tatsächlich wirksame Breite. Dies ist die Anzeige- und Zusammenstellungsbreite, die aus den <codeph>width</codeph>- und <codeph>measuredWidth</codeph>-Eigenschaften berechnet wird.
		
		<p>Die Werte der <codeph>actualWidth</codeph>-Eigenschaft werden entsprechend der folgenden Tabelle berechnet:</p>
		<adobetable class="innertable">
		
		
		
		
		<tgroup cols="2"><thead><row><entry>width-Eigenschaft</entry><entry>actualWidth</entry></row></thead><tbody><row>
		  <entry>auto</entry>
		  <entry>measuredWidth</entry>
		</row><row>
		  <entry>w eines Prozents</entry>
		  <entry>w Prozent von measuredWidth</entry>
		</row><row>
		  <entry>w einer Zahl</entry>
		  <entry>w</entry>
		</row></tbody></tgroup></adobetable>
		
		<p><b>Hinweise</b>: Wenn die Inline-Grafik ein DisplayObject ist, werden die Breite und Höhe sofort gelesen. Wenn <codeph>measuredWidth</codeph> oder <codeph>measuredHeight</codeph> „null“ sind, wird für automatische Berechnungen, die eine Division von null versursachen würde, das Ergebnis „null“ festgelegt.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredWidth"><linktext>measuredWidth</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/width"><linktext>width</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:graphic:get"><apiName>graphic</apiName><shortdesc> Die eingebettete Grafik.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc> Die eingebettete Grafik. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:height:get"><apiName>height</apiName><shortdesc> Die Höhe des Bilds.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		  </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> Die Höhe des Bilds. Mögliche Werte sind „auto“, eine Anzahl von Pixeln oder ein Prozentanteil der gemessene Höhe. 
		 
		 <p>Zulässige Werte sind flashx.textLayout.formats.FormatValue.AUTO und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Zulässige Werte als Zahl liegen zwischen 0 und 32000.</p>
		 <p>Zulässige Werte als Prozentwerte liegen zwischen 0 und 1000000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Bei Aufhebung der Definition oder der Vererbung verwendet das InlineGraphicElement den Standardwert "auto".</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualHeight"><linktext>actualHeight</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredHeight"><linktext>measuredHeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:measuredHeight:get"><apiName>measuredHeight</apiName><shortdesc> Die natürliche Höhe der Grafik.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Die natürliche Höhe der Grafik. Dies ist die Höhe der Grafik zum Zeitpunkt des Ladens.
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualHeight"><linktext>actualHeight</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/height"><linktext>height</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:measuredWidth:get"><apiName>measuredWidth</apiName><shortdesc> Die natürliche Breite der Grafik.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Die natürliche Breite der Grafik. Dies ist die Breite der Grafik zum Zeitpunkt des Ladens.
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualWidth"><linktext>actualWidth</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/width"><linktext>width</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:source:get"><apiName>source</apiName><shortdesc> Legt die Quelle für die Grafik fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc> Legt die Quelle für die Grafik fest. Der Wert kann ein als URI interpretierter String, eine als Klasse eines eingebetteten DisplayObjects interpretierte Klasse, eine DisplayObject-Instanz oder ein URLRequest sein. Erstellt ein DisplayObject und bewirkt, dass dieses als Inline-Objekt im Text erscheint, wenn das InlineGraphicElement-Objekt in einem TextFlow-Objekt in ein ParagraphElement eingefügt wird.
		 
		 </apiDesc><example conref="examples\InlineGraphicElement_sourceExample.as"/></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:status:get"><apiName>status</apiName><shortdesc> Der aktuelle Status des Bilds.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Der aktuelle Status des Bilds. Bei jeder Statusänderung sendet der besitzende TextFlow ein StatusChangeEvent.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElementStatus"><linktext>flashx.textLayout.elements.InlineGraphicElementStatus</linktext></link><link href="flashx.textLayout.events.xml#StatusChangeEvent"><linktext>flashx.textLayout.events.StatusChangeEvent</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:width:get"><apiName>width</apiName><shortdesc> Die Breite der Grafik.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> Die Breite der Grafik. Mögliche Werte sind „auto“, eine Anzahl von Pixeln oder ein Prozentanteil der gemessenen Breite des Bilds.
		 
		 <p>Zulässige Werte sind flashx.textLayout.formats.FormatValue.AUTO und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Zulässige Werte als Zahl liegen zwischen 0 und 32000.</p>
		 <p>Zulässige Werte als Prozentwerte liegen zwischen 0 und 1000000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Bei Aufhebung der Definition oder der Vererbung verwendet das InlineGraphicElement den Standardwert "auto".</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualWidth"><linktext>actualWidth</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredWidth"><linktext>measuredWidth</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:FlowGroupElement"><apiName>FlowGroupElement</apiName><shortdesc> 
	 Die FlowGroupElement-Klasse ist die Basisklasse für FlowElement-Objekte, die ein Array mit untergeordneten Elementen haben können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die FlowGroupElement-Klasse ist die Basisklasse für FlowElement-Objekte, die ein Array mit untergeordneten Elementen haben können. Zu diesen Klassen gehören TextFlow, ParagraphElement, DivElement und LinkElement.
	 
	 <p>FlowGroupElement-Objekte können nicht direkt erstellt werden. Durch Aufrufen von <codeph>new FlowGroupElement()</codeph> wird ein Ausnahmefehler ausgegeben.</p>
 	 
 	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#DivElement"><linktext>DivElement</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:FlowGroupElement:FlowGroupElement"><apiName>FlowGroupElement</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:FlowGroupElement:addChildAt"><apiName>addChildAt</apiName><shortdesc> 
		 Fügt der festgelegten Indexposition ein untergeordnetes FlowElement-Objekt hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Der <codeph>index</codeph> ist außerhalb des gültigen Bereichs.
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>Das untergeordnete FlowElement. 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="uint"/><apiDesc>Indexposition, an der das untergeordnete Element hinzugefügt wird, wobei die erste Position 0 ist.
		 </apiDesc></apiParam><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>Das hinzuzufügende untergeordnete Element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Fügt der festgelegten Indexposition ein untergeordnetes FlowElement-Objekt hinzu.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_addChildAtExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:addChild"><apiName>addChild</apiName><shortdesc> 
		 Hängt ein untergeordnetes FlowElement-Objekt an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das untergeordnete FlowElement. 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>Das anzuhängende untergeordnete Element.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Hängt ein untergeordnetes FlowElement-Objekt an. Das neue untergeordnete Element wird an das Ende der Liste der untergeordneten Elemente hinzugefügt.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_addChildExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:findChildIndexAtPosition"><apiName>findChildIndexAtPosition</apiName><shortdesc>
		 Diese Methode sucht für eine gegebene relative Textposition nach der Indexposition des ersten untergeordneten FlowElements, das die relative Position enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indexposition des ersten untergeordneten Elements, das die <codeph>relativePosition</codeph> enthält
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>	die relative Position zu diesem Element
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Diese Methode sucht für eine gegebene relative Textposition nach der Indexposition des ersten untergeordneten FlowElements, das die relative Position enthält. Aufgrund von FlowElements mit einer Länge von „null“ kann mehr als ein untergeordnetes Element kann eine relative Position enthalten.
		  
		 <p>Überprüfen Sie die untergeordneten Elemente, um nach dem FlowElement zu suchen, das die relative Position enthält. Die bereitgestellte relative Position ist relativ zu diesem FlowElement.</p>
		 
		 </apiDesc><example conref="examples\FlowGroupElement_findChildIndexAtPositionExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:findLeaf"><apiName>findLeaf</apiName><shortdesc>
		 Sucht bei einer gegebenen relativen Textposition nach dem Blattelement, das die Position enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das Blattelement, das die relative Position enthält.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>die zu suchende relative Textindexposition
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sucht bei einer gegebenen relativen Textposition nach dem Blattelement, das die Position enthält. 
		 
		 <p>Sucht in der Flusselementhierarchie nach dem FlowLeafElement. das die festgelegte Position enthält. Die festgelegte Position ist relativ zu diesem FlowElement-Objekt.</p>
		 
		 </apiDesc><example conref="examples\FlowGroupElement_findLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getChildAt"><apiName>getChildAt</apiName><shortdesc> 
		 Gibt das untergeordnete FlowElement an der festgelegten Indexposition zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das untergeordnete FlowElement-Objekt an der festgelegten Position.
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>die Position, an der nach dem FlowElement-Objekt gesucht wird.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Gibt das untergeordnete FlowElement an der festgelegten Indexposition zurück.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_getChildAtExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getChildIndex"><apiName>getChildIndex</apiName><shortdesc> 
		 Sucht in untergeordneten Elementen nach dem festgelegten FlowElement-Objekt und gibt dessen Indexposition zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Indexposition des festgelegten untergeordneten Elements. Wenn <codeph>child</codeph> nicht gefunden wurde, wird 1 zurückgegeben.
		  
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>Das FlowElement-Objekt, nach dem die untergeordneten Elemente durchsucht werden.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Sucht in untergeordneten Elementen nach dem festgelegten FlowElement-Objekt und gibt dessen Indexposition zurück.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getFirstLeaf"><apiName>getFirstLeaf</apiName><shortdesc>
		 Gibt das erste untergeordnete FlowLeafElement für diese Gruppe zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das erste FlowLeafElement-Objekt.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Gibt das erste untergeordnete FlowLeafElement für diese Gruppe zurück.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_getFirstLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getLastLeaf"><apiName>getLastLeaf</apiName><shortdesc>
		 Gibt das letzte untergeordnete FlowLeafElement für diese Gruppe zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das letzte FlowLeafElement-Objekt.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Gibt das letzte untergeordnete FlowLeafElement für diese Gruppe zurück.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_getLastLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getText"><apiName>getText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>paragraphSeparator</apiItemName><apiType value="String"/><apiData> </apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:removeChildAt"><apiName>removeChildAt</apiName><shortdesc> 
		 Entfernt das untergeordnete FlowElement-Objekt an der festgelegten Indexposition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Der <codeph>index</codeph> ist außerhalb des gültigen Bereichs.
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>Das untergeordnete FlowElement-Objekt, das von der festgelegten Position entfernt wurde.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="uint"/><apiDesc>Position, an der das untergeordnete Element entfernt wird.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Entfernt das untergeordnete FlowElement-Objekt an der festgelegten Indexposition.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_removeChildAtExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:removeChild"><apiName>removeChild</apiName><shortdesc> 
		 Entfernt das angegebene untergeordnete FlowElement-Objekt aus der Gruppe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Das <codeph>child</codeph> wird nicht gefunden.
		 
		 </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiReturn><apiDesc>Das entfernte untergeordnete FlowElement-Objekt. 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>Das zu entfernende untergeordnete Element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Entfernt das angegebene untergeordnete FlowElement-Objekt aus der Gruppe.
		 
		 </apiDesc><example conref="examples\FlowGroupElement_removeChildExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:replaceChildren"><apiName>replaceChildren</apiName><shortdesc>
		 Ersetzt untergeordnete Elemente in der Gruppe durch die festgelegten neuen Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Der angegebene Wert für <codeph>beginChildIndex</codeph> oder <codeph>endChildIndex</codeph> liegt außerhalb des gültigen Bereichs.
	     
	     </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginChildIndex</apiItemName><apiType value="int"/><apiDesc>Der Indexwert für die Startposition des Ersetzungsbereichs im Array der untergeordneten Elemente.
		 </apiDesc></apiParam><apiParam><apiItemName>endChildIndex</apiItemName><apiType value="int"/><apiDesc>Der Indexwert für die Endposition des Ersetzungsbereichs im Array der untergeordneten Elemente.
		 </apiDesc></apiParam><apiParam><apiItemName>rest</apiItemName><apiType value="restParam"/><apiDesc>Die Elemente, die den festgelegten Bereich mit Elementen ersetzen. Dies kann eine Folge sein, die Textflusselemente oder entsprechende Arrays bzw. Vektoren enthält.
		  
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Ersetzt untergeordnete Elemente in der Gruppe durch die festgelegten neuen Elemente. Verwenden Sie die <codeph>beginChildIndex</codeph>- und <codeph>endChildIndex</codeph>-Parameter, um den Vorgang folgenderweise zu bestimmen:
		 <p><ul>
		 <li>Übergeben Sie keine Ersatzelemente, um Elemente zu löschen.</li>
		 <li>Um Elemente einzufügen, übergeben Sie den gleichen Wert für <codeph>beginChildIndex</codeph> und <codeph>endChildIndex</codeph>. Die neuen Elemente werden vor der festgelegten Indexposition eingefügt.</li>
		 <li>Um Elemente anzuhängen, übergeben Sie <codeph>numChildren</codeph> für <codeph>beginChildIndex</codeph> und <codeph>endChildIndex</codeph>.</li>
		 </ul></p>
		 <p>Andernfalls ersetzt diese Methode die festgelegten Elemente beginnend mit dem Element in <codeph>beginChildIndex</codeph> und endend in <codeph>endChildIndex</codeph> (wobei dieses nicht inbegriffen ist).</p>
		 
		 </apiDesc><example conref="examples\FlowGroupElement_replaceChildrenExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:splitAtIndex"><apiName>splitAtIndex</apiName><shortdesc> 
		 Teilt dieses Objekt an der Position, die durch den childIndex-Parameter festgelegt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>wenn <codeph>childIndex</codeph> größer als die Länge der untergeordneten Elemente ist.
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>das neue FlowGroupElement-Objekt.
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowGroupElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>childIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> 
		 Teilt dieses Objekt an der Position, die durch den <codeph>childIndex</codeph>-Parameter festgelegt wurde. Wenn dieses Gruppenelement ein übergeordnetes Element hat, wird eine oberflächliche Kopie dieses Objekts erstellt und seine untergeordneten Elemente werden durch die Elemente bis zur Indexposition ersetzt. Verschiebt Elemente nach <codeph>childIndex</codeph> in die Kopie.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:FlowGroupElement:mxmlChildren:get"><apiName>mxmlChildren</apiName><shortdesc> 
		 Wendet ein Array von untergeordneten Elementen auf dieses Objekt an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiException><apiDesc>Wenn das Array-Element kein FlowElement oder String ist.
		 </apiDesc><apiItemName>TypeError</apiItemName><apiOperationClassifier>TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> 
		 Wendet ein Array von untergeordneten Elementen auf dieses Objekt an. Verwendet die <codeph>replaceChildren()</codeph>-Methode zum Anhängen der Elemente im Array. Vorgesehen für die Verwendung während eines MXML-kompilierten Imports.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowGroupElement/replaceChildren()"><linktext>FlowGroupElement.replaceChildren()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowGroupElement:numChildren:get"><apiName>numChildren</apiName><shortdesc> 
		Gibt die Anzahl der untergeordneten FlowElements dieses FlowGroupElement-Objekts zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		Gibt die Anzahl der untergeordneten FlowElements dieses FlowGroupElement-Objekts zurück.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>