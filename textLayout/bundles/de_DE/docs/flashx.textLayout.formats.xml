<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.formats"><apiName>flashx.textLayout.formats</apiName><apiDetail/><apiClassifier id="flashx.textLayout.formats:ITabStopFormat"><apiName>ITabStopFormat</apiName><shortdesc>
	 Diese Schnittstelle stellt Lesezugriff für Eigenschaften in Verbindung mit Tabulatoren bereit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Diese Schnittstelle stellt Lesezugriff für Eigenschaften in Verbindung mit Tabulatoren bereit.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.formats:ITabStopFormat:flashx.textLayout.formats:ITabStopFormat:alignment:get"><apiName>alignment</apiName><shortdesc>
		 Die Ausrichtung für diesen Tabulator.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die Ausrichtung für diesen Tabulator. 
		 <p>Zulässige Werte sind flash.text.engine.TabAlignment.START, flash.text.engine.TabAlignment.CENTER, flash.text.engine.TabAlignment.END, flash.text.engine.TabAlignment.DECIMAL, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert START an.</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link><link href="" invalidHref="flash.text.engine.TabAlignment.xml"><linktext>flash.text.engine.TabAlignment</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITabStopFormat:flashx.textLayout.formats:ITabStopFormat:decimalAlignmentToken:get"><apiName>decimalAlignmentToken</apiName><shortdesc>
		 Das Ausrichtungs-Token, das verwendet wird, wenn die Ausrichtung dezimal ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Das Ausrichtungs-Token, das verwendet wird, wenn die Ausrichtung dezimal ist.
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert „null“ an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITabStopFormat:flashx.textLayout.formats:ITabStopFormat:position:get"><apiName>position</apiName><shortdesc>
		 Die Position des Tabulators in Pixeln relativ zum Beginn der Textzeile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die Position des Tabulators, in Pixeln, relativ zum Beginn der Textzeile.
		 <p>Zulässige Werte sind Zahlen von 0 bis 10000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:Direction"><apiName>Direction</apiName><shortdesc>
	  Definiert die Werte für die Einstellung der direction-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert die Werte für die Einstellung der <codeph>direction</codeph>-Eigenschaft der <codeph>TextLayoutFormat</codeph>-Klasse. Die Links-nach-Rechts-Leserichtung wird für Schriften mit lateinischen Zeichen verwendet. Die Rechts-nach-Links-Leserichtung wird für Schriften wie Arabisch und Hebräisch verwendet. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/direction"><linktext>TextLayoutFormat.direction</linktext></link></related-links><apiValue id="flashx.textLayout.formats:Direction:LTR"><apiName>LTR</apiName><shortdesc> Legt die Links-nach-Rechts-Richtung für den Text fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ltr</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Links-nach-Rechts-Richtung für den Text fest. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:Direction:RTL"><apiName>RTL</apiName><shortdesc> Legt die Rechts-nach-Links-Richtung für den Text fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rtl</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Rechts-nach-Links-Richtung für den Text fest. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:VerticalAlign"><apiName>VerticalAlign</apiName><shortdesc>
	  Definiert Werte für die verticalAlign-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte für die <codeph>verticalAlign</codeph>-Eigenschaft der TextLayoutFormat-Klasse. Legt fest, wie TextFlow-Elemente innerhalb ihres Containers ausgerichtet werden.  
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/verticalAlign"><linktext>TextLayoutFormat.verticalAlign</linktext></link></related-links><apiValue id="flashx.textLayout.formats:VerticalAlign:BOTTOM"><apiName>BOTTOM</apiName><shortdesc> Legt die Ausrichtung am unteren Rand des Rahmens fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung am unteren Rand des Rahmens fest. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:VerticalAlign:JUSTIFY"><apiName>JUSTIFY</apiName><shortdesc> Legt die vertikale Ausrichtung der Zeilen innerhalb des Rahmens fest. 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>justify</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die vertikale Ausrichtung der Zeilen innerhalb des Rahmens fest. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:VerticalAlign:MIDDLE"><apiName>MIDDLE</apiName><shortdesc> Legt die Ausrichtung an der Mitte des Rahmens fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>middle</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung an der Mitte des Rahmens fest. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:VerticalAlign:TOP"><apiName>TOP</apiName><shortdesc> Legt die Ausrichtung am oberen Rand des Rahmens fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung am oberen Rand des Rahmens fest. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextDecoration"><apiName>TextDecoration</apiName><shortdesc>
	  Definiert Werte für die textDecoration-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte für die <codeph>textDecoration</codeph>-Eigenschaft der TextLayoutFormat-Klasse. Die Werte legen entweder normalen Text ohne Auszeichnung oder unterstrichenen Text fest.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textDecoration"><linktext>TextLayoutFormat.textDecoration</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TextDecoration:NONE"><apiName>NONE</apiName><shortdesc> Legt normalen Text fest - es wird keine Auszeichnung angewendet. 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt normalen Text fest - es wird keine Auszeichnung angewendet. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextDecoration:UNDERLINE"><apiName>UNDERLINE</apiName><shortdesc> Legt fest, dass der Text unterstrichen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>underline</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass der Text unterstrichen ist. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:JustificationRule"><apiName>JustificationRule</apiName><shortdesc>
	  Definiert Werte für die justificationRule-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte für die <codeph>justificationRule</codeph>-Eigenschaft der TextLayoutFormat-Klasse. Standardwert ist SPACE, mit dem die Ausrichtung durch Hinzufügen eines zusätzlichen Leerraums zum Leerzeichen erzielt wird. Bei der Verwendung von EAST_ASIAN gilt der Zeilenabstand für japanische Schrift, der nicht wie bei Text in lateinischer Schrift oberhalb angewendet wird, sondern unterhalb. Der Abstand der Interpunktion ist ebenfalls unterschiedlich. Beim Normalschnitt nehmen sowohl Komma als auch japanische Punkte die volle Zeichenbreite ein, im ostasiatischen Stil dagegen nur die halbe. Zusätzlich wird der Abstand zwischen aufeinanderfolgenden Satzzeichen geringer und folgt damit traditionellen ostasiatischen typographischen Konventionen. Beachten Sie außerdem im folgenden Beispiel den Zeilenabstand, der auf die zweite Zeile der Absätze angewendet wird. In der ostasiatischen Version werden die letzten zwei Zeilen nach links verschoben. In der lateinischen Version werden die zweite und folgende Zeilen nach links verschoben.
	  <p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/justificationRule"><linktext>TextLayoutFormat.justificationRule</linktext></link></related-links><apiValue id="flashx.textLayout.formats:JustificationRule:EAST_ASIAN"><apiName>EAST_ASIAN</apiName><shortdesc> Legt die ostasiatischen Ausrichtungsregeln fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>eastAsian</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die ostasiatischen Ausrichtungsregeln fest. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:JustificationRule:SPACE"><apiName>SPACE</apiName><shortdesc> Legt die Ausrichtung für die lateinische und andere horizontale Schriftarten fest, die Worte mithilfe von Leerzeichen abgrenzen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>space</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung für Latein und andere horizontale Schriftarten fest, die Worte mithilfe von Leerzeichen abgrenzen. Verwenden Sie diesen Wert immer, außer für asiatischen Text.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextJustify"><apiName>TextJustify</apiName><shortdesc>
	  Definiert die Werte für die Einstellung der textJustify-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert die Werte für die Einstellung der <codeph>textJustify</codeph>-Eigenschaft der TextLayoutFormat-Klasse. Der Standardwert ist INTER_WORD, d. h., bei der Ausrichtung wird den Leerzeichen zusätzlicher Leerraum hinzugefügt. DISTRIBUTE legt fest, dass sowohl zu Leerzeichen als auch zwischen einzelnen Zeichen zusätzlicher Leerraum eingefügt wird. Verwenden Sie diese Werte nur, wenn Sie <codeph>justificationRule</codeph> auf „SPACE“ setzen.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textJustify"><linktext>TextLayoutFormat.textJustify</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/justificationRule"><linktext>TextLayoutFormat.justificationRule</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TextJustify:DISTRIBUTE"><apiName>DISTRIBUTE</apiName><shortdesc> Gibt an, dass durch die Ausrichtung Leerraum zu Leerzeichen und zwischen einzelne Buchstaben hinzugefügt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>distribute</apiData><apiType value="String"/></apiValueDef><apiDesc> Gibt an, dass durch die Ausrichtung Leerraum zu Leerzeichen und zwischen einzelne Buchstaben hinzugefügt werden soll.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextJustify:INTER_WORD"><apiName>INTER_WORD</apiName><shortdesc> Gibt an, dass durch die Ausrichtung Leerraum zu Leerzeichen hinzugefügt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>interWord</apiData><apiType value="String"/></apiValueDef><apiDesc> Gibt an, dass durch die Ausrichtung Leerraum zu Leerzeichen hinzugefügt werden soll. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TLFTypographicCase"><apiName>TLFTypographicCase</apiName><shortdesc>
	  Definiert Werte für die typographicCase-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte für die <codeph>typographicCase</codeph>-Eigenschaft der TextLayoutFormat-Klasse. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/typographicCase"><linktext>TextLayoutFormat.typographicCase</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TLFTypographicCase:CAPS_TO_SMALL_CAPS"><apiName>CAPS_TO_SMALL_CAPS</apiName><shortdesc> Legt fest, dass für Großbuchstaben bei der Ausgabe Kapitälchenglyphen verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>capsToSmallCaps</apiData><apiType value="String"/></apiValueDef><apiDesc> Gibt an, dass für Großbuchstaben bei der Ausgabe Kapitälchenglyphen verwendet werden. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:DEFAULT"><apiName>DEFAULT</apiName><shortdesc> Legt die standardmäßige typographische Groß-/Kleinschreibung fest. Besondere Merkmale werden nicht angewendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>default</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die standardmäßige typographische Groß-/Kleinschreibung fest. Besondere Merkmale werden nicht angewendet. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:LOWERCASE_TO_SMALL_CAPS"><apiName>LOWERCASE_TO_SMALL_CAPS</apiName><shortdesc> Konvertiert alle Kleinbuchstaben zu Großbuchstaben und wendet danach ausschließlich bei den während der Konvertierung geänderten Zeichen Kapitälchen an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lowercaseToSmallCaps</apiData><apiType value="String"/></apiValueDef><apiDesc> Konvertiert alle Kleinbuchstaben zu Großbuchstaben und wendet danach ausschließlich bei den während der Konvertierung geänderten Zeichen Kapitälchen an. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:LOWERCASE"><apiName>LOWERCASE</apiName><shortdesc> Legt fest, dass für alle Zeichen bei der Ausgabe Kleinbuchstabenglyphen verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lowercase</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass für alle Zeichen bei der Ausgabe Kleinbuchstabenglyphen verwendet werden. 
  	 	 
  	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:UPPERCASE"><apiName>UPPERCASE</apiName><shortdesc> Legt fest, dass für alle Zeichen bei der Ausgabe Großbuchstabenglyphen verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>uppercase</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass für alle Zeichen bei der Ausgabe Großbuchstabenglyphen verwendet werden.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BaselineShift"><apiName>BaselineShift</apiName><shortdesc>
	  Definiert Konstanten für die Bestimmung von Tiefgestellt- oder Hochgestellt-Zeichen in der baselineShift-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Konstanten für die Bestimmung von Tiefgestellt- oder Hochgestellt-Zeichen in der <codeph>baselineShift</codeph>-Eigenschaft der <codeph>TextLayoutFormat</codeph>-Klasse. Sie können die Verschiebung der Grundlinie als absoluten Offset in Pixeln, als Prozentsatz des aktuellen Schriftgrads oder mithilfe der Konstanten Hochgestellt und Tiefgestellt festlegen. Positive Werte verschieben die Zeile bei horizontalem Text nach oben (bei vertikalem nach rechts), negative Werte verschieben sie bei horizontalem Text nach unten (bei vertikalem nach links). 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/baselineShift"><linktext>TextLayoutFormat.baselineShift</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BaselineShift:SUBSCRIPT"><apiName>SUBSCRIPT</apiName><shortdesc> Verschiebt die Grundlinie auf die aktuelle Position der tiefgestellten Zeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscript</apiData><apiType value="String"/></apiValueDef><apiDesc> Verschiebt die Grundlinie auf die aktuelle Position der tiefgestellten Zeichen.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BaselineShift:SUPERSCRIPT"><apiName>SUPERSCRIPT</apiName><shortdesc> Verschiebt die Grundlinie auf die aktuelle Position der hochgestellten Zeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>superscript</apiData><apiType value="String"/></apiValueDef><apiDesc> Verschiebt die Grundlinie auf die aktuelle Position der hochgestellten Zeichen.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TabStopFormat"><apiName>TabStopFormat</apiName><shortdesc>
	 Die TabStopFormat-Klasse stellt die Eigenschaften eines Tabulators in einem Absatz dar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.formats:ITabStopFormat</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Die TabStopFormat-Klasse stellt die Eigenschaften eines Tabulators in einem Absatz dar. Sie können die <codeph>TextLayoutFormat.tabstops</codeph>-Eigenschaft auf ein Array von TabStopFormat-Objekten einstellen.
	 </apiDesc><example conref="examples\TabStopFormat_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TabElement"><linktext>flashx.textLayout.elements.TabElement</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/tabStops"><linktext>flashx.textLayout.formats.TextLayoutFormat.tabStops</linktext></link></related-links><apiConstructor id="flashx.textLayout.formats:TabStopFormat:TabStopFormat"><apiName>TabStopFormat</apiName><shortdesc>
		 Erstellt ein neues TabStopFormat-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initialValues</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiData>null</apiData><apiDesc>Optionale Instanz, von der Startwerte kopiert werden können.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Erstellt ein neues TabStopFormat-Objekt. Alle Einstellungen sind leer oder werden, optional, vom bereitgestellten <codeph>initialValues</codeph>-Objekt initialisiert.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.formats.xml#TabStopFormat/defaultFormat"><linktext>defaultFormat</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.formats:TabStopFormat:apply"><apiName>apply</apiName><shortdesc>
		 Ersetzt die Eigenschaftswerte in diesem TabStopFormat-Objekt durch die Werte der Eigenschaften, die in der eingehenden ITabStopFormat-Instanz eingestellt sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, deren Eigenschaftswerte auf dieses TabStopFormat-Objekt angewendet werden.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Ersetzt die Eigenschaftswerte in diesem TabStopFormat-Objekt durch die Werte der Eigenschaften, die in der <codeph>incoming</codeph> ITabStopFormat-Instanz eingestellt sind. Eigenschaften, die in der <codeph>incoming</codeph> ITabStopFormat-Instanz <codeph>undefined</codeph> sind, werden in diesem Objekt nicht verändert.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:concatInheritOnly"><apiName>concatInheritOnly</apiName><shortdesc>
		 Verkettet die Werte von Eigenschaften in der eintreffenden ITabStopFormat-Instanz mit den Werten dieses TabStopFormat-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, von der aus Werte verkettet werden.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verkettet die Werte von Eigenschaften in der <codeph>incoming</codeph> ITabStopFormat-Instanz mit den Werten dieses TabStopFormat-Objekts. In diesem (dem empfangenden) TabStopFormat-Objekt erhalten Eigenschaften, deren Werte <codeph>FormatValue.INHERIT</codeph> sind und erbende Eigenschaften, deren Werte <codeph>undefined</codeph> sind, neue Werte vom <codeph>ankommenden</codeph> Objekt. Alle anderen Eigenschaftswerte bleiben unverändert. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:concat"><apiName>concat</apiName><shortdesc>
		 Verkettet die Werte von Eigenschaften in der eintreffenden ITabStopFormat-Instanz mit den Werten dieses TabStopFormat-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, von der aus Werte verkettet werden.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verkettet die Werte von Eigenschaften in der <codeph>incoming</codeph> ITabStopFormat-Instanz mit den Werten dieses TabStopFormat-Objekts. In diesem (dem empfangenden) TabStopFormat-Objekt erhalten Eigenschaften, deren Werte <codeph>FormatValue.INHERIT</codeph> sind und erbende Eigenschaften, deren Werte <codeph>undefined</codeph> sind, neue Werte vom <codeph>ankommenden</codeph> Objekt. Nicht erbende Eigenschaften, deren Werte <codeph>undefined</codeph> sind, erhalten ihre Standardwerte. Alle anderen Eigenschaftswerte bleiben unverändert. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:copy"><apiName>copy</apiName><shortdesc>
		 Kopiert TabStopFormat-Einstellungen aus der ITabStopFormat-Instanz des Werts in dieses TabStopFormat-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Optionale Instanz, aus der Werte kopiert werden können.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Kopiert TabStopFormat-Einstellungen aus der ITabStopFormat-Instanz des <codeph>values</codeph> in dieses TabStopFormat-Objekt. Wenn für <codeph>values</codeph> der Wert <codeph>null</codeph> festgelegt ist, wird dieses TabStopFormat-Objekt mit nicht definierten Werten für alle Eigenschaften initialisiert.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:isEqual"><apiName>isEqual</apiName><shortdesc>
		 Vergleicht Eigenschaften in der ITabStopFormat-Instanz 1 mit Eigenschaften in der ITabStopFormat-Instanz p2 und gibt „true“ zurück, wenn alle Eigenschaften übereinstimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>„true“, wenn alle Eigenschaften übereinstimmen, andernfalls „false“.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>p1</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, die mit <codeph>p2</codeph> verglichen werden soll.
		 </apiDesc></apiParam><apiParam><apiItemName>p2</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, die mit <codeph>p1</codeph> verglichen werden soll.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Vergleicht Eigenschaften in der ITabStopFormat-Instanz <codeph>p1</codeph> mit Eigenschaften in der ITabStopFormat-Instanz <codeph>p2</codeph> und gibt <codeph>true</codeph> zurück, wenn alle Eigenschaften übereinstimmen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:removeClashing"><apiName>removeClashing</apiName><shortdesc>
		 Stellt Eigenschaften in diesem TabStopFormat-Objekt auf „undefined“ ein, wenn sie nicht mit denen in der eingehenden TabStopFormat-Instanz übereinstimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, mit der die Eigenschaftswerte dieses TabStopFormat-Objekts verglichen werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Stellt Eigenschaften in diesem TabStopFormat-Objekt auf <codeph>undefined</codeph> ein, wenn sie nicht mit denen in der <codeph>incoming</codeph> TabStopFormat-Instanz übereinstimmen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:removeMatching"><apiName>removeMatching</apiName><shortdesc>
		 Stellt Eigenschaften in diesem TabStopFormat-Objekt auf „undefined“ ein, wenn sie mit denen in der eingehenden ITabStopFormat-Instanz übereinstimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>Instanz, mit der die Eigenschaftswerte dieses TabStopFormat-Objekts verglichen werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Stellt Eigenschaften in diesem TabStopFormat-Objekt auf <codeph>undefined</codeph> ein, wenn sie mit denen in der <codeph>incoming</codeph> ITabStopFormat-Instanz übereinstimmen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.formats:TabStopFormat:alignment:get"><apiName>alignment</apiName><shortdesc>
		 Die Ausrichtung für diesen Tabulator.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die Ausrichtung für diesen Tabulator. 
		 <p>Zulässige Werte sind flash.text.engine.TabAlignment.START, flash.text.engine.TabAlignment.CENTER, flash.text.engine.TabAlignment.END, flash.text.engine.TabAlignment.DECIMAL, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert START an.</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link><link href="" invalidHref="flash.text.engine.TabAlignment.xml"><linktext>flash.text.engine.TabAlignment</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TabStopFormat:decimalAlignmentToken:get"><apiName>decimalAlignmentToken</apiName><shortdesc>
		 Das Ausrichtungs-Token, das verwendet wird, wenn die Ausrichtung dezimal ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Das Ausrichtungs-Token, das verwendet wird, wenn die Ausrichtung dezimal ist.
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert „null“ an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TabStopFormat:defaultFormat:get"><apiName>defaultFormat</apiName><shortdesc>
		 Gibt ein TabStopFormat-Objekt mit Standardeinstellungen zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITabStopFormat</apiValueClassifier></apiValueDef><apiDesc>
		 Gibt ein TabStopFormat-Objekt mit Standardeinstellungen zurück. Diese Funktion gibt immer das gleiche Objekt zurück.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TabStopFormat:position:get"><apiName>position</apiName><shortdesc>
		 Die Position des Tabulators, in Pixeln, relativ zum Beginn der Textzeile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die Position des Tabulators, in Pixeln, relativ zum Beginn der Textzeile.
		 <p>Zulässige Werte sind Zahlen von 0 bis 10000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:FormatValue"><apiName>FormatValue</apiName><shortdesc>
	  Definiert Werte zum Angeben, dass durch eine Formatierungseigenschaft der Wert des übergeordneten Elements übernommen oder der Wert automatisch generiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte zum Angeben, dass durch eine Formatierungseigenschaft der Wert des übergeordneten Elements übernommen oder der Wert automatisch generiert wird. Die <codeph>INHERIT</codeph>-Konstante legt fest, dass eine Eigenschaft den Wert des übergeordneten Elements übernimmt, während die <codeph>AUTO</codeph>-Konstante festlegt, dass ein interner Algorithmus den Wert der Eigenschaft automatisch ermittelt. Beispiel: Sie können <codeph>TextLayoutFormat.columnWidth</codeph> mit diesen Werten einstellen. Normalerweise gibt die Beschreibung der Eigenschaft an, ob diese Konstanten akzeptiert werden.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat"><linktext>TextLayoutFormat</linktext></link></related-links><apiValue id="flashx.textLayout.formats:FormatValue:AUTO"><apiName>AUTO</apiName><shortdesc> Legt fest, dass ein Eigenschaftswert automatisch generiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass ein Eigenschaftswert automatisch generiert wird. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:FormatValue:INHERIT"><apiName>INHERIT</apiName><shortdesc> Legt fest, dass eine Eigenschaft den Wert ihres übergeordneten Elements übernimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>inherit</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass eine Eigenschaft den Wert ihres übergeordneten Elements übernimmt.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextAlign"><apiName>TextAlign</apiName><shortdesc>
	  Definiert die Werte für die Einstellung der textAlign- und textAlignLast-Eigenschaften der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert die Werte für die Einstellung der <codeph>textAlign</codeph>- und <codeph>textAlignLast</codeph>-Eigenschaften der TextLayoutFormat-Klasse. Die Werte beschreiben die Ausrichtung der Zeilen innerhalb des Absatzes relativ zum Container.
	 
	 </apiDesc><example conref="examples\TextAlignExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textAlign"><linktext>TextLayoutFormat.textAlign</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textAlignLast"><linktext>TextLayoutFormat.textAlignLast</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TextAlign:CENTER"><apiName>CENTER</apiName><shortdesc> Legt die Zentrierung innerhalb des Containers fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Zentrierung innerhalb des Containers fest.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:END"><apiName>END</apiName><shortdesc> Legt die Ausrichtung an der Endkante fest. Der Text wird entgegen der Schreibrichtung ausgerichtet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>end</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung an der Endkante fest. Der Text wird entgegen der Schreibrichtung ausgerichtet. In von links nach rechts geschriebenem Text entspricht dies der Einstellung für Rechts, in von rechts nach links verlaufenden Text der Einstellung für Links. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:JUSTIFY"><apiName>JUSTIFY</apiName><shortdesc> Legt fest, dass der Text innerhalb der Zeilen ausgerichtet ist, sodass diese den Container ausfüllen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>justify</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass der Text innerhalb der Zeilen ausgerichtet ist, sodass diese den Container ausfüllen.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:LEFT"><apiName>LEFT</apiName><shortdesc> Legt die Ausrichtung an der linken Kante fest (linksbündig).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung an der linken Kante fest (linksbündig). 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:RIGHT"><apiName>RIGHT</apiName><shortdesc> Legt die Ausrichtung an der rechten Kante fest (rechtsbündig).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung an der rechten Kante fest (rechtsbündig). 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:START"><apiName>START</apiName><shortdesc> Legt die Ausrichtung an der Startkante fest. Der Text wird passend zur Schreibrichtung ausgerichtet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>start</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt die Ausrichtung an der Startkante fest. Der Text wird passend zur Schreibrichtung ausgerichtet. In von links nach rechts geschriebenem Text entspricht dies der Einstellung für Links, in von rechts nach links verlaufenden Text der Einstellung für Rechts.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextLayoutFormat"><apiName>TextLayoutFormat</apiName><shortdesc>
	 Die TextLayoutFormat-Klasse enthält alle Textlayout-Eigenschaften.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.formats:ITextLayoutFormat</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Die TextLayoutFormat-Klasse enthält alle Textlayout-Eigenschaften. Diese Eigenschaften beeinflussen das Format und den Stil eines Textflusses auf Container-, Absatz- und Textebene. Die ContainerController-Klasse und die FlowElement-Basisklasse besitzen <codeph>format</codeph>-Eigenschaften, die es ermöglichen, diesen Klassen eine TextLayoutFormat-Instanz zuzuweisen. Weisen Sie das TextLayoutFormat-Objekt einem Container zu, wenn das Format für dessen gesamten Inhalt gelten soll. Weisen Sie ein TextLayoutFormat-Objekt einem untergeordneten FlowElement-Element zu, um die Formatierung für das jeweilige Element festzulegen: TextFlow, ParagraphElement, DivElement, SpanElement, InlineGraphicElement, LinkElement und TCYElement. Zusätzlich zur <codeph>format</codeph>-Eigenschaft definieren diese Klassen auch die einzelnen TextLayoutFormat-Eigenschaften, sodass Sie die Einstellungen einer bestimmten Stileigenschaft für dieses Element bei Bedarf außer Kraft setzen können. <p>Da Sie einen gegebenen Stil auf mehreren Ebenen einstellen können, kann es zu Konflikten kommen. Beispiel: Für die Farbe des Texts auf der TextFlow-Ebene kann Schwarz eingestellt sein, für ein SpanElement-Objekt jedoch Blau. Als allgemeine Regel gilt, dass die Einstellungen auf der niedrigsten Ebene des Textflussbaums Vorrang haben. Wenn die Ligaturebene einerseits für eine TextFlow-Instanz und andererseits für ein DivElement eingestellt ist, so hat die DivElement-Einstellung Vorrang. </p><p>Unter Stilkaskaden versteht man den Prozess des Übernehmens von Stilen höherer Ebenen im Textfluss, wenn auf der niedrigeren Ebene keine Stilwerte definiert sind. Wenn ein Stil für ein Element nicht definiert ist, wenn dieses gerendert werden soll, wird entweder der Standardwert verwendet oder der Wert eines übergeordneten Elements wird übernommen. Beispiel: Wenn die Transparenz (<codeph>textAlpha</codeph>-Eigenschaft) des Texts für ein SpanElement-Objekt nicht definiert ist, für den TextFlow jedoch eingestellt wurde, wird dieser Wert der <codeph>TextFlow.textAlpha</codeph>-Eigenschaft für das SpanElement-Objekts übernommen auf den Text in diesem Bereich angewendet. Das Ergebnis der Kaskade oder die Summe der Stile, die auf das Element angewendet werden, werden in der <codeph>computedFormat</codeph>-Eigenschaft des Elements gespeichert.</p><p>Auf die gleiche Weise können Sie Benutzerstile anwenden, indem Sie die <codeph>userStyles</codeph>-Eigenschaft der ContainerController- und der FlowElement-Klasse verwenden. Diese Eigenschaft ermöglicht es Ihnen, ein Wörterbuch der Benutzerstile zu lesen und zu schreiben und dessen Einstellungen auf einen Container oder ein Textflusselement anzuwenden. Das Wörterbuch der Benutzerstile ist ein Objekt, das aus <i>stylename-value</i>-Paaren besteht. Stile, die von der <codeph>userStyles</codeph>-Eigenschaft festgelegt wurden, haben Vorrang vor allen anderen.</p><p>Die meisten nicht definierten Stile übernehmen den Wert des unmittelbar übergeordneten Elements während einer Kaskade. Eine geringe Anzahl von Stilen übernehmen jedoch nicht den Wert des übergeordneten Elements und verwenden die Standardwerte stattdessen.</p><p><b>Folgende Stileigenschaften verwenden beispielsweise die zugehörigen Standardwerte, wenn sie nicht definiert sind:</b> <codeph>backgroundAlpha</codeph>, <codeph>backgroundColor</codeph>, <codeph>columnCount</codeph>, <codeph>columnGap</codeph>, <codeph>columnWidth</codeph>, <codeph>lineBreak</codeph>, <codeph>paddingBottom</codeph>, <codeph>paddingLeft</codeph>, <codeph>paddingRight</codeph>, <codeph>paddingTop</codeph>, <codeph>verticalAlign</codeph></p>.
	 </apiDesc><example conref="examples\TextLayoutFormatExample.as"/><example conref="examples\TextLayoutFormatExample2.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/format"><linktext>flashx.textLayout.elements.FlowElement.format</linktext></link><link href="flashx.textLayout.factory.xml#TextFlowTextLineFactory"><linktext>flashx.textLayout.factory.TextFlowTextLineFactory</linktext></link></related-links><apiConstructor id="flashx.textLayout.formats:TextLayoutFormat:TextLayoutFormat"><apiName>TextLayoutFormat</apiName><shortdesc>
		 Erstellt ein neues TextLayoutFormat-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initialValues</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiData>null</apiData><apiDesc>Optionale Instanz, aus der Werte kopiert werden können.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Erstellt ein neues TextLayoutFormat-Objekt. Alle Einstellungen sind leer oder werden optional vom bereitgestellten <codeph>initialValues</codeph>-Objekt initialisiert.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/defaultFormat"><linktext>defaultFormat</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:apply"><apiName>apply</apiName><shortdesc>
		 Ersetzt die Eigenschaftswerte in diesem TextLayoutFormat-Objekt durch die Werte der Eigenschaften, die in der eingehenden ITextLayoutFormat-Instanz eingestellt sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, deren Eigenschaftswerte auf dieses TextLayoutFormat-Objekt angewendet werden.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Ersetzt die Eigenschaftswerte in diesem TextLayoutFormat-Objekt durch die Werte der Eigenschaften, die in der <codeph>incoming</codeph> ITextLayoutFormat-Instanz eingestellt sind. Eigenschaften mit dem Wert <codeph>undefined</codeph> in der <codeph>incoming</codeph> ITextLayoutFormat-Instanz werden in diesem Objekt nicht geändert.
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_applyExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:concatInheritOnly"><apiName>concatInheritOnly</apiName><shortdesc>
		 Verkettet die Werte von Eigenschaften in der eintreffenden ITextLayoutFormat-Instanz mit den Werten dieses TextLayoutFormat-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, aus der Werte verkettet werden.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verkettet die Werte von Eigenschaften in der <codeph>incoming</codeph> ITextLayoutFormat-Instanz mit den Werten dieses TextLayoutFormat-Objekts. In diesem (dem empfangenden) TextLayoutFormat-Objekt erhalten Eigenschaften, deren Werte <codeph>FormatValue.INHERIT</codeph> sind und erbende Eigenschaften, deren Werte <codeph>undefined</codeph> sind, neue Werte vom <codeph>ankommenden</codeph> Objekt. Alle anderen Eigenschaftswerte bleiben unverändert. 
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_concatInheritOnlyExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:concat"><apiName>concat</apiName><shortdesc>
		 Verkettet die Werte von Eigenschaften in der eintreffenden ITextLayoutFormat-Instanz mit den Werten dieses TextLayoutFormat-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, aus der Werte verkettet werden.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verkettet die Werte von Eigenschaften in der <codeph>incoming</codeph> ITextLayoutFormat-Instanz mit den Werten dieses TextLayoutFormat-Objekts. In diesem (dem empfangenden) TextLayoutFormat-Objekt erhalten Eigenschaften, deren Werte <codeph>FormatValue.INHERIT</codeph> sind und erbende Eigenschaften, deren Werte <codeph>undefined</codeph> sind, neue Werte vom <codeph>ankommenden</codeph> Objekt. Nicht erbende Eigenschaften, deren Werte <codeph>undefined</codeph> sind, erhalten ihre Standardwerte. Alle anderen Eigenschaftswerte bleiben unverändert. 
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_concatExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:copy"><apiName>copy</apiName><shortdesc>
		 Kopiert TextLayoutFormat-Einstellungen aus den Werten der ITextLayoutFormat-Instanz in dieses TextLayoutFormat-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Optionale Instanz, aus der Werte kopiert werden können.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Kopiert TextLayoutFormat-Einstellungen aus <codeph>values</codeph> der ITextLayoutFormat-Instanz in dieses TextLayoutFormat-Objekt. Wenn für <codeph>values</codeph> der Wert <codeph>null</codeph> festgelegt ist, wird dieses TextLayoutFormat-Objekt mit nicht definierten Werten für alle Eigenschaften initialisiert.
		 </apiDesc><example conref="examples\TextLayoutFormat_copyExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:isEqual"><apiName>isEqual</apiName><shortdesc>
		 Vergleicht Eigenschaften in der ITextLayoutFormat-Instanz p1 mit Eigenschaften in der ITextLayoutFormat-Instanz p2 und gibt „true“ zurück, wenn alle Eigenschaften übereinstimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>„true“, wenn alle Eigenschaften übereinstimmen, andernfalls „false“.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>p1</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, die mit <codeph>p2</codeph> verglichen werden soll.
		 </apiDesc></apiParam><apiParam><apiItemName>p2</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, die mit <codeph>p1</codeph> verglichen werden soll.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Vergleicht Eigenschaften in der ITextLayoutFormat-Instanz <codeph>p1</codeph> mit Eigenschaften in der ITextLayoutFormat-Instanz <codeph>p2</codeph> und gibt <codeph>true</codeph> zurück, wenn alle Eigenschaften übereinstimmen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:removeClashing"><apiName>removeClashing</apiName><shortdesc>
		 Stellt Eigenschaften in diesem TextLayoutFormat-Objekt auf „undefined“ ein, wenn sie nicht mit denen in der eingehenden ITextLayoutFormat-Instanz übereinstimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, mit der die Eigenschaftswerte dieses TextLayoutFormat-Objekts verglichen werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Stellt Eigenschaften in diesem TextLayoutFormat-Objekt auf <codeph>undefined</codeph> ein, wenn sie nicht mit denen in der <codeph>incoming</codeph> ITextLayoutFormat-Instanz übereinstimmen.
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_removeClashingExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:removeMatching"><apiName>removeMatching</apiName><shortdesc>
		 Stellt Eigenschaften in diesem TextLayoutFormat-Objekt auf „undefined“ ein, wenn sie mit denen in der „incoming“ ITextLayoutFormat-Instanz übereinstimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>Instanz, mit der die Eigenschaftswerte dieses TextLayoutFormat-Objekts verglichen werden sollen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Stellt Eigenschaften in diesem TextLayoutFormat-Objekt auf <codeph>undefined</codeph> ein, wenn sie mit denen in der <codeph>incoming</codeph> ITextLayoutFormat-Instanz übereinstimmen.
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_removeMatchingExample.as"/></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.formats:TextLayoutFormat:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 Gibt die Grundlinie an, an dem die dominierende Grundlinie ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die Grundlinie an, an dem die dominierende Grundlinie ausgerichtet wird. Wenn Sie beispielsweise <codeph>dominantBaseline</codeph> auf ASCENT setzen, wird durch Festlegen von <codeph>alignmentBaseline</codeph> auf DESCENT der obere Textrand an der DESCENT-Grundlinie oder unter der Linie ausgerichtet. Das größte Element in der Zeile bestimmt im Allgemeinen die Grundlinien.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert USE_DOMINANT_BASELINE verwendet.</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit dem alpha-Wert 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 1 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Kann entweder der Konstantenwert <codeph>BackgroundColor.TRANSPARENT</codeph> oder ein hexadezimaler Wert sein, der die drei RGB-Werte in 8-Bit (rot, grün, blau) festlegt; z. B. 0xFF0000 für Rot und 0x00FF00 für Grün.
		 <p>Zulässige Werte als String: flashx.textLayout.formats.BackgroundColor.TRANSPARENT, flashx.textLayout.formats.FormatValue.INHERIT und Einheiten von 0x0 bis 0xffffffff.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TRANSPARENT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 Betrag, um den die Grundlinie vom dominantBaseline-Wert verschoben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Betrag, um den die Grundlinie vom <codeph>dominantBaseline</codeph>-Wert verschoben wird. Einheiten in Pixeln oder einem Prozentwert für <codeph>fontSize</codeph> (geben Sie in diesem Fall einen Stringwert wie beispielsweise 140 % ein). Positive Werte verschieben die Zeile bei horizontalem Text nach oben (bei vertikalem nach rechts), negative Werte verschieben sie bei horizontalem Text nach unten (bei vertikalem nach links). 
		 <p>Zulässige Werte sind flashx.textLayout.formats.BaselineShift.SUPERSCRIPT, flashx.textLayout.formats.BaselineShift.SUBSCRIPT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 und 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0.0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an. Zeilen werden entweder von oben nach unten (<codeph>BlockProgression.TB</codeph> für horizontalen Text) oder von rechts nach links (<codeph>BlockProgression.RL</codeph> für vertikalen Text) platziert.
		 <p>Zulässige Werte sind flashx.textLayout.formats.BlockProgression.RL, flashx.textLayout.formats.BlockProgression.TB, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert TB verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 Steuert, an welcher Stelle Zeilen umbrochen werden können, wenn umbrochener Text in mehrere Zeilen umbrochen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuert, an welcher Stelle Zeilen umbrochen werden können, wenn umbrochener Text in mehrere Zeilen umbrochen wird. Mit der Einstellung <codeph>BreakOpportunity.AUTO</codeph> wird der Text normal umbrochen. Mit der Einstellung <codeph>BreakOpportunity.NONE</codeph> wird der Text <i>nicht</i> umbrochen, es sei denn, er wird zu lang und die Zeile kann an keiner anderen Position umbrochen werden. Legen Sie <codeph>BreakOpportunity.ANY</codeph> fest, damit die Zeile an einer beliebigen Stelle und nicht nur zwischen den Wörtern umbrochen werden kann. Legen Sie <codeph>BreakOpportunity.ALL</codeph> fest, damit jede typografische Gruppe auf einer einzelnen Zeile platziert wird (hilfreich bei Text in einem Pfad).
		 <p>Zulässige Werte sind flash.text.engine.BreakOpportunity.ALL, flash.text.engine.BreakOpportunity.ANY, flash.text.engine.BreakOpportunity.AUTO, flash.text.engine.BreakOpportunity.NONE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 Die für diesen Text verwendete Art des CFF-Hintings.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete Art des CFF-Hintings. Durch CFF-Hinting wird bestimmt, ob die Flash-Laufzeitumgebung erzwingt, dass starke horizontale Ausläufer in das Subpixel-Raster eingefügt werden oder nicht. Diese Eigenschaft gilt nur, wenn die <codeph>renderingMode</codeph>-Eigenschaft auf <codeph>RenderingMode.CFF</codeph> festgelegt und die Schriftart eingebettet ist (<codeph>fontLookup</codeph>-Eigenschaft auf <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt). Bei kleinen Bildschirmgrößen entsteht durch Hinting ein klar lesbarer Text.
		 <p>Zulässige Werte sind flash.text.engine.CFFHinting.NONE, flash.text.engine.CFFHinting.HORIZONTAL_STEM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert HORIZONTAL_STEM verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:color:get"><apiName>color</apiName><shortdesc>
		 Farbe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Farbe des Texts. Eine hexadezimale Zahl, die drei RGB-Werte in 8-Bit (rot, grün, blau) festlegt; z. B. 0xFF0000 für Rot und 0x00FF00 für Grün. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Die Spaltenzahl überschreibt die anderen Spalteneinstellungen. Als Wert ist eine ganze Zahl oder <codeph>FormatValue.AUTO</codeph> festgelegt, falls nicht angegeben. Wenn <codeph>columnCount</codeph> nicht festgelegt ist, wird <codeph>columnWidth</codeph> dazu verwendet, so viele Spalten zu erstellen, wie in den Container passen.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT sowie Ganzzahlen von 1 bis 50.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 20 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Wenn Sie die Breite, aber nicht die Anzahl der Spalten festlegen, erstellt TextLayout so viele Spalten dieser Breite wie möglich, wobei die Containerbreite und die <codeph>columnGap</codeph>-Einstellungen zugrunde gelegt werden. Der restliche Raum befindet sich links nach der letzten Spalte. Der Wert ist eine Zahl.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 8000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:defaultFormat:get"><apiName>defaultFormat</apiName><shortdesc>
		 Gibt ein TextLayoutFormat-Objekt mit Standardeinstellungen zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc>
		 Gibt ein TextLayoutFormat-Objekt mit Standardeinstellungen zurück. Diese Funktion gibt immer das gleiche Objekt zurück.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 Die für diesen Text verwendete Ziffernart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete Ziffernart. Die <codeph>DigitCase.OLD_STYLE</codeph>-Einstellung stellt eine Annäherung an Kleinbuchstaben mit verschiedenen Oberlängen und Unterlängen dar. Die Ziffern haben proportionale Zwischenräume. Dieser Stil ist nur in ausgewählten Schriftarten verfügbar, am häufigsten in einem zusätzlichen oder Expert-Font. Die <codeph>DigitCase.LINING</codeph>-Einstellung hat eine All-Cap-Höhe und erscheint für die Darstellung in Tabellen im Allgemeinen in Monospace.<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitCase.DEFAULT, flash.text.engine.DigitCase.LINING, flash.text.engine.DigitCase.OLD_STYLE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 Die für diesen Text verwendete Ziffernbreite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete Ziffernbreite. Dies kann <codeph>DigitWidth.PROPORTIONAL</codeph> sein, was optimal für einzelne Zahlen aussieht, oder <codeph>DigitWidth.TABULAR</codeph>, was optimal für Zahlen in Tabellen, Diagrammen und vertikalen Zeilen funktioniert.<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitWidth.DEFAULT, flash.text.engine.DigitWidth.PROPORTIONAL, flash.text.engine.DigitWidth.TABULAR, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:direction:get"><apiName>direction</apiName><shortdesc>
		 Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an. Lesereihenfolge von links nach rechts wie in Schriften mit lateinischen Zeichen oder von rechts nach links wie im Arabischen oder Hebräischen. Diese Eigenschaft wirkt sich auf die Spaltenanordnung aus, wenn sie auf der Containerebene angewendet wird. Spalten können ebenso wie Text von links nach rechts oder von rechts nach links ausgerichtet sein. Im Folgenden sind einige Beispiele aufgeführt:<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.Direction.LTR, flashx.textLayout.formats.Direction.RTL, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert LTR verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 Gibt an, welche Elementgrundlinie an der alignmentBaseline ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt an, welche Elementgrundlinie an der <codeph>alignmentBaseline</codeph> ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen. Ein Wert von <codeph>TextBaseline.AUTO</codeph> wählt die dominierende Grundlinie basierend auf der <codeph>locale</codeph>-Eigenschaft des übergeordneten Absatzes. Für Japanisch und Chinesisch ist der ausgewählte Grundlinienwert <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Diese Grundlinienauswahl wird durch die Auswahl der Schriftart und der Schriftgröße bestimmt.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.FormatValue.AUTO, flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 Gibt die Grundlinienposition der ersten Linie im Container an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die Grundlinienposition der ersten Linie im Container an. Es hängt vom Gebietsschema der Containerebene ab, auf welche Grundlinie diese Eigenschaft verweist. Für Japanisch und Chinesisch ist es <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Der Offset vom oberen Versatz (oder dem rechten Einzug, wenn für <codeph>blockProgression</codeph> RL eingestellt wurde) des Containers zur Grundlinie der ersten Zeile kann <codeph>BaselineOffset.ASCENT</codeph>, d. h. gleich der Oberlänge der Zeile 
(<codeph>BaselineOffset.LINE_HEIGHT</codeph>) sein und damit der Höhe dieser ersten Zeile entsprechen oder eine beliebige Zahl mit einem Festwert für einen absoluten Abstand sein. <codeph>BaselineOffset.AUTO</codeph> richtet die Oberlänge der Zeile am oberen Versatz des Containers aus.<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>Zulässige Werte: flashx.textLayout.formats.BaselineOffset.AUTO, flashx.textLayout.formats.BaselineOffset.ASCENT, flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		  Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		  Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen. Die Flash-Laufzeitumgebung rendert das Element mit der ersten verfügbaren Schriftart in der Liste. Beispiel: Bei Arial, Helvetica und _sans sucht der Player nach Arial, dann nach Helvetica (wenn Arial nicht gefunden wurde) und anschließend nach _sans.
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert Arial verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 Zu verwendende Schriftartensuche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Zu verwendende Schriftartensuche. Durch Angeben von <codeph> FontLookup.DEVICE</codeph> werden die auf dem System, das die SWF-Datei ausführt, installierten Schriftarten verwendet. Geräteschriftarten führen zu einer kleineren Filmgröße, der Text wird jedoch auf verschiedenen Systemen und Plattformen nicht unbedingt auf dieselbe Weise wiedergegeben. Durch Festlegen von <codeph>FontLookup.EMBEDDED_CFF</codeph> werden Schriftkonturen verwendet, die in der veröffentlichten SWF-Datei eingebettet sind. Eingebettete Schriftarten erhöhen die Größe der SWF-Datei (manchmal erheblich), der Text wird jedoch konsistent in der gewählten Schriftart angezeigt.
		 <p>Zulässige Werte sind flash.text.engine.FontLookup.DEVICE, flash.text.engine.FontLookup.EMBEDDED_CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEVICE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 Die Textgröße in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die Textgröße in Pixeln.
		 <p>Zulässige Werte sind Zahlen von 1 bis 720 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 12 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 Stil des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Stil des Texts. Kann <codeph>FontPosture.NORMAL</codeph> für einfachen Text oder <codeph>FontPosture.ITALIC</codeph> für Kursivschrift sein. Diese Eigenschaft gilt nur für Geräteschriftarten (<codeph>fontLookup</codeph>-Eigenschaft wird festgelegt auf flash.text.engine.FontLookup.DEVICE).
		 <p>Zulässige Werte sind flash.text.engine.FontPosture.NORMAL, flash.text.engine.FontPosture.ITALIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 Stärke der Schriftart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Stärke der Schriftart. Kann <codeph>FontWeight.NORMAL</codeph> für normalen Text oder <codeph>FontWeight.BOLD</codeph> sein. Wird nur auf Geräteschriftarten angewendet (für <codeph>fontLookup</codeph>-Eigenschaft ist flash.text.engine.FontLookup.DEVICE festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.FontWeight.NORMAL, flash.text.engine.FontWeight.BOLD, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 Regel zum Ausrichten von Text in einem Absatz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Regel zum Ausrichten von Text in einem Absatz. Standardwert ist <codeph>FormatValue.AUTO</codeph>, durch den der Text anhand der <codeph>locale</codeph>-Eigenschaft des Absatzes ausgerichtet wird. Bei allen Sprachen (mit Ausnahme von Japanisch und Chinesisch) wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustificationRule.SPACE</codeph>, wodurch zusätzlicher Leerraum zu den Leerzeichen hinzugefügt wird. Bei Japanisch und Chinesisch wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustficationRule.EAST_ASIAN</codeph>. Teilweise wird durch die Ausrichtung der Abstand der Interpunktion geändert. Bei Text mit lateinischen Buchstaben nehmen sowohl Komma als auch japanische Punkte die volle Zeichenbreite ein, bei Text mit ostasiatischen Zeichen nur die halbe Zeichenbreite. Bei ostasiatischem Text ist außerdem der Abstand zwischen aufeinanderfolgdenden Satzzeichen geringer, da dies den üblichen typographischen Konventionen in ostasiatischen Sprachen entspricht. Beachten Sie außerdem im folgenden Beispiel den Zeilenabstand, der auf die zweite Zeile der Absätze angewendet wird. In der ostasiatischen Version werden die letzten zwei Zeilen nach links verschoben. In der lateinischen Version werden die zweite und folgende Zeilen nach links verschoben.<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.JustificationRule.EAST_ASIAN, flashx.textLayout.formats.JustificationRule.SPACE, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 Der Stil, der zum Ausrichten des Absatzes verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Der Stil, der zum Ausrichten des Absatzes verwendet wird. Wird nur gemeinsam mit der <codeph>justificationRule</codeph>-Einstellung <codeph>JustificationRule.EAST_ASIAN</codeph> verwendet. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird in <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> für alle Gebietsschemata aufgelöst. Die von der JustificationStyle-Klasse definierten Konstanten legen die Optionen für die Verarbeitung von Kinsoku-Zeichen fest. Diese japanischen Zeichen können weder am Anfang noch am Ende einer Zeile stehen. Legen Sie <codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> fest, wenn die Abstände im Text größer sein sollen. Wenn Sie das gleiche Verhalten wie mit <codeph>justificationRule</codeph> auch mit <codeph>JustificationRule.SPACE</codeph> erzielen möchten, verwenden Sie <codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph>.
		 <p>Zulässige Werte sind flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU, flash.text.engine.JustificationStyle.PUSH_OUT_ONLY, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:kerning:get"><apiName>kerning</apiName><shortdesc>
		 Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern. Kerning wird für alle Schriftarten mit Kerning-Tabellen unterstützt.
		 <p>Zulässige Werte sind flash.text.engine.Kerning.ON, flash.text.engine.Kerning.OFF, flash.text.engine.Kerning.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist. Die Zeilenabstandsbasis ist die Grundlinie, auf die die <codeph>lineHeight</codeph>-Eigenschaft verweist. Die Zeilenabstandsrichtung bestimmt, ob die <codeph>lineHeight</codeph>-Eigenschaft auf den Abstand der Grundlinie einer Zeile zu derjenigen der vorherigen oder nachfolgenden Zeile verweist. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird basierend auf der <codeph>locale</codeph>-Eigenschaft des Absatzes aufgelöst. Für Japanisch und Chinesisch ist es <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>, für alle anderen Sprachen ist es <codeph>LeadingModel.ROMAN_UP</codeph>.<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.LeadingModel.ROMAN_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN, flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD, flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP, flashx.textLayout.formats.LeadingModel.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können. Die Ligaturen, die für jede dieser Einstellungen angezeigt werden, hängen von der Schriftart ab. Eine Ligatur tritt dann auf, wenn zwei oder mehr Buchstabenformen zu einer Glyphe zusammengefasst sind. Ligaturen ersetzen in der Regel aufeinanderfolgende Zeichen, die gemeinsame Komponenten aufweisen, beispielsweise die Buchstabenpaare fi, fl und ae. Sie werden sowohl für lateinische als auch nicht-lateinische Zeichensätze verwendet. Die Ligaturen, die von den Werten der LigatureLevel-Klasse aktiviert werden (<codeph>MINIMUM</codeph>, <codeph>COMMON</codeph>, <codeph>UNCOMMON</codeph> und <codeph>EXOTIC</codeph>) sind additiv. Jeder Wert aktiviert einen neuen Satz von Ligaturen, beinhaltet jedoch auch die der vorhergehenden Typen.<p><b>Hinweis:</b> Bei der Arbeit mit arabischen oder syrischen Schriftarten muss <codeph>ligatureLevel</codeph> als „MINIMUM“ oder höher festgelegt werden.</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>Zulässige Werte sind flash.text.engine.LigatureLevel.MINIMUM, flash.text.engine.LigatureLevel.COMMON, flash.text.engine.LigatureLevel.UNCOMMON, flash.text.engine.LigatureLevel.EXOTIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COMMON verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Text im Container kann auf die Breite des Containers angepasst werden (<codeph>LineBreak.TO_FIT</codeph>) bzw. kann so festgelegt werden, dass nur bei expliziten Zeilenendschaltungen oder Zeilenvorschüben der Umbruch erfolgt (<codeph>LineBreak.EXPLICIT</codeph>).
		 <p>Zulässige Werte sind flashx.textLayout.formats.LineBreak.EXPLICIT, flashx.textLayout.formats.LineBreak.TO_FIT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TO_FIT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 Steuerelemente für den Zeilenabstand des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuerelemente für den Zeilenabstand des Texts. Der Abstand von der Grundlinie der vorherigen oder nächsten Zeile (anhand von <codeph>LeadingModel</codeph>) zur Grundlinie der aktuellen Zeile ist gleich der maximalen Größe des Zeilenabstands, der auf beliebige Zeichen in der Zeile angewendet wird. Dies ist entweder eine Zahl oder ein Prozentsatz. Geben Sie beim Festlegen als Prozentangabe einen Stringwert wie 140% ein.<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>Zulässige Werte als Zahlen liegen zwischen -720 und 720.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 120 % verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 Wenn „true“, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Wenn <codeph>true</codeph>, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.
		 <p>Zulässige Werte sind „true“, „false“ und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „false“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:locale:get"><apiName>locale</apiName><shortdesc>
		 Das Gebietsschema des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Das Gebietsschema des Texts. Steuert die Transformation und Form von Groß- und Kleinschreibung. Standardmäßige Gebietsschemabezeichner werden verwendet, wie in Unicode Technical Standard #35 beschrieben. Beispiel: „en“, „en_US“ und „en-US“ stehen für Englisch, „ja“ für Japanisch. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „en“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 Unterer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Unterer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der unteren Containerkante und dem Text. Der Wert ist eine Zahl. <p> Bei horizontalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum unten im Container angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 Linker Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Linker Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der linken Containerkante und dem Text. Der Wert ist eine Zahl.<p> Bei vertikalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum am Ende des Containers angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 Rechter Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Rechter Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der rechten Containerkante und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 Oberer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Oberer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der oberen Containerkante und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 Eine Zahl, die die Einrückung in Pixeln der Endkante des Absatzes angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die die Einrückung in Pixeln der Endkante des Absatzes angibt. Dieser Wert gilt für den rechten Rand bei von links nach rechts verlaufendem Text und für den linken Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der auf einen Absatz folgen soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der auf einen Absatz folgen soll. Wird zusammen mit <codeph>paragraphSpaceBefore</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der vor einem Absatz stehen bleiben soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der vor einem Absatz stehen bleiben soll. Wird zusammen mit <codeph>paragraphSpaceAfter</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 Eine Zahl, die die Einrückung in Pixeln der Anfangskante des Absatzes angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die die Einrückung in Pixeln der Anfangskante des Absatzes angibt. Dieser Wert gilt für den linken Rand bei von links nach rechts verlaufendem Text und für den rechten Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 Der für diesen Text verwendete Wiedergabemodus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Der für diesen Text verwendete Wiedergabemodus. Wird nur auf eingebettete Schriftarten angewendet (für die <codeph>fontLookup</codeph>-Eigenschaft ist <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.RenderingMode.NORMAL, flash.text.engine.RenderingMode.CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert CFF verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 Gibt die Tabulatoren an, die dem Absatz zugewiesen sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die Tabulatoren an, die dem Absatz zugewiesen sind. Set-Funktionen können ein Array mit flashx.textLayout.formats.TabStopFormat, eine zusammengezogene Stringdarstellung, nicht definierte Werte oder <codeph>FormatValue.INHERIT</codeph> verarbeiten. Die zusammengezogene Stringdarstellung wird immer in ein Array mit flashx.textLayout.formats.TabStopFormat konvertiert. <p>Das stringbasierte Format ist eine Liste von Tabulatorpositionen, wobei die einzelnen Tabulatoren durch eine oder mehrere Leerstellen getrennt sind.</p><p>Ein Tabulator hat die folgende Form: &lt;Ausrichtungstyp>&lt;Ausrichtungsposition>|&lt;Ausrichtungs-Token>.</p><p>Der Ausrichtungstyp ist ein einzelnes Zeichen und kann S, E, C oder D sein (oder entsprechend mit Kleinbuchstaben sein). S oder s für Start, E oder e für End, C oder c für Center und D oder d für Decimal. Der Ausrichtungstyp ist optional und ist standardmäßig S, wenn er nicht festgelegt wurde.</p><p>Die Ausrichtungsposition ist eine Zahl und wird entsprechend der FXG-Spezifikation für Zahlen (dezimal oder wissenschaftliche Schreibweise) angegeben. Die Ausrichtungsposition ist erforderlich.</p><p>Mithilfe des vertikalen Balkens wird die Ausrichtungsposition vom Ausrichtungs-Token getrennt. Dieser Balken sollte nur vorhanden sein, wenn das Ausrichtungs-Token vorhanden ist.</p><p> Das Ausrichtungs-Token ist optional, wenn der Ausrichtungstyp D ist, nicht jedoch für die anderen Ausrichtungstypen. Das Ausrichtungs-Token kann eine beliebige Zeichensequenz sein, die durch das Leerzeichen beendet wird, das den Tabulator abschließt (für den letzten Tabulator ist das abschließenden Leerzeichen optional; das Ende des Ausrichtungs-Tokens ist implizit). Ein Leerzeichen ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm der umgekehrte Schrägstrich (\) als Escape-Zeichen vorangeht. Ein umgekehrter Schrägstrich ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm ein weiterer umgekehrter Schrägstrich (\) als Escape-Zeichen vorangeht. Wenn der Ausrichtungstyp D ist und kein Ausrichtungstoken angegeben ist, weist er den Standardwert „null“ auf.</p><p>Werden keine Tabulatoren festgelegt, wird die Tabulatortaste standardmäßig am Ende der Zeile ausgelöst.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „null“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text. Wenn für <codeph>textAlign</codeph> die Einstellung <codeph>TextAlign.JUSTIFY</codeph> festgelegt ist, gibt <codeph>textAlignLast</codeph> an, wie die letzte Zeile (oder einzige Zeile, wenn es sich dabei um einen Zeilenblock handelt) ausgerichtet wird. Werte sind gleich <codeph>textAlign</codeph>.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 Ausrichtung der Zeilen im Absatz relativ zum Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Ausrichtung der Zeilen im Absatz relativ zum Container. <codeph>TextAlign.LEFT</codeph> richtet Zeilen am linken Rand des Containers aus. <codeph>TextAlign.RIGHT</codeph> führt Ausrichtung am rechten Rand aus. <codeph>TextAlign.CENTER</codeph> richtet die Zeile in gleichen Abständen vom linken und rechten Rand aus. <codeph>TextAlign.JUSTIFY</codeph> richtet die Zeilen so aus, dass sie den Raum ausfüllen. <codeph>TextAlign.START</codeph> entspricht der Einstellung von links bei von links nach rechts verlaufendem Text oder von rechts bei von rechts nach links verlaufendem Text. <codeph>TextAlign.END</codeph> entspricht der Einstellung von rechts bei von links nach rechts verlaufendem Text oder von links bei von rechts nach links verlaufendem Text.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 Wert für Alpha (Transparenz) des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Wert für Alpha (Transparenz) des Texts. Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit einem <codeph>textAlpha</codeph>-Wert von 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 1 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 Auszeichnung im Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Auszeichnung im Text. Wird verwendet, um Unterstreichungen anzuwenden, standardmäßig ist dies nicht aktiviert.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextDecoration.NONE, flashx.textLayout.formats.TextDecoration.UNDERLINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NONE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt. Bei einer negativen Einrückung ragt die Zeile in den Rand und möglicherweise aus dem Container heraus.
		 <p>Zulässige Werte sind Zahlen von -1000 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 Gibt Optionen für die Ausrichtung des Texts an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt Optionen für die Ausrichtung des Texts an. Der Standardwert ist <codeph>TextJustify.INTER_WORD</codeph>, d. h. bei der Ausrichtung wird zusätzlicher Leerraum den Leerzeichen hinzugefügt. <codeph>TextJustify.DISTRIBUTE</codeph> fügt den Leerzeichen und zwischen einzelnen Buchstaben zusätzlichen Raum hinzu. Wird nur zusammen mit einem <codeph>justificationRule</codeph>-Wert von <codeph>JustificationRule.SPACE</codeph> verwendet.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextJustify.INTER_WORD, flashx.textLayout.formats.TextJustify.DISTRIBUTE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert INTER_WORD verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 Bestimmt die Gradzahl zum Drehen dieses Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Bestimmt die Gradzahl zum Drehen dieses Texts.
		 <p>Zulässige Werte sind flash.text.engine.TextRotation.ROTATE_0, flash.text.engine.TextRotation.ROTATE_180, flash.text.engine.TextRotation.ROTATE_270, flash.text.engine.TextRotation.ROTATE_90, flash.text.engine.TextRotation.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die linke Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Zahl in Pixeln (oder Prozent von <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die linke Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Zahl in Pixeln (oder Prozent von <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingRight</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingRight</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 Die für diesen Text verwendete typografische Groß-/Kleinschreibung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete typografische Groß-/Kleinschreibung. Im Folgenden sind einige Beispiele für diese Situationen aufgeführt:<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.TLFTypographicCase.DEFAULT, flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS, flashx.textLayout.formats.TLFTypographicCase.UPPERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Bestimmt, wie TextFlow-Elemente innerhalb des Containers ausgerichtet werden.
		 <p>Zulässige Werte sind flashx.textLayout.formats.VerticalAlign.TOP, flashx.textLayout.formats.VerticalAlign.MIDDLE, flashx.textLayout.formats.VerticalAlign.BOTTOM, flashx.textLayout.formats.VerticalAlign.JUSTIFY, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TOP an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 Blendet Leerraum aus oder behält ihn bei, wenn Text in einem TextFlow importiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Blendet Leerraum aus oder behält ihn bei, wenn Text in einem TextFlow importiert wird. <codeph>WhiteSpaceCollapse.PRESERVE</codeph> behält alle Whitespace-Zeichen bei. <codeph>WhiteSpaceCollapse.COLLAPSE</codeph> entfernt Zeichen für neue Zeilen, Tabulatoren sowie Leerzeichen am Anfang und Ende bei einem importierten Textblock. Zeilenumbruch-Tags () und Unicode-Zeilentrennzeichen werden beibehalten.
		 <p>Zulässige Werte sind flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE, flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COLLAPSE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BackgroundColor"><apiName>BackgroundColor</apiName><shortdesc>
	  Definiert eine Konstante, die angibt, dass der Wert der backgroundColor-Eigenschaft der TextLayoutFormat-Klasse „transparent“ ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert eine Konstante, die angibt, dass der Wert der <codeph>backgroundColor</codeph>-Eigenschaft der <codeph>TextLayoutFormat</codeph>-Klasse „transparent“ ist.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/backgroundColor"><linktext>TextLayoutFormat.backgroundColor</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BackgroundColor:TRANSPARENT"><apiName>TRANSPARENT</apiName><shortdesc> Transparent - Es wird keine Hintergrundfarbe angewendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transparent</apiData><apiType value="String"/></apiValueDef><apiDesc> Transparent - Es wird keine Hintergrundfarbe angewendet.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:LineBreak"><apiName>LineBreak</apiName><shortdesc> Definiert Werte zur Einstellung der lineBreak-Eigenschaft von TextLayoutFormat, um festzulegen, wie Zeilen innerhalb von umbrochenem Text umbrechen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Definiert Werte zur Einstellung der <codeph>lineBreak</codeph>-Eigenschaft von <codeph>TextLayoutFormat</codeph>, um festzulegen, wie Zeilen innerhalb von umbrochenem Text umbrechen.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/linebreak"><linktext>TextLayoutFormat.linebreak</linktext></link></related-links><apiValue id="flashx.textLayout.formats:LineBreak:EXPLICIT"><apiName>EXPLICIT</apiName><shortdesc> Legt fest, dass Zeilen nur an ausdrücklichen Rückgabe- oder Zeilenvorschubzeichen umbrechen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>explicit</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass Zeilen nur an ausdrücklichen Rückgabe- oder Zeilenvorschubzeichen umbrechen. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LineBreak:TO_FIT"><apiName>TO_FIT</apiName><shortdesc> Legt den Umbruch der Zeilen so fest, dass sie sich der Breite des Containers anpassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toFit</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt den Umbruch der Zeilen so fest, dass sie sich der Breite des Containers anpassen. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BlockProgression"><apiName>BlockProgression</apiName><shortdesc>
	  Definiert Werte für die blockProgression-Eigenschaft der TextLayouFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte für die <codeph>blockProgression</codeph>-Eigenschaft der <codeph>TextLayouFormat</codeph>-Klasse. BlockProgression legt die Richtung fest, in der die Zeilen innerhalb des Containers platziert werden.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/blockProgression"><linktext>TextLayoutFormat.blockProgression</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BlockProgression:RL"><apiName>RL</apiName><shortdesc> 
		  Legt die Blockabfolge von rechts nach links fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rl</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		  Legt die Blockabfolge von rechts nach links fest. Vertikal ausgelegte Zeilen beginnen an der rechten Kante des Containers und verlaufen nach links. Wird für vertikalen Text verwendet, z. B. für vertikalen chinesischen oder japanischen Text. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BlockProgression:TB"><apiName>TB</apiName><shortdesc> 
		  Legt die Blockabfolge von oben nach unten fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tb</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		  Legt die Blockabfolge von oben nach unten fest. Horizontal ausgelegte Zeilen beginnen an der oberen Kante des Containers und verlaufen nach unten. Wird für horizontalen Text verwendet. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:ITextLayoutFormat"><apiName>ITextLayoutFormat</apiName><shortdesc>
	 Diese Schnittstelle stellt Lesezugriff für Eigenschaften bereit, die für FlowElements relevant sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Diese Schnittstelle stellt Lesezugriff für Eigenschaften bereit, die für FlowElements relevant sind.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 Gibt die Grundlinie an, an dem die dominierende Grundlinie ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die Grundlinie an, an dem die dominierende Grundlinie ausgerichtet wird. Wenn Sie beispielsweise <codeph>dominantBaseline</codeph> auf ASCENT setzen, wird durch Festlegen von <codeph>alignmentBaseline</codeph> auf DESCENT der obere Textrand an der DESCENT-Grundlinie oder unter der Linie ausgerichtet. Das größte Element in der Zeile bestimmt im Allgemeinen die Grundlinien.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert USE_DOMINANT_BASELINE verwendet.</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit dem alpha-Wert 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 1 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Kann entweder der Konstantenwert <codeph>BackgroundColor.TRANSPARENT</codeph> oder ein hexadezimaler Wert sein, der die drei RGB-Werte in 8-Bit (rot, grün, blau) festlegt; z. B. 0xFF0000 für Rot und 0x00FF00 für Grün.
		 <p>Zulässige Werte als String: flashx.textLayout.formats.BackgroundColor.TRANSPARENT, flashx.textLayout.formats.FormatValue.INHERIT und Einheiten von 0x0 bis 0xffffffff.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TRANSPARENT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 Betrag, um den die Grundlinie vom dominantBaseline-Wert verschoben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Betrag, um den die Grundlinie vom <codeph>dominantBaseline</codeph>-Wert verschoben wird. Einheiten in Pixeln oder einem Prozentwert für <codeph>fontSize</codeph> (geben Sie in diesem Fall einen Stringwert wie beispielsweise 140 % ein). Positive Werte verschieben die Zeile bei horizontalem Text nach oben (bei vertikalem nach rechts), negative Werte verschieben sie bei horizontalem Text nach unten (bei vertikalem nach links). 
		 <p>Zulässige Werte sind flashx.textLayout.formats.BaselineShift.SUPERSCRIPT, flashx.textLayout.formats.BaselineShift.SUBSCRIPT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 und 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0.0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an. Zeilen werden entweder von oben nach unten (<codeph>BlockProgression.TB</codeph> für horizontalen Text) oder von rechts nach links (<codeph>BlockProgression.RL</codeph> für vertikalen Text) platziert.
		 <p>Zulässige Werte sind flashx.textLayout.formats.BlockProgression.RL, flashx.textLayout.formats.BlockProgression.TB, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert TB verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 Steuert, an welcher Stelle Zeilen umbrochen werden können, wenn umbrochener Text in mehrere Zeilen umbrochen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuert, an welcher Stelle Zeilen umbrochen werden können, wenn umbrochener Text in mehrere Zeilen umbrochen wird. Mit der Einstellung <codeph>BreakOpportunity.AUTO</codeph> wird der Text normal umbrochen. Mit der Einstellung <codeph>BreakOpportunity.NONE</codeph> wird der Text <i>nicht</i> umbrochen, es sei denn, er wird zu lang und die Zeile kann an keiner anderen Position umbrochen werden. Legen Sie <codeph>BreakOpportunity.ANY</codeph> fest, damit die Zeile an einer beliebigen Stelle und nicht nur zwischen den Wörtern umbrochen werden kann. Legen Sie <codeph>BreakOpportunity.ALL</codeph> fest, damit jede typografische Gruppe auf einer einzelnen Zeile platziert wird (hilfreich bei Text in einem Pfad).
		 <p>Zulässige Werte sind flash.text.engine.BreakOpportunity.ALL, flash.text.engine.BreakOpportunity.ANY, flash.text.engine.BreakOpportunity.AUTO, flash.text.engine.BreakOpportunity.NONE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 Die für diesen Text verwendete Art des CFF-Hintings.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete Art des CFF-Hintings. Durch CFF-Hinting wird bestimmt, ob die Flash-Laufzeitumgebung erzwingt, dass starke horizontale Ausläufer in das Subpixel-Raster eingefügt werden oder nicht. Diese Eigenschaft gilt nur, wenn die <codeph>renderingMode</codeph>-Eigenschaft auf <codeph>RenderingMode.CFF</codeph> festgelegt und die Schriftart eingebettet ist (<codeph>fontLookup</codeph>-Eigenschaft auf <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt). Bei kleinen Bildschirmgrößen entsteht durch Hinting ein klar lesbarer Text.
		 <p>Zulässige Werte sind flash.text.engine.CFFHinting.NONE, flash.text.engine.CFFHinting.HORIZONTAL_STEM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert HORIZONTAL_STEM verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:color:get"><apiName>color</apiName><shortdesc>
		 Farbe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Farbe des Texts. Eine hexadezimale Zahl, die drei RGB-Werte in 8-Bit (rot, grün, blau) festlegt; z. B. 0xFF0000 für Rot und 0x00FF00 für Grün. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Die Spaltenzahl überschreibt die anderen Spalteneinstellungen. Als Wert ist eine ganze Zahl oder <codeph>FormatValue.AUTO</codeph> festgelegt, falls nicht angegeben. Wenn <codeph>columnCount</codeph> nicht festgelegt ist, wird <codeph>columnWidth</codeph> dazu verwendet, so viele Spalten zu erstellen, wie in den Container passen.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT sowie Ganzzahlen von 1 bis 50.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 20 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Wenn Sie die Breite, aber nicht die Anzahl der Spalten festlegen, erstellt TextLayout so viele Spalten dieser Breite wie möglich, wobei die Containerbreite und die <codeph>columnGap</codeph>-Einstellungen zugrunde gelegt werden. Der restliche Raum befindet sich links nach der letzten Spalte. Der Wert ist eine Zahl.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 8000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 Die für diesen Text verwendete Ziffernart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete Ziffernart. Die <codeph>DigitCase.OLD_STYLE</codeph>-Einstellung stellt eine Annäherung an Kleinbuchstaben mit verschiedenen Oberlängen und Unterlängen dar. Die Ziffern haben proportionale Zwischenräume. Dieser Stil ist nur in ausgewählten Schriftarten verfügbar, am häufigsten in einem zusätzlichen oder Expert-Font. Die <codeph>DigitCase.LINING</codeph>-Einstellung hat eine All-Cap-Höhe und erscheint für die Darstellung in Tabellen im Allgemeinen in Monospace.<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitCase.DEFAULT, flash.text.engine.DigitCase.LINING, flash.text.engine.DigitCase.OLD_STYLE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 Die für diesen Text verwendete Ziffernbreite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete Ziffernbreite. Dies kann <codeph>DigitWidth.PROPORTIONAL</codeph> sein, was optimal für einzelne Zahlen aussieht, oder <codeph>DigitWidth.TABULAR</codeph>, was optimal für Zahlen in Tabellen, Diagrammen und vertikalen Zeilen funktioniert.<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitWidth.DEFAULT, flash.text.engine.DigitWidth.PROPORTIONAL, flash.text.engine.DigitWidth.TABULAR, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:direction:get"><apiName>direction</apiName><shortdesc>
		 Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an. Lesereihenfolge von links nach rechts wie in Schriften mit lateinischen Zeichen oder von rechts nach links wie im Arabischen oder Hebräischen. Diese Eigenschaft wirkt sich auf die Spaltenanordnung aus, wenn sie auf der Containerebene angewendet wird. Spalten können ebenso wie Text von links nach rechts oder von rechts nach links ausgerichtet sein. Im Folgenden sind einige Beispiele aufgeführt:<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.Direction.LTR, flashx.textLayout.formats.Direction.RTL, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert LTR verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 Gibt an, welche Elementgrundlinie an der alignmentBaseline ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt an, welche Elementgrundlinie an der <codeph>alignmentBaseline</codeph> ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen. Ein Wert von <codeph>TextBaseline.AUTO</codeph> wählt die dominierende Grundlinie basierend auf der <codeph>locale</codeph>-Eigenschaft des übergeordneten Absatzes. Für Japanisch und Chinesisch ist der ausgewählte Grundlinienwert <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Diese Grundlinienauswahl wird durch die Auswahl der Schriftart und der Schriftgröße bestimmt.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.FormatValue.AUTO, flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 Gibt die Grundlinienposition der ersten Linie im Container an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die Grundlinienposition der ersten Linie im Container an. Es hängt vom Gebietsschema der Containerebene ab, auf welche Grundlinie diese Eigenschaft verweist. Für Japanisch und Chinesisch ist es <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Der Offset vom oberen Versatz (oder dem rechten Einzug, wenn für <codeph>blockProgression</codeph> RL eingestellt wurde) des Containers zur Grundlinie der ersten Zeile kann <codeph>BaselineOffset.ASCENT</codeph>, d. h. gleich der Oberlänge der Zeile 
(<codeph>BaselineOffset.LINE_HEIGHT</codeph>) sein und damit der Höhe dieser ersten Zeile entsprechen oder eine beliebige Zahl mit einem Festwert für einen absoluten Abstand sein. <codeph>BaselineOffset.AUTO</codeph> richtet die Oberlänge der Zeile am oberen Versatz des Containers aus.<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>Zulässige Werte: flashx.textLayout.formats.BaselineOffset.AUTO, flashx.textLayout.formats.BaselineOffset.ASCENT, flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		  Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		  Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen. Die Flash-Laufzeitumgebung rendert das Element mit der ersten verfügbaren Schriftart in der Liste. Beispiel: Bei Arial, Helvetica und _sans sucht der Player nach Arial, dann nach Helvetica (wenn Arial nicht gefunden wurde) und anschließend nach _sans.
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert Arial verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 Zu verwendende Schriftartensuche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Zu verwendende Schriftartensuche. Durch Angeben von <codeph> FontLookup.DEVICE</codeph> werden die auf dem System, das die SWF-Datei ausführt, installierten Schriftarten verwendet. Geräteschriftarten führen zu einer kleineren Filmgröße, der Text wird jedoch auf verschiedenen Systemen und Plattformen nicht unbedingt auf dieselbe Weise wiedergegeben. Durch Festlegen von <codeph>FontLookup.EMBEDDED_CFF</codeph> werden Schriftkonturen verwendet, die in der veröffentlichten SWF-Datei eingebettet sind. Eingebettete Schriftarten erhöhen die Größe der SWF-Datei (manchmal erheblich), der Text wird jedoch konsistent in der gewählten Schriftart angezeigt.
		 <p>Zulässige Werte sind flash.text.engine.FontLookup.DEVICE, flash.text.engine.FontLookup.EMBEDDED_CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEVICE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 Die Textgröße in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die Textgröße in Pixeln.
		 <p>Zulässige Werte sind Zahlen von 1 bis 720 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 12 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 Stil des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Stil des Texts. Kann <codeph>FontPosture.NORMAL</codeph> für einfachen Text oder <codeph>FontPosture.ITALIC</codeph> für Kursivschrift sein. Diese Eigenschaft gilt nur für Geräteschriftarten (<codeph>fontLookup</codeph>-Eigenschaft wird festgelegt auf flash.text.engine.FontLookup.DEVICE).
		 <p>Zulässige Werte sind flash.text.engine.FontPosture.NORMAL, flash.text.engine.FontPosture.ITALIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 Stärke der Schriftart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Stärke der Schriftart. Kann <codeph>FontWeight.NORMAL</codeph> für normalen Text oder <codeph>FontWeight.BOLD</codeph> sein. Wird nur auf Geräteschriftarten angewendet (für <codeph>fontLookup</codeph>-Eigenschaft ist flash.text.engine.FontLookup.DEVICE festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.FontWeight.NORMAL, flash.text.engine.FontWeight.BOLD, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 Regel zum Ausrichten von Text in einem Absatz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Regel zum Ausrichten von Text in einem Absatz. Standardwert ist <codeph>FormatValue.AUTO</codeph>, durch den der Text anhand der <codeph>locale</codeph>-Eigenschaft des Absatzes ausgerichtet wird. Bei allen Sprachen (mit Ausnahme von Japanisch und Chinesisch) wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustificationRule.SPACE</codeph>, wodurch zusätzlicher Leerraum zu den Leerzeichen hinzugefügt wird. Bei Japanisch und Chinesisch wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustficationRule.EAST_ASIAN</codeph>. Teilweise wird durch die Ausrichtung der Abstand der Interpunktion geändert. Bei Text mit lateinischen Buchstaben nehmen sowohl Komma als auch japanische Punkte die volle Zeichenbreite ein, bei Text mit ostasiatischen Zeichen nur die halbe Zeichenbreite. Bei ostasiatischem Text ist außerdem der Abstand zwischen aufeinanderfolgdenden Satzzeichen geringer, da dies den üblichen typographischen Konventionen in ostasiatischen Sprachen entspricht. Beachten Sie außerdem im folgenden Beispiel den Zeilenabstand, der auf die zweite Zeile der Absätze angewendet wird. In der ostasiatischen Version werden die letzten zwei Zeilen nach links verschoben. In der lateinischen Version werden die zweite und folgende Zeilen nach links verschoben.<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.JustificationRule.EAST_ASIAN, flashx.textLayout.formats.JustificationRule.SPACE, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 Der Stil, der zum Ausrichten des Absatzes verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Der Stil, der zum Ausrichten des Absatzes verwendet wird. Wird nur gemeinsam mit der <codeph>justificationRule</codeph>-Einstellung <codeph>JustificationRule.EAST_ASIAN</codeph> verwendet. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird in <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> für alle Gebietsschemata aufgelöst. Die von der JustificationStyle-Klasse definierten Konstanten legen die Optionen für die Verarbeitung von Kinsoku-Zeichen fest. Diese japanischen Zeichen können weder am Anfang noch am Ende einer Zeile stehen. Legen Sie <codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> fest, wenn die Abstände im Text größer sein sollen. Wenn Sie das gleiche Verhalten wie mit <codeph>justificationRule</codeph> auch mit <codeph>JustificationRule.SPACE</codeph> erzielen möchten, verwenden Sie <codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph>.
		 <p>Zulässige Werte sind flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU, flash.text.engine.JustificationStyle.PUSH_OUT_ONLY, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:kerning:get"><apiName>kerning</apiName><shortdesc>
		 Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern. Kerning wird für alle Schriftarten mit Kerning-Tabellen unterstützt.
		 <p>Zulässige Werte sind flash.text.engine.Kerning.ON, flash.text.engine.Kerning.OFF, flash.text.engine.Kerning.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist. Die Zeilenabstandsbasis ist die Grundlinie, auf die die <codeph>lineHeight</codeph>-Eigenschaft verweist. Die Zeilenabstandsrichtung bestimmt, ob die <codeph>lineHeight</codeph>-Eigenschaft auf den Abstand der Grundlinie einer Zeile zu derjenigen der vorherigen oder nachfolgenden Zeile verweist. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird basierend auf der <codeph>locale</codeph>-Eigenschaft des Absatzes aufgelöst. Für Japanisch und Chinesisch ist es <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>, für alle anderen Sprachen ist es <codeph>LeadingModel.ROMAN_UP</codeph>.<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.LeadingModel.ROMAN_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN, flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD, flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP, flashx.textLayout.formats.LeadingModel.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können. Die Ligaturen, die für jede dieser Einstellungen angezeigt werden, hängen von der Schriftart ab. Eine Ligatur tritt dann auf, wenn zwei oder mehr Buchstabenformen zu einer Glyphe zusammengefasst sind. Ligaturen ersetzen in der Regel aufeinanderfolgende Zeichen, die gemeinsame Komponenten aufweisen, beispielsweise die Buchstabenpaare fi, fl und ae. Sie werden sowohl für lateinische als auch nicht-lateinische Zeichensätze verwendet. Die Ligaturen, die von den Werten der LigatureLevel-Klasse aktiviert werden (<codeph>MINIMUM</codeph>, <codeph>COMMON</codeph>, <codeph>UNCOMMON</codeph> und <codeph>EXOTIC</codeph>) sind additiv. Jeder Wert aktiviert einen neuen Satz von Ligaturen, beinhaltet jedoch auch die der vorhergehenden Typen.<p><b>Hinweis:</b> Bei der Arbeit mit arabischen oder syrischen Schriftarten muss <codeph>ligatureLevel</codeph> als „MINIMUM“ oder höher festgelegt werden.</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>Zulässige Werte sind flash.text.engine.LigatureLevel.MINIMUM, flash.text.engine.LigatureLevel.COMMON, flash.text.engine.LigatureLevel.UNCOMMON, flash.text.engine.LigatureLevel.EXOTIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COMMON verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Text im Container kann auf die Breite des Containers angepasst werden (<codeph>LineBreak.TO_FIT</codeph>) bzw. kann so festgelegt werden, dass nur bei expliziten Zeilenendschaltungen oder Zeilenvorschüben der Umbruch erfolgt (<codeph>LineBreak.EXPLICIT</codeph>).
		 <p>Zulässige Werte sind flashx.textLayout.formats.LineBreak.EXPLICIT, flashx.textLayout.formats.LineBreak.TO_FIT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TO_FIT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 Steuerelemente für den Zeilenabstand des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Steuerelemente für den Zeilenabstand des Texts. Der Abstand von der Grundlinie der vorherigen oder nächsten Zeile (anhand von <codeph>LeadingModel</codeph>) zur Grundlinie der aktuellen Zeile ist gleich der maximalen Größe des Zeilenabstands, der auf beliebige Zeichen in der Zeile angewendet wird. Dies ist entweder eine Zahl oder ein Prozentsatz. Geben Sie beim Festlegen als Prozentangabe einen Stringwert wie 140% ein.<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>Zulässige Werte als Zahlen liegen zwischen -720 und 720.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 120 % verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 Wenn „true“, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Wenn <codeph>true</codeph>, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.
		 <p>Zulässige Werte sind „true“, „false“ und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „false“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:locale:get"><apiName>locale</apiName><shortdesc>
		 Das Gebietsschema des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Das Gebietsschema des Texts. Steuert die Transformation und Form von Groß- und Kleinschreibung. Standardmäßige Gebietsschemabezeichner werden verwendet, wie in Unicode Technical Standard #35 beschrieben. Beispiel: „en“, „en_US“ und „en-US“ stehen für Englisch, „ja“ für Japanisch. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „en“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 Unterer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Unterer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der unteren Containerkante und dem Text. Der Wert ist eine Zahl. <p> Bei horizontalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum unten im Container angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 Linker Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Linker Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der linken Containerkante und dem Text. Der Wert ist eine Zahl.<p> Bei vertikalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum am Ende des Containers angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 Rechter Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Rechter Einzug in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der rechten Containerkante und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 Oberer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Oberer Versatz in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Raum zwischen der oberen Containerkante und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 Eine Zahl, die die Einrückung in Pixeln der Endkante des Absatzes angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die die Einrückung in Pixeln der Endkante des Absatzes angibt. Dieser Wert gilt für den rechten Rand bei von links nach rechts verlaufendem Text und für den linken Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der auf einen Absatz folgen soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der auf einen Absatz folgen soll. Wird zusammen mit <codeph>paragraphSpaceBefore</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der vor einem Absatz stehen bleiben soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die den Leeraum in Pixeln festlegt, der vor einem Absatz stehen bleiben soll. Wird zusammen mit <codeph>paragraphSpaceAfter</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 Eine Zahl, die die Einrückung in Pixeln der Anfangskante des Absatzes angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die die Einrückung in Pixeln der Anfangskante des Absatzes angibt. Dieser Wert gilt für den linken Rand bei von links nach rechts verlaufendem Text und für den rechten Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 Der für diesen Text verwendete Wiedergabemodus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Der für diesen Text verwendete Wiedergabemodus. Wird nur auf eingebettete Schriftarten angewendet (für die <codeph>fontLookup</codeph>-Eigenschaft ist <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.RenderingMode.NORMAL, flash.text.engine.RenderingMode.CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert CFF verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 Gibt die Tabulatoren an, die dem Absatz zugewiesen sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt die Tabulatoren an, die dem Absatz zugewiesen sind. Set-Funktionen können ein Array mit flashx.textLayout.formats.TabStopFormat, eine zusammengezogene Stringdarstellung, nicht definierte Werte oder <codeph>FormatValue.INHERIT</codeph> verarbeiten. Die zusammengezogene Stringdarstellung wird immer in ein Array mit flashx.textLayout.formats.TabStopFormat konvertiert. <p>Das stringbasierte Format ist eine Liste von Tabulatorpositionen, wobei die einzelnen Tabulatoren durch eine oder mehrere Leerstellen getrennt sind.</p><p>Ein Tabulator hat die folgende Form: &lt;Ausrichtungstyp>&lt;Ausrichtungsposition>|&lt;Ausrichtungs-Token>.</p><p>Der Ausrichtungstyp ist ein einzelnes Zeichen und kann S, E, C oder D sein (oder entsprechend mit Kleinbuchstaben sein). S oder s für Start, E oder e für End, C oder c für Center und D oder d für Decimal. Der Ausrichtungstyp ist optional und ist standardmäßig S, wenn er nicht festgelegt wurde.</p><p>Die Ausrichtungsposition ist eine Zahl und wird entsprechend der FXG-Spezifikation für Zahlen (dezimal oder wissenschaftliche Schreibweise) angegeben. Die Ausrichtungsposition ist erforderlich.</p><p>Mithilfe des vertikalen Balkens wird die Ausrichtungsposition vom Ausrichtungs-Token getrennt. Dieser Balken sollte nur vorhanden sein, wenn das Ausrichtungs-Token vorhanden ist.</p><p> Das Ausrichtungs-Token ist optional, wenn der Ausrichtungstyp D ist, nicht jedoch für die anderen Ausrichtungstypen. Das Ausrichtungs-Token kann eine beliebige Zeichensequenz sein, die durch das Leerzeichen beendet wird, das den Tabulator abschließt (für den letzten Tabulator ist das abschließenden Leerzeichen optional; das Ende des Ausrichtungs-Tokens ist implizit). Ein Leerzeichen ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm der umgekehrte Schrägstrich (\) als Escape-Zeichen vorangeht. Ein umgekehrter Schrägstrich ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm ein weiterer umgekehrter Schrägstrich (\) als Escape-Zeichen vorangeht. Wenn der Ausrichtungstyp D ist und kein Ausrichtungstoken angegeben ist, weist er den Standardwert „null“ auf.</p><p>Werden keine Tabulatoren festgelegt, wird die Tabulatortaste standardmäßig am Ende der Zeile ausgelöst.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „null“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text. Wenn für <codeph>textAlign</codeph> die Einstellung <codeph>TextAlign.JUSTIFY</codeph> festgelegt ist, gibt <codeph>textAlignLast</codeph> an, wie die letzte Zeile (oder einzige Zeile, wenn es sich dabei um einen Zeilenblock handelt) ausgerichtet wird. Werte sind gleich <codeph>textAlign</codeph>.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 Ausrichtung der Zeilen im Absatz relativ zum Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Ausrichtung der Zeilen im Absatz relativ zum Container. <codeph>TextAlign.LEFT</codeph> richtet Zeilen am linken Rand des Containers aus. <codeph>TextAlign.RIGHT</codeph> führt Ausrichtung am rechten Rand aus. <codeph>TextAlign.CENTER</codeph> richtet die Zeile in gleichen Abständen vom linken und rechten Rand aus. <codeph>TextAlign.JUSTIFY</codeph> richtet die Zeilen so aus, dass sie den Raum ausfüllen. <codeph>TextAlign.START</codeph> entspricht der Einstellung von links bei von links nach rechts verlaufendem Text oder von rechts bei von rechts nach links verlaufendem Text. <codeph>TextAlign.END</codeph> entspricht der Einstellung von rechts bei von links nach rechts verlaufendem Text oder von links bei von rechts nach links verlaufendem Text.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 Wert für Alpha (Transparenz) des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Wert für Alpha (Transparenz) des Texts. Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit einem <codeph>textAlpha</codeph>-Wert von 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 1 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 Auszeichnung im Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Auszeichnung im Text. Wird verwendet, um Unterstreichungen anzuwenden, standardmäßig ist dies nicht aktiviert.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextDecoration.NONE, flashx.textLayout.formats.TextDecoration.UNDERLINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NONE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt. Bei einer negativen Einrückung ragt die Zeile in den Rand und möglicherweise aus dem Container heraus.
		 <p>Zulässige Werte sind Zahlen von -1000 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 Gibt Optionen für die Ausrichtung des Texts an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gibt Optionen für die Ausrichtung des Texts an. Der Standardwert ist <codeph>TextJustify.INTER_WORD</codeph>, d. h. bei der Ausrichtung wird zusätzlicher Leerraum den Leerzeichen hinzugefügt. <codeph>TextJustify.DISTRIBUTE</codeph> fügt den Leerzeichen und zwischen einzelnen Buchstaben zusätzlichen Raum hinzu. Wird nur zusammen mit einem <codeph>justificationRule</codeph>-Wert von <codeph>JustificationRule.SPACE</codeph> verwendet.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextJustify.INTER_WORD, flashx.textLayout.formats.TextJustify.DISTRIBUTE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert INTER_WORD verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 Bestimmt die Gradzahl zum Drehen dieses Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Bestimmt die Gradzahl zum Drehen dieses Texts.
		 <p>Zulässige Werte sind flash.text.engine.TextRotation.ROTATE_0, flash.text.engine.TextRotation.ROTATE_180, flash.text.engine.TextRotation.ROTATE_270, flash.text.engine.TextRotation.ROTATE_90, flash.text.engine.TextRotation.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die linke Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Zahl in Pixeln (oder Prozent von <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die linke Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Zahl in Pixeln (oder Prozent von <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingRight</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingRight</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 Die für diesen Text verwendete typografische Groß-/Kleinschreibung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Die für diesen Text verwendete typografische Groß-/Kleinschreibung. Im Folgenden sind einige Beispiele für diese Situationen aufgeführt:<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.TLFTypographicCase.DEFAULT, flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS, flashx.textLayout.formats.TLFTypographicCase.UPPERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Bestimmt, wie TextFlow-Elemente innerhalb des Containers ausgerichtet werden.
		 <p>Zulässige Werte sind flashx.textLayout.formats.VerticalAlign.TOP, flashx.textLayout.formats.VerticalAlign.MIDDLE, flashx.textLayout.formats.VerticalAlign.BOTTOM, flashx.textLayout.formats.VerticalAlign.JUSTIFY, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TOP an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 Blendet Leerraum aus oder behält ihn bei, wenn Text in einem TextFlow importiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Blendet Leerraum aus oder behält ihn bei, wenn Text in einem TextFlow importiert wird. <codeph>WhiteSpaceCollapse.PRESERVE</codeph> behält alle Whitespace-Zeichen bei. <codeph>WhiteSpaceCollapse.COLLAPSE</codeph> entfernt Zeichen für neue Zeilen, Tabulatoren sowie Leerzeichen am Anfang und Ende bei einem importierten Textblock. Zeilenumbruch-Tags () und Unicode-Zeilentrennzeichen werden beibehalten.
		 <p>Zulässige Werte sind flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE, flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COLLAPSE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:LeadingModel"><apiName>LeadingModel</apiName><shortdesc>
	  Definiert die Werte für die Einstellung der leadingModel-Eigenschaft der TextLayoutFormat-Klasse. Diese Eigenschaft wird anhand gültiger Kombinationen von Zeilenabstandsbasis und Zeilenabstandsrichtung zusammengesetzt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert die Werte für die Einstellung der <codeph>leadingModel</codeph>-Eigenschaft der <codeph>TextLayoutFormat</codeph>-Klasse. Diese Eigenschaft wird anhand gültiger Kombinationen von Zeilenabstandsbasis und Zeilenabstandsrichtung zusammengesetzt. Die Zeilenabstandbasis bestimmt, durch welche Grundlinien der Abstand (oder <codeph>lineHeight</codeph>) der Zeilen in einem Absatz festgelegt wird. Die Zeilenabstandsrichtung bestimmt, ob die <codeph>lineHeight</codeph>-Eigenschaft sich auf den Abstand der Grundlinie einer Zeile von der Zeile davor oder danach bezieht. 
	  <p>
	  <adobeimage alt="baselines" border="0" href="../../../images/textLayout_baselines.jpg"/> <adobeimage alt="leadingDirection_1" border="0" href="../../../images/textLayout_LD1.jpg"/> <adobeimage alt="leadingDirection_2" border="0" href="../../../images/textLayout_LD2.jpg"/> <adobeimage alt="leadingDirection_3" border="0" href="../../../images/textLayout_LD3.jpg"/>
	  </p>
	  </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/leadingModel"><linktext>TextLayoutFormat.leadingModel</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/lineHeight"><linktext>TextLayoutFormat.lineHeight</linktext></link><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link></related-links><apiValue id="flashx.textLayout.formats:LeadingModel:APPROXIMATE_TEXT_FIELD"><apiName>APPROXIMATE_TEXT_FIELD</apiName><shortdesc> Legt ein Zeilenabstand-Modell fest, dass sich dem Zeilenabstandverhalten von TextField annähert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>approximateTextField</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt ein Zeilenabstand-Modell fest, dass sich dem Zeilenabstandverhalten von <codeph>TextField</codeph> annähert. Es ähnelt <codeph>ASCENT_DESCENT_UP</codeph>  insofern, dass sich <codeph>lineHeight</codeph> auf den Abstand zwischen der Oberlängengrundlinie einer Zeile und der Unterlängengrundlinie der vorherigen Zeile bezieht. Grundlinienpositionen nähern sich jedoch denen an, die von <codeph>TextField</codeph> definiert werden, und nicht den Metriken, die von <codeph>TextLine</codeph> angeboten werden.  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:ASCENT_DESCENT_UP"><apiName>ASCENT_DESCENT_UP</apiName><shortdesc> Legt fest, dass die Basis für den Zeilenabstand „ASCENT/DESCENT“ ist und dass die Zeilenabstandsrichtung „UP“ ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ascentDescentUp</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass die Basis für den Zeilenabstand „ASCENT/DESCENT“ ist und dass die Zeilenabstandsrichtung „UP“ ist. Damit bezieht sich <codeph>lineHeight</codeph> auf die Entfernung zwischen der k-Linie (Ende der Oberlänge) einer Zeile und der p-Linie (Ende der Unterlänge) der vorangegangenen Zeile.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:AUTO"><apiName>AUTO</apiName><shortdesc> Legt fest, dass das Zeilenabstandsmodell basierend auf dem Gebietsschema des Absatzes automatisch gewählt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage name="3.0" version="#IDEOGRAPHIC_TOP_DOWN"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass das Zeilenabstandsmodell basierend auf dem <codeph>Gebietsschema</codeph> des Absatzes automatisch gewählt wird. Für Japanisch und Chinesisch ist dies „IDEOGRAPHIC_TOP_DOWN“; für alle anderen Sprachen „ROMAN_UP“.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_CENTER_DOWN"><apiName>IDEOGRAPHIC_CENTER_DOWN</apiName><shortdesc> Legt fest, dass die Basis für den Zeilenabstand IDEOGRAPHIC_CENTER ist und dass die Zeilenabstandsrichtung nach unten ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicCenterDown</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass die Basis für den Zeilenabstand IDEOGRAPHIC_CENTER ist und dass die Zeilenabstandsrichtung nach unten ist. Damit bezieht sich <codeph>lineHeight</codeph> auf die Entfernung zwischen der ideografischen Zentralgrundlinie einer Zeile und der ideografischen Zentralgrundlinie der folgenden Zeile.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_CENTER_UP"><apiName>IDEOGRAPHIC_CENTER_UP</apiName><shortdesc> Legt fest, dass die Basis für den Zeilenabstand „IDEOGRAPHIC_CENTER“ und die Zeilenabstandsrichtung „UP“ ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicCenterUp</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass die Basis für den Zeilenabstand „IDEOGRAPHIC_CENTER“ und die Zeilenabstandsrichtung „UP“ ist. Mit anderen Worten, <codeph>lineHeight</codeph> bezieht sich auf die Entfernung zwischen der ideografischen Zentralgrundlinie einer Zeile und der ideografischen Zentralgrundlinie der vorangegangenen Zeile.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_TOP_DOWN"><apiName>IDEOGRAPHIC_TOP_DOWN</apiName><shortdesc> Legt fest, dass die Basis für den Zeilenabstand IDEOGRAPHIC_TOP und die Zeilenabstandsrichtung DOWN ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicTopDown</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass die Basis für den Zeilenabstand IDEOGRAPHIC_TOP und die Zeilenabstandsrichtung DOWN ist. Damit bezieht sich <codeph>lineHeight</codeph> auf die Entfernung zwischen der ideografischen Obergrundlinie einer Zeile und der ideografischen Obergrundlinie der folgenden Zeile.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_TOP_UP"><apiName>IDEOGRAPHIC_TOP_UP</apiName><shortdesc> Legt fest, dass die Basis für den Zeilenabstand IDEOGRAPHIC_TOP und die Zeilenabstandsrichtung UP ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicTopUp</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass die Basis für den Zeilenabstand IDEOGRAPHIC_TOP und die Zeilenabstandsrichtung UP ist. Damit bezieht sich <codeph>lineHeight</codeph> auf die Entfernung zwischen der ideografischen, Obergrundlinie einer Zeile und der ideografischen Obergrundlinie der vorangegangenen Zeile.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:ROMAN_UP"><apiName>ROMAN_UP</apiName><shortdesc> Legt fest, dass die Basis für den Zeilenabstand „ROMAN“ und die Zeilenabstandsrichtung „UP“ ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>romanUp</apiData><apiType value="String"/></apiValueDef><apiDesc> Legt fest, dass die Basis für den Zeilenabstand „ROMAN“ und die Zeilenabstandsrichtung „UP“ ist. Damit bezieht sich <codeph>lineHeight</codeph> auf die Entfernung zwischen der regulären Grundlinie einer Zeile und der regulären Grundlinie der vorangegangenen Zeile.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:IMEStatus"><apiName>IMEStatus</apiName><shortdesc>
	  Wird intern verwendet, um den Status von Klauseln in IME-Text während einer IME-Texteingabesitzung anzugeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Wird intern verwendet, um den Status von Klauseln in IME-Text während einer IME-Texteingabesitzung anzugeben.
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="flashx.textLayout.formats:IMEStatus:IMEStatus"><apiName>IMEStatus</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.formats:IMEStatus:DEAD_KEY_INPUT_STATE"><apiName>DEAD_KEY_INPUT_STATE</apiName><shortdesc> Deadkey-Eingabestatus: Beim Eingeben eines aus mehreren Tastenkombination bestehenden Zeichens, beispielsweise Zeichen mit Akzent.
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deadKeyInputState</apiData><apiType value="String"/></apiValueDef><apiDesc> Deadkey-Eingabestatus: Beim Eingeben eines aus mehreren Tastenkombination bestehenden Zeichens, beispielsweise Zeichen mit Akzent.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:IME_CLAUSE"><apiName>IME_CLAUSE</apiName><shortdesc> Der Name der IMEClause-Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>imeClause</apiData><apiType value="String"/></apiValueDef><apiDesc> Der Name der IMEClause-Eigenschaft. Der Wert ist eine Ganzzahl.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:IME_STATUS"><apiName>IME_STATUS</apiName><shortdesc> Der Name der IMEStatus-Eigenschaft.
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>imeStatus</apiData><apiType value="String"/></apiValueDef><apiDesc> Der Name der IMEStatus-Eigenschaft.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:NOT_SELECTED_CONVERTED"><apiName>NOT_SELECTED_CONVERTED</apiName><shortdesc> Nicht ausgewählt konvertiert: Text wurde konvertiert und ist nicht Teil der aktuellen Klausel in der IME-Sitzung.
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>notSelectedConverted</apiData><apiType value="String"/></apiValueDef><apiDesc> Nicht ausgewählt konvertiert: Text wurde konvertiert und ist nicht Teil der aktuellen Klausel in der IME-Sitzung.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:NOT_SELECTED_RAW"><apiName>NOT_SELECTED_RAW</apiName><shortdesc> Nicht ausgewählt unformatiert: Text wurde nicht konvertiert und ist nicht Teil der aktuellen Klausel in der IME-Sitzung.
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>notSelectedRaw</apiData><apiType value="String"/></apiValueDef><apiDesc> Nicht ausgewählt unformatiert: Text wurde nicht konvertiert und ist nicht Teil der aktuellen Klausel in der IME-Sitzung.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:SELECTED_CONVERTED"><apiName>SELECTED_CONVERTED</apiName><shortdesc> Ausgewählt konvertiert: Text wurde konvertiert und ist die aktuelle Klausel in der IME-Sitzung.
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectedConverted</apiData><apiType value="String"/></apiValueDef><apiDesc> Ausgewählt konvertiert: Text wurde konvertiert und ist die aktuelle Klausel in der IME-Sitzung.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:SELECTED_RAW"><apiName>SELECTED_RAW</apiName><shortdesc> Ausgewählt nicht formatiert: Text wurde nicht konvertiert und ist die aktuelle Klausel in der IME-Sitzung.
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectedRaw</apiData><apiType value="String"/></apiValueDef><apiDesc> Ausgewählt nicht formatiert: Text wurde nicht konvertiert und ist die aktuelle Klausel in der IME-Sitzung.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BaselineOffset"><apiName>BaselineOffset</apiName><shortdesc>
	  Definiert Werte für die firstBaselineOffset-Eigenschaft der TextLayoutFormat- und ContainerFormattedElement-Klassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert Werte für die <codeph>firstBaselineOffset</codeph>-Eigenschaft der <codeph>TextLayoutFormat</codeph>- und <codeph>ContainerFormattedElement</codeph>-Klassen. Bestimmt den Offset vom oberen Versatz des Containers zur Grundlinie der ersten Zeile. Der Grundlinien-Offset kann als Akzent der Zeile festgelegt werden, als Höhe der Zeile, oder als ein automatisch erzeugter Betrag.
	  <p>
	  <adobeimage alt="firstBaselineOffset_1" border="0" href="../../../images/textLayout_FBO1.jpg"/> <adobeimage alt="firstBaselineOffset_2" border="0" href="../../../images/textLayout_FBO2.jpg"/> <adobeimage alt="firstBaselineOffset_3" border="0" href="../../../images/textLayout_FBO3.jpg"/> <adobeimage alt="firstBaselineOffset_4" border="0" href="../../../images/textLayout_FBO4.jpg"/>
	  </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/firstBaselineOffset"><linktext>TextLayoutFormat.firstBaselineOffset</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BaselineOffset:ASCENT"><apiName>ASCENT</apiName><shortdesc> Gibt einen Offset entsprechend der Oberlänge der Zeile an, das heißt die Oberlänge der höchsten Schriftart in der Zeile, wobei bei Inline-Grafiken der untere Rand der Grafik auf der Grundlinie liegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ascent</apiData><apiType value="String"/></apiValueDef><apiDesc> Gibt einen Offset entsprechend der Oberlänge der Zeile an, das heißt die Oberlänge der höchsten Schriftart in der Zeile, wobei bei Inline-Grafiken der untere Rand der Grafik auf der Grundlinie liegt.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BaselineOffset:AUTO"><apiName>AUTO</apiName><shortdesc> Richtet die Oberlänge der Zeile am oberen Versatz des Containers aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> Richtet die Oberlänge der Zeile am oberen Versatz des Containers aus.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BaselineOffset:LINE_HEIGHT"><apiName>LINE_HEIGHT</apiName><shortdesc> Gibt einen Offset entsprechend der Höhe der Zeile an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineHeight</apiData><apiType value="String"/></apiValueDef><apiDesc> Gibt einen Offset entsprechend der Höhe der Zeile an.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:WhiteSpaceCollapse"><apiName>WhiteSpaceCollapse</apiName><shortdesc>
	  Definiert die Werte für die Einstellung der whiteSpaceCollapse-Eigenschaft der TextLayoutFormat-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Definiert die Werte für die Einstellung der <codeph>whiteSpaceCollapse</codeph>-Eigenschaft der <codeph>TextLayoutFormat</codeph>-Klasse. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/whiteSpaceCollapse"><linktext>TextLayoutFormat.whiteSpaceCollapse</linktext></link></related-links><apiValue id="flashx.textLayout.formats:WhiteSpaceCollapse:COLLAPSE"><apiName>COLLAPSE</apiName><shortdesc> 
		 Entfernt Leerraum beim Importieren von Text (Standardeinstellung).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collapse</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 Entfernt Leerraum beim Importieren von Text (Standardeinstellung). Entfernt in einem importierten Textblock Zeichen für neue Zeilen, Tabulatoren sowie Leerzeichen am Anfang und Ende. Behält Zeilenumbruch-Tags (br/) und Unicode-Zeilentrennzeichen bei.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:WhiteSpaceCollapse:PRESERVE"><apiName>PRESERVE</apiName><shortdesc> Behält Leerräume während des Textimports bei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>preserve</apiData><apiType value="String"/></apiValueDef><apiDesc> Behält Leerräume während des Textimports bei. 
		</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>