<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.container"><apiName>flashx.textLayout.container</apiName><apiDetail/><apiClassifier id="flashx.textLayout.container:ISandboxSupport"><apiName>ISandboxSupport</apiName><shortdesc> Schnittstelle zur Unterstützung von durch TLF verwalteten Containern in einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> Schnittstelle zur Unterstützung von durch TLF verwalteten Containern in einer Sicherheits-Sandbox.
	 
	 </apiDesc></apiClassifierDetail><apiOperation id="flashx.textLayout.container:ISandboxSupport:flashx.textLayout.container:ISandboxSupport:beginMouseCapture"><apiName>beginMouseCapture</apiName><shortdesc> 
		 Fordert Clients auf, mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox weiterzuleiten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Fordert Clients auf, mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox weiterzuleiten.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ISandboxSupport:flashx.textLayout.container:ISandboxSupport:endMouseCapture"><apiName>endMouseCapture</apiName><shortdesc> 
		 Informiert Client darüber, dass die Weiterleitung der mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox nicht mehr erforderlich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Informiert Client darüber, dass die Weiterleitung der mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox nicht mehr erforderlich ist.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ISandboxSupport:flashx.textLayout.container:ISandboxSupport:mouseMoveSomewhere"><apiName>mouseMoveSomewhere</apiName><shortdesc> Client-Aufruf zum Weiterleiten eines mouseMove-Ereignisses von außerhalb einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc> Client-Aufruf zum Weiterleiten eines mouseMove-Ereignisses von außerhalb einer Sicherheits-Sandbox. Die Koordinaten der Mausbewegung werden nicht benötigt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ISandboxSupport:flashx.textLayout.container:ISandboxSupport:mouseUpSomewhere"><apiName>mouseUpSomewhere</apiName><shortdesc> Client-Aufruf zum Weiterleiten eines mouseUp-Ereignisses von außerhalb einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc> Client-Aufruf zum Weiterleiten eines mouseUp-Ereignisses von außerhalb einer Sicherheits-Sandbox. Die Koordinaten des mouseUp-Ereignisses werden nicht benötigt.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.container:TextContainerManager"><apiName>TextContainerManager</apiName><shortdesc> Verwaltet Text in einem Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><Exclude kind="method" name="callInContext"/><Exclude kind="method" name="getBaseSWFContext"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.compose:ISWFContext</apiBaseInterface><apiBaseInterface>flashx.textLayout.edit:IInteractionEventHandler</apiBaseInterface><apiBaseInterface>flashx.textLayout.container:ISandboxSupport</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> Verwaltet Text in einem Container. Es wird vorausgesetzt, dass alle untergeordneten Elemente des Containers verwaltet werden. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController"><linktext>ContainerController</linktext></link></related-links><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.UpdateCompleteEvent_updateComplete"><apiName>updateComplete</apiName><shortdesc> Ausgelöst durch ein TextFlow-Objekt, jedes Mal wenn ein Container infolge einer Erstellung neue DisplayObjects hinzugefügt oder aktualisiert hatte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.UpdateCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst durch ein TextFlow-Objekt, jedes Mal wenn ein Container infolge einer Erstellung neue DisplayObjects hinzugefügt oder aktualisiert hatte.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.DamageEvent_damage"><apiName>damage</apiName><shortdesc> Ausgelöst durch ein TextFlow-Objekt bei jeder Beschädigung 
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.DamageEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst durch ein TextFlow-Objekt bei jeder Beschädigung 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.TextLayoutEvent_scroll"><apiName>scroll</apiName><shortdesc> Ausgelöst durch ein TextFlow-Objekt, nachdem für Text innerhalb eines Containers ein Bildlauf durchgeführt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.TextLayoutEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst durch ein TextFlow-Objekt, nachdem für Text innerhalb eines Containers ein Bildlauf durchgeführt wurde.  
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.StatusChangeEvent_inlineGraphicStatusChanged"><apiName>inlineGraphicStatusChanged</apiName><shortdesc> Ausgelöst, wenn die Größe eines InlineGraphicElement entsprechend der Breiten- und Höheneinstellung als Auto- oder Prozentangabe angepasst wird und das Laden der Grafik beendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.StatusChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Größe eines InlineGraphicElement entsprechend der Breiten- und Höheneinstellung als Auto- oder Prozentangabe angepasst wird und das Laden der Grafik beendet wurde. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowElementMouseEvent_click"><apiName>click</apiName><shortdesc> Ausgelöst, wenn auf eine Verknüpfung geklickt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn auf eine Verknüpfung geklickt wurde. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowElementMouseEvent_rollOut"><apiName>rollOut</apiName><shortdesc> Ausgelöst, wenn die Maus von einer Verknüpfung weg bewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus von einer Verknüpfung weg bewegt wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowElementMouseEvent_rollOver"><apiName>rollOver</apiName><shortdesc> Ausgelöst, wenn die Maus zuerst auf einer Verknüpfung ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus zuerst auf einer Verknüpfung ist. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowElementMouseEvent_mouseMove"><apiName>mouseMove</apiName><shortdesc> Ausgelöst, wenn die Maus über eine Verknüpfung bewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus über eine Verknüpfung bewegt wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowElementMouseEvent_mouseUp"><apiName>mouseUp</apiName><shortdesc> Ausgelöst, wenn die Maus über einer Verknüpfung losgelassen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maus über einer Verknüpfung losgelassen wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowElementMouseEvent_mouseDown"><apiName>mouseDown</apiName><shortdesc> Ausgelöst, wenn die Maustaste über einer Verknüpfung gedrückt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, wenn die Maustaste über einer Verknüpfung gedrückt wird. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.CompositionCompleteEvent_compositionComplete"><apiName>compositionComplete</apiName><shortdesc> Ausgelöst nach jeder Neuerstellung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.CompositionCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst nach jeder Neuerstellung. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.SelectionEvent_selectionChange"><apiName>selectionChange</apiName><shortdesc> Ausgelöst, sobald die Auswahl geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.SelectionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Ausgelöst, sobald die Auswahl geändert wurde. Wird hauptsächlich zum Aktualisieren der von der Auswahl abhängigen Benutzeroberfläche verwendet. 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE_flowOperationComplete"><apiName>flowOperationComplete</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END_flowOperationEnd"><apiName>flowOperationEnd</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.container:TextContainerManager_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN_flowOperationBegin"><apiName>flowOperationBegin</apiName><shortdesc>
	 
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flashx.textLayout.container:TextContainerManager:TextContainerManager"><apiName>TextContainerManager</apiName><shortdesc> Konstruktorfunktion - Erstellt eine TextContainerManager-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>container</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Der DisplayObjectContainer, in dem die Textzeilen verwaltet werden sollen.
		 </apiDesc></apiParam><apiParam><apiItemName>configuration</apiItemName><apiOperationClassifier>flashx.textLayout.elements:IConfiguration</apiOperationClassifier><apiData>null</apiData><apiDesc>- Die IConfiguration-Instanz, die mit dieser TextContainerManager-Instanz verwendet wird. 
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> Konstruktorfunktion - Erstellt eine TextContainerManager-Instanz. Für optimale Ergebnisse:
		 <ol>
		 <li>Mit TextContainerManager.defaultConfiguration starten und es ändern</li>   
		 <li>Dieselbe Konfiguration unter vielen InputManagers gemeinsam nutzen</li>
		 </ol>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.container:TextContainerManager:activateHandler"><apiName>activateHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#activateHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das Event-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#activateHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#Event/ACTIVATE"><linktext>Event.ACTIVATE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:beginInteraction"><apiName>beginInteraction</apiName><shortdesc> Gibt die aktuelle ISelectionManager-Instanz zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Interaktionsmanager für diese TextContainerManager-Instanz.
		 </apiDesc><apiOperationClassifier>flashx.textLayout.edit:ISelectionManager</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt die aktuelle ISelectionManager-Instanz zurück. Konvertiert die TextFlow-Instanz und erstellt eine, falls erforderlich. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.edit.xml#ISelectionManager"><linktext>ISelectionManager</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:beginMouseCapture"><apiName>beginMouseCapture</apiName><shortdesc> 
		 Fordert Clients auf, mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox weiterzuleiten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Fordert Clients auf, mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox weiterzuleiten.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:compose"><apiName>compose</apiName><shortdesc> Erstellt den Containertext; ruft entweder die Factory oder updateAllControllers() auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Erstellt den Containertext; ruft entweder die Factory oder <codeph>updateAllControllers()</codeph> auf.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:createContextMenu"><apiName>createContextMenu</apiName><shortdesc> Erstellt ein ContextMenu für den TextContainerManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Das erstellte Kontextmenü.
		 
		 </apiDesc><apiType value="flash.ui:ContextMenu"/></apiReturn></apiOperationDef><apiDesc> Erstellt ein ContextMenu für den TextContainerManager. Fügen Sie mit den Methoden der ContextMenu-Klasse Elemente dem Menü hinzu. 
		 <p>Sie können diese Methode überschreiben, um ein benutzerdefiniertes Kontextmenü zu definieren.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.ui.ContextMenu.xml"><linktext>ContextMenu</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:createEditManager"><apiName>createEditManager</apiName><shortdesc>Erstellen Sie einen Bearbeitungsmanager für Bearbeitungszwecke.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Der Bearbeitungsmanager für diese TextContainerManager-Instanz.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.edit:IEditManager</apiOperationClassifier></apiReturn><apiParam><apiItemName>undoManager</apiItemName><apiOperationClassifier>flashx.undo:IUndoManager</apiOperationClassifier><apiDesc>IUndoManager-Instanz für den gerade erstellten EditManager.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>Erstellen Sie einen Bearbeitungsmanager für Bearbeitungszwecke. Überschreiben Sie diese Methode, wenn Sie über einen benutzerdefinierten EditManager verfügen, den Sie an Stelle der Standardeinstellung verwenden möchten.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:createSelectionManager"><apiName>createSelectionManager</apiName><shortdesc>Erstellen Sie einen Auswahlmanager für Auswahlzwecke.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Eine neue SelectionManager-Instanz.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.edit:ISelectionManager</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>Erstellen Sie einen Auswahlmanager für Auswahlzwecke. Überschreiben Sie diese Methode, wenn Sie über einen benutzerdefinierten SelectionManager verfügen, den Sie an Stelle der Standardeinstellung verwenden möchten.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:deactivateHandler"><apiName>deactivateHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#deactivateHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das Event-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#deactivateHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#Event/DEACTIVATE"><linktext>Event.DEACTIVATE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:drawBackgroundAndSetScrollRect"><apiName>drawBackgroundAndSetScrollRect</apiName><shortdesc>   
		 Gibt „true“ zurück, wenn es in der scrollRect-Eigenschaft des Containers eingetragen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn es das <codeph>scrollRect</codeph>-Objekt erstellt hat.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>scrollX</apiItemName><apiType value="Number"/><apiDesc>Die horizontale Startposition des Scroll-Rectangles.
		 </apiDesc></apiParam><apiParam><apiItemName>scrollY</apiItemName><apiType value="Number"/><apiDesc>Die vertikale Startposition des Scroll-Rectangles.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>   
		 Gibt <codeph>true</codeph> zurück, wenn es in der scrollRect-Eigenschaft des Containers eingetragen wurde. Durch diese Methode können Sie testen, ob <codeph>scrollRect</codeph> ohne tatsächlichen Zugriff auf die <codeph>scrollRect</codeph>-Eigenschaft festgelegt wurde. Daraus kann sich unter Umständen ein Leistungsproblem ergeben. 
		 <p>Überschreiben Sie diese Methode, um einen Hintergrund oder einen Rahmen zu zeichnen. Das Überschreiben dieser Methode kann heikel sein, da scrollRect wie angegeben festgelegt werden <b>muss</b>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:editHandler"><apiName>editHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#editHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Ereignisobjekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#editHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.Event.xml"><linktext>Ereignis</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:endInteraction"><apiName>endInteraction</apiName><shortdesc> Beendet die Interaktion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Beendet die Interaktion. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.edit.xml#ISelectionManager"><linktext>ISelectionManager</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:endMouseCapture"><apiName>endMouseCapture</apiName><shortdesc> 
		 Informiert Client darüber, dass die Weiterleitung der mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox nicht mehr erforderlich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Informiert Client darüber, dass die Weiterleitung der mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox nicht mehr erforderlich ist.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:focusChangeHandler"><apiName>focusChangeHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#focusChangeHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#focusChangeHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#FocusEvent/KEY_FOCUS_CHANGE"><linktext>FocusEvent.KEY_FOCUS_CHANGE</linktext></link><link href="" invalidHref="flash.events.xml#FocusEvent/MOUSE_FOCUS_CHANGE"><linktext>FocusEvent.MOUSE_FOCUS_CHANGE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:focusInHandler"><apiName>focusInHandler</apiName><shortdesc> Verarbeitet ein focusIn-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/></apiParam></apiOperationDef><apiDesc> Verarbeitet ein focusIn-Ereignis.
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:focusOutHandler"><apiName>focusOutHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#focusOutHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#focusOutHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#FocusEvent/FOCUS_OUT"><linktext>FocusEvent.FOCUS_OUT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:getContentBounds"><apiName>getContentBounds</apiName><shortdesc> Erstellt ein Rechteck, das angibt, wo durch den letzten Aufruf der compose()- oder updateContainer()-Methode der Text platziert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>die Begrenzungen des Inhalts
		 </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn></apiOperationDef><apiDesc> Erstellt ein Rechteck, das angibt, wo durch den letzten Aufruf der <codeph>compose()</codeph>- oder <codeph>updateContainer()</codeph>-Methode der Text platziert wurde.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.container.xml#TextContainerManager/compose()"><linktext>compose()</linktext></link><link href="flashx.textLayout.container.xml#TextContainerManager/updateContainer()"><linktext>updateContainer()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:getFocusedSelectionFormat"><apiName>getFocusedSelectionFormat</apiName><shortdesc> Gibt das focusedSelectionFormat zurück, standardmäßig wird es über die Konfiguration abgerufen.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>flashx.textLayout.edit:SelectionFormat</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt das focusedSelectionFormat zurück, standardmäßig wird es über die Konfiguration abgerufen. Dies kann in der Unterklasse überschrieben werden, um ein anderes SelectionFormat bereitzustellen.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:getInactiveSelectionFormat"><apiName>getInactiveSelectionFormat</apiName><shortdesc> Gibt das inactiveSelectionFormat zurück, standardmäßig wird es über die Konfiguration abgerufen. Dies kann in der Unterklasse überschrieben werden, um ein anderes SelectionFormat bereitzustellen.
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>flashx.textLayout.edit:SelectionFormat</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt das inactiveSelectionFormat zurück, standardmäßig wird es über die Konfiguration abgerufen. Dies kann in der Unterklasse überschrieben werden, um ein anderes SelectionFormat bereitzustellen.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:getLineAt"><apiName>getLineAt</apiName><shortdesc> Gibt die TextLine an der Indexposition vom Array erstellter Zeilen zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die TextLine, die an der angegebenen Indexposition auftritt.
		 
		 </apiDesc><apiType value="flash.text.engine:TextLine"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Sucht die Zeile an dieser Indexposition im Text.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Gibt die TextLine an der Indexposition vom Array erstellter Zeilen zurück.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:getScrollDelta"><apiName>getScrollDelta</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#getScrollDelta()"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/><apiDesc>der Delta-Abstand zur Durchführung eines Bildlaufs
		
		</apiDesc></apiReturn><apiParam><apiItemName>numLines</apiItemName><apiType value="int"/><apiDesc>Die Anzahl der Zeilen, für die ein Bildlauf durchgeführt wird.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#getScrollDelta()"> 
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:getTextFlow"><apiName>getTextFlow</apiName><shortdesc> Der aktuelle TextFlow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>das aktuelle TextFlow-Objekt
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Der aktuelle TextFlow. Konvertiert diesen in eine vollständige TextFlow-Darstellung, wenn es nicht bereits eine ist. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:getText"><apiName>getText</apiName><shortdesc>
		 Gibt den aktuellen Text zurück unter Verwendung eines Trennzeichens zwischen den Absätzen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>separator</apiItemName><apiType value="String"/><apiData> </apiData><apiDesc>Zwischen Absätzen zu setzender String.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gibt den aktuellen Text zurück unter Verwendung eines Trennzeichens zwischen den Absätzen. Das Trennzeichen kann durch das Argument <codeph>separator</codeph> angegeben werden. Der Standardwert des <codeph>separator</codeph>-Arguments ist das Unicode-Zeichen <codeph>PARAGRAPH SEPARATOR (U+2029)(</codeph>.
		 
		 <p>Durch Aufrufen der Set-Funktion wird jeder angehängte TextFlow gelöscht. Eine gegebenenfalls vorgenommene Auswahl geht verloren.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:getUndoManager"><apiName>getUndoManager</apiName><shortdesc> 
		 Gibt den Undo-Manager zurück, der verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Neue IUndoManager-Instanz.
		 
		 </apiDesc><apiOperationClassifier>flashx.undo:IUndoManager</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> 
		 Gibt den Undo-Manager zurück, der verwendet werden soll. Standardmäßig wird ein eindeutiger Undo-Manager erstellt. Sie können diese Methode in der Unterklasse überschreiben, wenn Sie den Undo-Manager anpassen möchten (beispielsweise um einen gemeinsam genutzten Undo-Manager für mehrere TextContainerManager-Instanzen zu verwenden).
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:protected:getUnfocusedSelectionFormat"><apiName>getUnfocusedSelectionFormat</apiName><shortdesc> Gibt das unfocusedSelectionFormat zurück, standardmäßig wird es über die Konfiguration abgerufen. Diese Methode kann in der Unterklasse überschrieben werden, um ein anderes SelectionFormat bereitzustellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>flashx.textLayout.edit:SelectionFormat</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Gibt das unfocusedSelectionFormat zurück, standardmäßig wird es über die Konfiguration abgerufen. Diese Methode kann in der Unterklasse überschrieben werden, um ein anderes SelectionFormat bereitzustellen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:imeStartCompositionHandler"><apiName>imeStartCompositionHandler</apiName><shortdesc> Verarbeitet das IME.START_COMPOSITION-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:IMEEvent"/><apiDesc> Das IMEEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>IME.START_COMPOSITION</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#IMEEvent/START_COMPOSITION"><linktext>IMEEvent.START_COMPOSITION</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:invalidateSelectionFormats"><apiName>invalidateSelectionFormats</apiName><shortdesc> Rufen Sie dies auf, wenn Sie die Auswahlformate ändern (SelectionFormat) und „interactionManager“ aktualisieren möchten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Rufen Sie dies auf, wenn Sie die Auswahlformate ändern (SelectionFormat) und „interactionManager“ aktualisieren möchten. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:invalidateUndoManager"><apiName>invalidateUndoManager</apiName><shortdesc> Rufen Sie dies auf, wenn Sie gerade eine Bearbeitung durchführen und den Undo-Manager für Bearbeitungszwecke zurücksetzen möchten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Rufen Sie dies auf, wenn Sie gerade eine Bearbeitung durchführen und den Undo-Manager für Bearbeitungszwecke zurücksetzen möchten.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:isDamaged"><apiName>isDamaged</apiName><shortdesc> Gibt „true“ zurück, wenn das Erstellen des Inhalts erforderlich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Erstellen des Inhalts erforderlich ist; ansonsten <codeph>false</codeph>.
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> Gibt <codeph>true</codeph> zurück, wenn das Erstellen des Inhalts erforderlich ist. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:keyDownHandler"><apiName>keyDownHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#keyDownHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:KeyboardEvent"/><apiDesc>KeyboardEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#keyDownHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#KeyboardEvent/KEY_DOWN"><linktext>KeyboardEvent.KEY_DOWN</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:keyFocusChangeHandler"><apiName>keyFocusChangeHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#keyFocusChangeHandler()."> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#keyFocusChangeHandler()."> </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:keyUpHandler"><apiName>keyUpHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#keyUpHandler()."> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:KeyboardEvent"/><apiDesc>Das KeyboardEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#keyUpHandler()."> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#KeyboardEvent/KEY_UP"><linktext>KeyboardEvent.KEY_UP</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:menuSelectHandler"><apiName>menuSelectHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#menuSelectHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:ContextMenuEvent"/><apiDesc>ContextMenuEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#menuSelectHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#ContextMenuEvent/MENU_SELECT"><linktext>ContextMenuEvent.MENU_SELECT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseDoubleClickHandler"><apiName>mouseDoubleClickHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#mouseDoubleClickHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#mouseDoubleClickHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/DOUBLE_CLICK"><linktext>MouseEvent.DOUBLE_CLICK</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#mouseDownHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#mouseDownHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_DOWN"><linktext>MouseEvent.MOUSE_DOWN</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseMoveHandler"><apiName>mouseMoveHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#mouseMoveHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#mouseMoveHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_MOVE"><linktext>MouseEvent.MOUSE_MOVE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseMoveSomewhere"><apiName>mouseMoveSomewhere</apiName><shortdesc> Client-Aufruf zum Weiterleiten eines mouseMove-Ereignisses von außerhalb einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>e</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc> Client-Aufruf zum Weiterleiten eines mouseMove-Ereignisses von außerhalb einer Sicherheits-Sandbox. Die Koordinaten der Mausbewegung werden nicht benötigt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseOutHandler"><apiName>mouseOutHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#mouseOutHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#mouseOutHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_OUT"><linktext>MouseEvent.MOUSE_OUT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseOverHandler"><apiName>mouseOverHandler</apiName><shortdesc> Verarbeitet ein mouseOver-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef><apiDesc> Verarbeitet ein mouseOver-Ereignis.
		</apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_OVER"><linktext>MouseEvent.MOUSE_OVER</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#mouseUpHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#mouseUpHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_UP"><linktext>MouseEvent.MOUSE_UP</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseUpSomewhere"><apiName>mouseUpSomewhere</apiName><shortdesc> Client-Aufruf zum Weiterleiten eines mouseUp-Ereignisses von außerhalb einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>e</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc> Client-Aufruf zum Weiterleiten eines mouseUp-Ereignisses von außerhalb einer Sicherheits-Sandbox. Die Koordinaten des mouseUp-Ereignisses werden nicht benötigt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:mouseWheelHandler"><apiName>mouseWheelHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#mouseWheelHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#mouseWheelHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_WHEEL"><linktext>MouseEvent.MOUSE_WHEEL</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:scrollToRange"><apiName>scrollToRange</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#scrollToRange()"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>activePosition</apiItemName><apiType value="int"/><apiDesc>Das Ende der Auswahl, das beim Erweitern der Auswahl geändert wird. Es kann entweder der Anfang oder das Ende der Auswahl sein, ausgedrückt als Offset ab dem Anfang des Textflusses.
		 </apiDesc></apiParam><apiParam><apiItemName>anchorPosition</apiItemName><apiType value="int"/><apiDesc>  	Das stabile Ende der Auswahl, wenn Sie die Auswahl erweitern. Es kann entweder der Anfang oder das Ende der Auswahl sein.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#scrollToRange()"> 
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:setTextFlow"><apiName>setTextFlow</apiName><shortdesc> Legt einen TextFlow in diesem TextContainerManager fest, der jeden vorhanden TextFlow ersetzt und den aktuellen Text löscht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>textFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> Legt einen TextFlow in diesem TextContainerManager fest, der jeden vorhanden TextFlow ersetzt und den aktuellen Text löscht. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:setText"><apiName>setText</apiName><shortdesc>
		 Legt die Texteigenschaft auf den angegebenen String fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiDesc>der String, der festgelegt werden soll
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Legt die <codeph>text</codeph>-Eigenschaft auf den angegebenen String fest. Verwirft einen gegebenenfalls angehängten TextFlow. Eine gegebenenfalls vorgenommene Auswahl geht verloren.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:textInputHandler"><apiName>textInputHandler</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#textInputHandler()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:TextEvent"/><apiDesc> Das TextEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flashx.textLayout.container.ContainerController#textInputHandler()"> </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#TextEvent/TEXT_INPUT"><linktext>TextEvent.TEXT_INPUT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:TextContainerManager:updateContainer"><apiName>updateContainer</apiName><shortdesc> Aktualisiert die Anzeige; ruft entweder die Factory oder updateAllControllers() auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Aktualisiert die Anzeige; ruft entweder die Factory oder updateAllControllers() auf.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.container:TextContainerManager:compositionHeight:get"><apiName>compositionHeight</apiName><shortdesc> Gibt die vertikale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Gibt die vertikale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist. Der Wert wird in Pixeln angegeben. 
		 <p>Nach Festlegen dieser Eigenschaft ist der Text im Container beschädigt und muss erstellt werden.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:compositionWidth:get"><apiName>compositionWidth</apiName><shortdesc> Gibt die horizontale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Gibt die horizontale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist. Der Wert wird in Pixeln angegeben.
		 
		 <p>Nach Festlegen dieser Eigenschaft ist der Text im Container beschädigt und muss erstellt werden.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:configuration:get"><apiName>configuration</apiName><shortdesc> Das Configuration-Objekt für diesen TextContainerManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:IConfiguration</apiValueClassifier></apiValueDef><apiDesc> Das Configuration-Objekt für diesen TextContainerManager. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.textLayout.IConfiguration.xml"><linktext>IConfiguration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:container:get"><apiName>container</apiName><shortdesc> Gibt den Container (DisplayObjectContainer) zurück, der den von diesem TextContainerManager verwalteten Text enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc> Gibt den Container (DisplayObjectContainer) zurück, der den von diesem TextContainerManager verwalteten Text enthält.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>ContainerController.container</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:defaultConfiguration:get"><apiName>defaultConfiguration</apiName><shortdesc> Die Standardkonfiguration für diesen TextContainerManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:IConfiguration</apiValueClassifier></apiValueDef><apiDesc> Die Standardkonfiguration für diesen TextContainerManager. Spalten- und Abstandsattribute werden auf <codeph>FormatValue.INHERIT</codeph> festgelegt.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#IConfiguration"><linktext>IConfiguration</linktext></link><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:editingMode:get"><apiName>editingMode</apiName><shortdesc> Bearbeitungsmodus für diesen TextContainerManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Bearbeitungsmodus für diesen TextContainerManager. Die Modi sind schreibgeschützt, Lesen und Auswählen sowie Bearbeitung (Lesen, Auswählen und Schreiben) zulässig. Legen Sie mithilfe der Konstantenwerte der EditingMode-Klasse diese Eigenschaft fest. 
		 <p>Der Standardwert ist READ_WRITE.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#EditingMode"><linktext>EditingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:horizontalScrollPolicy:get"><apiName>horizontalScrollPolicy</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#horizontalScrollPolicy"> 
		 Steuert, ob die Factory alle Textzeilen generiert oder stoppt, wenn die Containergrenzen gefüllt sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="flashx.textLayout.container.ContainerController#horizontalScrollPolicy"> 
		 Steuert, ob die Factory alle Textzeilen generiert oder stoppt, wenn die Containergrenzen gefüllt sind.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#horizontalScrollPosition"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flashx.textLayout.container.ContainerController#horizontalScrollPosition"> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:hostFormat:get"><apiName>hostFormat</apiName><shortdesc> Legt das Format fest, wenn nur ein String angezeigt wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> Legt das Format fest, wenn nur ein String angezeigt wird. Wird ein TextFlow angezeigt, hat dies keine unmittelbare Auswirkung. Das bereitgestellte ITextLayoutFormat wird nicht kopiert. Wird es ohne Aufrufen dieser Set-Funktion geändert, kann dies unbestimmte Auswirkungen haben. </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:numLines:get"><apiName>numLines</apiName><shortdesc conref="flashx.textLayout.compose.IFlowComposer#numLines"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="flashx.textLayout.compose.IFlowComposer#numLines"> </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:swfContext:get"><apiName>swfContext</apiName><shortdesc> 
		Optionale ISWFContext-Instanz für ggf. notwendige FTE-Aufrufe im richtigen SWF-Kontext.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.compose:ISWFContext</apiValueClassifier></apiValueDef><apiDesc> 
		Optionale ISWFContext-Instanz für ggf. notwendige FTE-Aufrufe im richtigen SWF-Kontext. 
		
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#ISWFContext"><linktext>flashx.textLayout.compose.ISWFContext</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:verticalScrollPolicy:get"><apiName>verticalScrollPolicy</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#verticalScrollPolicy"> 
		 Steuert, ob die Factory alle Textzeilen generiert oder stoppt, wenn die Containergrenzen gefüllt sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="flashx.textLayout.container.ContainerController#verticalScrollPolicy"> 
		 Steuert, ob die Factory alle Textzeilen generiert oder stoppt, wenn die Containergrenzen gefüllt sind.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:TextContainerManager:verticalScrollPosition:get"><apiName>verticalScrollPosition</apiName><shortdesc conref="flashx.textLayout.container.ContainerController#verticalScrollPosition"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flashx.textLayout.container.ContainerController#verticalScrollPosition"> 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.container:ScrollPolicy"><apiName>ScrollPolicy</apiName><shortdesc>
	  Die ScrollPolicy-Klasse ist eine Aufzählungsklasse, die Werte zum Festlegen der horizontalScrollPolicy- und verticalScrollPolicy-Eigenschaften der ContainerController-Klasse definiert, die wiederum einen Textflusscontainer definiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  Die ScrollPolicy-Klasse ist eine Aufzählungsklasse, die Werte zum Festlegen der <codeph>horizontalScrollPolicy</codeph>- und <codeph>verticalScrollPolicy</codeph>-Eigenschaften der ContainerController-Klasse definiert, die wiederum einen Textflusscontainer definiert. 
	 
	  </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController/horizontalScrollPolicy"><linktext>ContainerController.horizontalScrollPolicy</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/verticalScrollPolicy"><linktext>ContainerController.verticalScrollPolicy</linktext></link></related-links><apiValue id="flashx.textLayout.container:ScrollPolicy:AUTO"><apiName>AUTO</apiName><shortdesc> 
		 Gibt an, dass ein Bildlauf stattfinden soll, wenn der Inhalt die Abmessung des Containers überschreitet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 Gibt an, dass ein Bildlauf stattfinden soll, wenn der Inhalt die Abmessung des Containers überschreitet. Die Laufzeit berechnet die Anzahl der Zeilen, die für einen Überlauf des Containers sorgen. Die Benutzer können mit den Cursortasten, durch Ziehen zum Auswählen oder durch Drehen des Mausrads dorthin navigieren. Sie können auch die Durchführung des Bildlaufs starten, indem Sie den entsprechenden Positionswert festlegen, entweder <codeph>ContainerController.horizontalScrollPosition</codeph> oder <codeph>ContainerController.verticalScrollPosition</codeph>. Somit kann zur Laufzeit während der Bearbeitung automatisch ein Bildlauf durch den Inhalt des Containers durchgeführt werden.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ScrollPolicy:OFF"><apiName>OFF</apiName><shortdesc> 
		 Hat zur Folge, dass zur Laufzeit keine Überlaufzeilen angezeigt werden, d. h. der Benutzer kann nicht dorthin navigieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>off</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 Hat zur Folge, dass zur Laufzeit keine Überlaufzeilen angezeigt werden, d. h. der Benutzer kann nicht dorthin navigieren. In diesem Fall hat das Festlegen der entsprechenden <codeph>ContainerController.horizontalScrollPosition</codeph>- und <codeph>ContainerController.verticalScrollPosition</codeph>-Eigenschaften keine Auswirkung. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ScrollPolicy:ON"><apiName>ON</apiName><shortdesc> 
		 Gibt an, dass der Bildlauf zur Verfügung steht, um auf Inhalt zuzugreifen, der die Abmessung des Containers überschreitet</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>on</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 Gibt an, dass der Bildlauf zur Verfügung steht, um auf Inhalt zuzugreifen, der die Abmessung des Containers überschreitet Zur Laufzeit wird die Anzahl der Zeilen berechnet, die für einen Überlauf des Containers sorgen. Dadurch kann der Benutzer in der Ansicht mit den Cursortasten, durch Ziehen zum Auswählen oder durch Drehen des Mausrads dort einen Bildlauf durchführen. Sie können auch einen Bildlauf durchführen, indem Sie den entsprechenden Positionswert festlegen, entweder <codeph>ContainerController.horizontalScrollPosition</codeph> oder <codeph>ContainerController.verticalScrollPosition</codeph>. Somit kann zur Laufzeit während der Bearbeitung automatisch ein Bildlauf durch den Inhalt des Containers durchgeführt werden.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.container:ColumnState"><apiName>ColumnState</apiName><shortdesc> 
	 Die ColumnState-Klasse berechnet die Größen und Positionen der Spalten mithilfe der Breite des Containers und der Containerattribute.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die ColumnState-Klasse berechnet die Größen und Positionen der Spalten mithilfe der Breite des Containers und der Containerattribute. Sie können Instanzen dieser Klasse unabhängig davon erstellen, um Spaltenwerte zu berechnen, oder Sie können die für den Text verwendeten Spaltenwerte abrufen, nachdem der Container erstellt oder aktualisiert (neu gezeichnet) wurde.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController"><linktext>ContainerController</linktext></link></related-links><apiConstructor id="flashx.textLayout.container:ColumnState:ColumnState"><apiName>ColumnState</apiName><shortdesc>
		 Konstruktorfunktion - Erstellt ein ColumnState-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>blockProgression</apiItemName><apiType value="String"/><apiDesc>Die Richtung der Zeilen für den Textfluss: entweder BlockProgression.TB (von oben nach unten) oder BlockProgression.RL (von rechts nach links).
		 </apiDesc></apiParam><apiParam><apiItemName>columnDirection</apiItemName><apiType value="String"/><apiDesc>Die Richtung des Spaltenlayouts für den Textfluss: entweder Direction.RTL (von rechts nach links) oder Direction.LTR (von links nach rechts).
		 </apiDesc></apiParam><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Eine ContainerController-Instanz, mit deren Attributen die Spaltenwerte berechnet werden.
		 </apiDesc></apiParam><apiParam><apiItemName>compositionWidth</apiItemName><apiType value="Number"/><apiDesc>Die horizontale Ausdehnung (in Pixel), die für den Text innerhalb des Containers zulässig ist.
		 </apiDesc></apiParam><apiParam><apiItemName>compositionHeight</apiItemName><apiType value="Number"/><apiDesc>Die vertikale Ausdehnung (in Pixel), die für den Text innerhalb des Containers zulässig ist.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Konstruktorfunktion - Erstellt ein ColumnState-Objekt. Wenn die Werte für <codeph>controller.compositionWidth</codeph> und <codeph>controller.compositionHeight</codeph> gleich <codeph>NaN</codeph> (keine Zahl) sind, misst der Konstruktor den Inhalt des Containers, um die tatsächliche Bereite und Höhe der Erstellung für ColumnState zu ermitteln. Geben Sie mithilfe der von der <codeph>flashx.textLayout.formats.BlockProgression</codeph>-Klasse definierten Konstanten den Wert für den <codeph>blockProgression</codeph>-Parameter an. Geben Sie mithilfe der von <codeph>flashx.textLayout.formats.Direction</codeph> definierten Konstanten den Wert für den <codeph>columnDirection</codeph>-Parameter an.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>BlockProgression</linktext></link><link href="flashx.textLayout.formats.xml#Direction"><linktext>Richtung</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.container:ColumnState:getColumnAt"><apiName>getColumnAt</apiName><shortdesc> 
		 Gibt den Bereich zurück, den eine Spalte innerhalb des Containers einnimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Bereich der angegebenen Spalte.
		 
		 </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die relative Position der Spalte unter allen Spalten im Container, wobei die erste Spalte an Position 0 ist.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Gibt den Bereich zurück, den eine Spalte innerhalb des Containers einnimmt. Dadurch können Sie auf den Bereich für eine bestimmte Spalte zugreifen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.container:ColumnState:columnCount:get"><apiName>columnCount</apiName><shortdesc> 
		 Die Anzahl der Spalten im Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Die Anzahl der Spalten im Container. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ColumnState:columnGap:get"><apiName>columnGap</apiName><shortdesc> 
		 Der Abstand in Pixeln zwischen Spalten im Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 Der Abstand in Pixeln zwischen Spalten im Container.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ColumnState:columnWidth:get"><apiName>columnWidth</apiName><shortdesc> 
		 Die Breite der Spalten im Container in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 Die Breite der Spalten im Container in Pixeln. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.container:ContainerController"><apiName>ContainerController</apiName><shortdesc> 
	 Die ContainerController-Klasse definiert die Beziehung zwischen einem TextFlow-Objekt und einem Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.edit:IInteractionEventHandler</apiBaseInterface><apiBaseInterface>flashx.textLayout.formats:ITextLayoutFormat</apiBaseInterface><apiBaseInterface>flashx.textLayout.container:ISandboxSupport</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Die ContainerController-Klasse definiert die Beziehung zwischen einem TextFlow-Objekt und einem Container. Ein TextFlow verfügt über einen IFlowComposer, der einen Container oder eine Gruppe von Containern für den TextFlow verwaltet. Der IFlowComposer verfügt über einen ContainerController für jeden Container, den er verwaltet. Der ContainerController verwaltet den Container, die Attribute, die für diesen Container eindeutig sind, und den Text im Container.
	 
	 <p><adobeimage alt="IContainerController" href="../../../images/textLayout_multiController.gif"/></p>
	 
	 </apiDesc><example conref="examples\ContainerControllerExample1.as"/><example conref="examples\ContainerControllerExample2.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>flashx.textLayout.compose.IFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>flashx.textLayout.elements.TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.container:ContainerController:ContainerController"><apiName>ContainerController</apiName><shortdesc> 
		 Konstruktor - Erstellt eine ContainerController-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>container</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Der DisplayObjectContainer, in dem die Textzeilen verwaltet werden sollen.
		 </apiDesc></apiParam><apiParam><apiItemName>compositionWidth</apiItemName><apiType value="Number"/><apiData>100</apiData><apiDesc>Die Anfangsbreite zum Erstellen von Text im Container.
		 </apiDesc></apiParam><apiParam><apiItemName>compositionHeight</apiItemName><apiType value="Number"/><apiData>100</apiData><apiDesc>Die Anfangshöhe zum Erstellen von Text im Container.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> 
		 Konstruktor - Erstellt eine ContainerController-Instanz. Der ContainerController hat eine Standardeinstellung für <codeph>compositionWidth</codeph> und <codeph>compositionHeight</codeph>, sodass Text im Container angezeigt wird, wenn Sie nicht die zugehörige Breite und Höhe festlegen.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.container:ContainerController:activateHandler"><apiName>activateHandler</apiName><shortdesc> Verarbeitet das Event.ACTIVATE-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das Event-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>Event.ACTIVATE</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_activateHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#Event/ACTIVATE"><linktext>Event.ACTIVATE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:addBackgroundShape"><apiName>addBackgroundShape</apiName><shortdesc>
		 Fügt ein flash.display.Shape-Objekt hinzu, auf dem Hintergrundformen (z. B. Hintergrundfarbe) gezeichnet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>shape</apiItemName><apiType value="flash.display:Shape"/><apiDesc>Hinzuzufügendes <codeph>flash.display.Shape</codeph>-Objekt
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fügt ein <codeph>flash.display.Shape</codeph>-Objekt hinzu, auf dem Hintergrundformen (und Hintergrundfarbe) gezeichnet werden. Die Standardimplementierung dieser Methode, die überschrieben werden kann, fügt das Objekt <codeph>container</codeph> hinzu, und zwar unmittelbar vor dem ersten untergeordneten <codeph>flash.text.engine.TextLine</codeph>-Element, falls ein solches Element vorhanden ist. Andernfalls wird das Objekt nach dem letzten vorhandenen untergeordneten Element hinzugefügt. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Shape.xml"><linktext>flash.display.Shape</linktext></link><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>Container</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:addSelectionContainer"><apiName>addSelectionContainer</apiName><shortdesc>
		 Fügt ein flash.display.DisplayObjectContainer-Objekt ein, dem Auswahlformen (wie Blockauswahlmarkierung, Cursor usw.) hinzugefügt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>selectionContainer</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>Hinzuzufügendes <codeph>flash.display.DisplayObjectContainer</codeph>-Objekt
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fügt ein <codeph>flash.display.DisplayObjectContainer</codeph>-Objekt ein, dem Auswahlformen (wie Blockauswahlmarkierung, Cursor usw.) hinzugefügt werden. Die Standardimplementierung dieser Methode, die überschrieben werden kann, weist folgendes Verhalten auf: Das Objekt wird vor dem ersten untergeordneten <codeph>flash.text.engine.TextLine</codeph>-Element von <codeph>container</codeph> hinzugefügt, wenn ein solches Element vorhanden ist, das Objekt undurchsichtig ist und dafür die normale Füllmethode verwendet wird. In allen anderen Fällen wird es als letztes untergeordnetes <codeph>container</codeph>-Element hinzugefügt.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.DisplayObjectContainer.xml"><linktext>flash.display.DisplayObjectContainer</linktext></link><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>Container</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:addTextLine"><apiName>addTextLine</apiName><shortdesc>
		 Fügt ein flash.text.engine.TextLine-Objekt als untergeordnetes Container-Element hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>textLine</apiItemName><apiType value="flash.text.engine:TextLine"/><apiDesc>Hinzuzufügendes <codeph>flash.text.engine.TextLine</codeph>-Objekt
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Einfüge-Indexposition der Textzeile im übergeordneten Element 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fügt ein <codeph>flash.text.engine.TextLine</codeph>-Objekt als untergeordnetes <codeph>container</codeph>-Element hinzu. Die Standardimplementierung dieser Methode, die überschrieben werden kann, fügt das Objekt als direkt untergeordnetes <codeph>container</codeph>-Element an der angegebenen Indexposition hinzu.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>Container</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:autoScrollIfNecessary"><apiName>autoScrollIfNecessary</apiName><shortdesc> 
		 Verarbeitet ein Bildlaufereignis während einer „Ziehauswahl“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mouseX</apiItemName><apiType value="int"/><apiDesc>Die horizontale Position des Cursors auf der Bühne.
		 </apiDesc></apiParam><apiParam><apiItemName>mouseY</apiItemName><apiType value="int"/><apiDesc>Die vertikale Position des Cursors auf der Bühne.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Verarbeitet ein Bildlaufereignis während einer „Ziehauswahl“. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:beginMouseCapture"><apiName>beginMouseCapture</apiName><shortdesc> 
		 Fordert Clients auf, mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox weiterzuleiten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Fordert Clients auf, mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox weiterzuleiten.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:clearStyle"><apiName>clearStyle</apiName><shortdesc> Löscht den von styleProp angegebenen Stil aus diesem FlowElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> Löscht den von <codeph>styleProp</codeph> angegebenen Stil aus diesem FlowElement. Legt den Wert auf <codeph>undefined</codeph> fest.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:createContextMenu"><apiName>createContextMenu</apiName><shortdesc> 
		 Erstellt ein Kontextmenü für den ContainerController.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="flash.ui:ContextMenu"/></apiReturn></apiOperationDef><apiDesc> 
		 Erstellt ein Kontextmenü für den ContainerController. Fügen Sie mit den Methoden der ContextMenu-Klasse Elemente dem Menü hinzu.
		 <p>Sie können diese Methode überschreiben, um ein benutzerdefiniertes Kontextmenü zu definieren.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.ui.ContextMenu.xml"><linktext>ContextMenu</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:deactivateHandler"><apiName>deactivateHandler</apiName><shortdesc> Verarbeitet das Event.DEACTIVATE-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das Event-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>Event.DEACTIVATE</codeph>-Ereignis, wenn der Client Ereignisse verwaltet. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#Event/DEACTIVATE"><linktext>Event.DEACTIVATE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:editHandler"><apiName>editHandler</apiName><shortdesc>
		 Verarbeitet ein Bearbeitungsereignis (CUT, COPY, PASTE, SELECT_ALL), wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Ereignisobjekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verarbeitet ein Bearbeitungsereignis (CUT, COPY, PASTE, SELECT_ALL), wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_editHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.Event.xml"><linktext>Ereignis</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:endMouseCapture"><apiName>endMouseCapture</apiName><shortdesc> 
		 Informiert Client darüber, dass die Weiterleitung der mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox nicht mehr erforderlich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Informiert Client darüber, dass die Weiterleitung der mouseup- und mousemove-Ereignisse von außerhalb einer Sicherheits-Sandbox nicht mehr erforderlich ist.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:focusChangeHandler"><apiName>focusChangeHandler</apiName><shortdesc> 
		 Verarbeitet die FocusEvent.KEY_FOCUS_CHANGE- und FocusEvent.MOUSE_FOCUS_CHANGE-Ereignisse, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Verarbeitet die <codeph>FocusEvent.KEY_FOCUS_CHANGE</codeph>- und <codeph>FocusEvent.MOUSE_FOCUS_CHANGE</codeph>-Ereignisse, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#FocusEvent/KEY_FOCUS_CHANGE"><linktext>FocusEvent.KEY_FOCUS_CHANGE</linktext></link><link href="" invalidHref="flash.events.xml#FocusEvent/MOUSE_FOCUS_CHANGE"><linktext>FocusEvent.MOUSE_FOCUS_CHANGE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:focusInHandler"><apiName>focusInHandler</apiName><shortdesc> Verarbeitet das FocusEvent.FOCUS_IN-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>FocusEvent.FOCUS_IN</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_focusInHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#FocusEvent/FOCUS_IN"><linktext>FocusEvent.FOCUS_IN</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:focusOutHandler"><apiName>focusOutHandler</apiName><shortdesc> Verarbeitet das FocusEvent.FOCUS_OUT-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>FocusEvent.FOCUS_OUT</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#FocusEvent/FOCUS_OUT"><linktext>FocusEvent.FOCUS_OUT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:getContentBounds"><apiName>getContentBounds</apiName><shortdesc> 
		 Gibt den Bereich zurück, der den Text enthält, wie vom letzten Erstellungs- oder Aktualisierungsvorgang dargestellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Beschreibt den Bereich, der den Text enthält.
		 
		 </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn></apiOperationDef><apiDesc> 
		 Gibt den Bereich zurück, der den Text enthält, wie vom letzten Erstellungs- oder Aktualisierungsvorgang dargestellt. Die Breite und Höhe könnten geschätzt werden, wenn der Bildlauf im Container möglich ist und der Text den sichtbaren Bereich überschreitet.
		 
		 </apiDesc><example conref="examples\ContainerController_getContentBoundsExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.geom.Rectangle.xml"><linktext>Rectangle</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:getFirstTextLineChildIndex"><apiName>getFirstTextLineChildIndex</apiName><shortdesc>
		 Ruft die Indexposition ab, an der die erste Textzeile im übergeordneten Element angezeigt werden muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Indexposition, an der die erste Textzeile im übergeordneten Element angezeigt werden muss.
		 
		 </apiDesc><apiType value="int"/></apiReturn></apiOperationDef><apiDesc>
		 Ruft die Indexposition ab, an der die erste Textzeile im übergeordneten Element angezeigt werden muss. Die Standardimplementierung dieser Methode, die überschrieben werden kann, gibt die untergeordnete Indexposition des ersten untergeordneten <codeph>flash.text.engine.TextLine</codeph>-Elements in <codeph>container</codeph> wieder, falls ein solches Element vorhanden ist. Andernfalls wird die Indexposition des letzten untergeordneten <codeph>container</codeph>-Elements zurückgegeben. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>Container</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:getScrollDelta"><apiName>getScrollDelta</apiName><shortdesc> 
		Finden Sie den Bildlaufabstand heraus, der für den Bildlauf nach oben oder unten um die angegebene Anzahl der Zeilen erforderlich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>der Delta-Abstand zur Durchführung eines Bildlaufs
		
		</apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>numLines</apiItemName><apiType value="int"/><apiDesc>Die Anzahl der Zeilen, für die ein Bildlauf durchgeführt wird.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> 
		Finden Sie den Bildlaufabstand heraus, der für den Bildlauf nach oben oder unten um die angegebene Anzahl der Zeilen erforderlich ist. Bei negativen Zahlen wird ein Bildlauf nach oben durchgeführt, wodurch mehr vom oberen Teil des TextFlow angezeigt wird. Bei positiven Zahlen wird ein Bildlauf nach unten durchgeführt, wodurch die nächste Zeile unterhalb vollständig angezeigt wird.
		
		<p>Wenn beispielsweise ein Bildlauf nach oben durchgeführt wird, macht diese Methode die nächste Zeile vollständig sichtbar. Wenn die nächste Zeile teilweise verborgen und die Anzahl der angegebenen Zeilen 1 ist, wird die teilweise verborgene Zeile vollständig sichtbar.</p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:getStyle"><apiName>getStyle</apiName><shortdesc> Gibt den Wert für den vom styleProp-Parameter angegebenen Stil zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der aktuelle Wert für den angegebenen Stil.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Der Name der Stileigenschaft, deren Wert Sie benötigen.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Gibt den Wert für den vom <codeph>styleProp</codeph>-Parameter angegebenen Stil zurück.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:imeStartCompositionHandler"><apiName>imeStartCompositionHandler</apiName><shortdesc> Verarbeitet das IMEEvent.IME_START_COMPOSITION-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:IMEEvent"/><apiDesc> Das IMEEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>IMEEvent.IME_START_COMPOSITION</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.IMEEvent.IME_START_COMPOSITION.xml"><linktext>flash.events.IMEEvent.IME_START_COMPOSITION</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:invalidateContents"><apiName>invalidateContents</apiName><shortdesc> 
		 Markiert den gesamten Text in diesem Container als zum Erstellen erforderlich.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Markiert den gesamten Text in diesem Container als zum Erstellen erforderlich. 
		 
		 </apiDesc><example conref="examples\ContainerController_invalidateContentsExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:isDamaged"><apiName>isDamaged</apiName><shortdesc> 
		 Bestimmt, ob der Container Text enthält, für den ein Erstellen erforderlich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Wert „true“, wenn für den Container ein Erstellen erforderlich ist.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
		 Bestimmt, ob der Container Text enthält, für den ein Erstellen erforderlich ist. 
		 
		 </apiDesc><example conref="examples\ContainerController_isDamagedExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:keyDownHandler"><apiName>keyDownHandler</apiName><shortdesc> Verarbeitet das KeyboardEvent.KEY_DOWN-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:KeyboardEvent"/><apiDesc>KeyboardEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>KeyboardEvent.KEY_DOWN</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#KeyboardEvent/KEY_DOWN"><linktext>KeyboardEvent.KEY_DOWN</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:keyFocusChangeHandler"><apiName>keyFocusChangeHandler</apiName><shortdesc> Verarbeitet das FocusEvent.KEY_FOCUS_CHANGE-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:FocusEvent"/><apiDesc>Das FocusEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>FocusEvent.KEY_FOCUS_CHANGE</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#FocusEvent/KEY_FOCUS_CHANGE"><linktext>FocusEvent.KEY_FOCUS_CHANGE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:keyUpHandler"><apiName>keyUpHandler</apiName><shortdesc> Verarbeitet das Keyboard.KEY_UP-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:KeyboardEvent"/><apiDesc>Das KeyboardEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>Keyboard.KEY_UP</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_keyUpHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#KeyboardEvent/KEY_UP"><linktext>KeyboardEvent.KEY_UP</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:menuSelectHandler"><apiName>menuSelectHandler</apiName><shortdesc> 
		 Verarbeitet das ContextMenuEvent.MENU_SELECT-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:ContextMenuEvent"/><apiDesc>ContextMenuEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Verarbeitet das <codeph>ContextMenuEvent.MENU_SELECT</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_menuSelectHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#ContextMenuEvent/MENU_SELECT"><linktext>ContextMenuEvent.MENU_SELECT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseDoubleClickHandler"><apiName>mouseDoubleClickHandler</apiName><shortdesc> Verarbeitet das MouseEvent.DOUBLE_CLICK-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>MouseEvent.DOUBLE_CLICK</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_mouseDoubleClickHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/DOUBLE_CLICK"><linktext>MouseEvent.DOUBLE_CLICK</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc> Verarbeitet das MouseEvent.MOUSE_DOWN-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>MouseEvent.MOUSE_DOWN</codeph>-Ereignis, wenn der Client Ereignisse verwaltet. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_DOWN"><linktext>MouseEvent.MOUSE_DOWN</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseMoveHandler"><apiName>mouseMoveHandler</apiName><shortdesc> 
		 Verarbeitet das MouseEvent.MOUSE_MOVE-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Verarbeitet das <codeph>MouseEvent.MOUSE_MOVE</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_MOVE"><linktext>MouseEvent.MOUSE_MOVE</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseMoveSomewhere"><apiName>mouseMoveSomewhere</apiName><shortdesc> Client-Aufruf zum Weiterleiten eines mouseMove-Ereignisses von außerhalb einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc> Client-Aufruf zum Weiterleiten eines mouseMove-Ereignisses von außerhalb einer Sicherheits-Sandbox. Die Koordinaten der Mausbewegung werden nicht benötigt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseOutHandler"><apiName>mouseOutHandler</apiName><shortdesc> Verarbeitet das MouseEvent.MOUSE_OUT-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>MouseEvent.MOUSE_OUT</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_OUT"><linktext>MouseEvent.MOUSE_OUT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseOverHandler"><apiName>mouseOverHandler</apiName><shortdesc> 
		 Verarbeitet das MouseEvent.MOUSE_OVER-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Verarbeitet das <codeph>MouseEvent.MOUSE_OVER</codeph>-Ereignis, wenn der Client Ereignisse verwaltet. 
		 
		 </apiDesc><example conref="examples\ContainerController_mouseOverHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_OVER"><linktext>MouseEvent.MOUSE_OVER</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc> 
		 Verarbeitet das MouseEvent.MOUSE_UP-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Verarbeitet das <codeph>MouseEvent.MOUSE_UP</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_UP"><linktext>MouseEvent.MOUSE_UP</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseUpSomewhere"><apiName>mouseUpSomewhere</apiName><shortdesc> Client-Aufruf zum Weiterleiten eines mouseUp-Ereignisses von außerhalb einer Sicherheits-Sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc> Client-Aufruf zum Weiterleiten eines mouseUp-Ereignisses von außerhalb einer Sicherheits-Sandbox. Die Koordinaten des mouseUp-Ereignisses werden nicht benötigt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:mouseWheelHandler"><apiName>mouseWheelHandler</apiName><shortdesc> Verarbeitet das MouseEvent.MOUSE_WHEEL-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>MouseEvent.MOUSE_WHEEL</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/MOUSE_WHEEL"><linktext>MouseEvent.MOUSE_WHEEL</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:removeSelectionContainer"><apiName>removeSelectionContainer</apiName><shortdesc>
		 Entfernt das flash.display.DisplayObjectContainer-Objekt, das Auswahlformen (wie Blockauswahlmarkierung, Cursor usw.) enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>selectionContainer</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>Zu entfernendes <codeph>flash.display.DisplayObjectContainer</codeph>-Objekt
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Entfernt das <codeph>flash.display.DisplayObjectContainer</codeph>-Objekt, das Auswahlformen (wie Blockauswahlmarkierung, Cursor usw.) enthält. Die Standardimplementierung dieser Methode, die überschrieben werden kann, entfernt das Objekt aus dem übergeordneten Element, wenn vorhanden.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.DisplayObjectContainer.xml"><linktext>flash.display.DisplayObjectContainer</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>Container</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:removeTextLine"><apiName>removeTextLine</apiName><shortdesc>
		 Entfernt ein flash.text.engine.TextLine-Objekt aus dem übergeordneten Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>textLine</apiItemName><apiType value="flash.text.engine:TextLine"/><apiDesc>Zu entfernendes <codeph>flash.text.engine.TextLine</codeph>-Objekt 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Entfernt ein <codeph>flash.text.engine.TextLine</codeph>-Objekt aus dem übergeordneten Element. Die Standardimplementierung dieser Methode, die überschrieben werden kann, entfernt das Objekt aus <codeph>container</codeph>, wenn es sich um ein direkt untergeordnetes container-Element handelt. Diese Methode kann auch dann aufgerufen werden, wenn das Objekt kein untergeordnetes <codeph>container</codeph>-Element ist. Bei jeder Implementierung dieser Methode muss sichergestellt werden, dass in diesem Fall keine Aktion erfolgt.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link><link href="flashx.textLayout.container.xml#ContainerController/container"><linktext>Container</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:scrollToRange"><apiName>scrollToRange</apiName><shortdesc> 
		 Führt einen Bildlauf durch, sodass der Textbereich im Container sichtbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>activePosition</apiItemName><apiType value="int"/><apiDesc>Das Ende der Auswahl, das beim Erweitern der Auswahl geändert wird. Es kann entweder der Anfang oder das Ende der Auswahl sein, ausgedrückt als Offset ab dem Anfang des Textflusses.
		 </apiDesc></apiParam><apiParam><apiItemName>anchorPosition</apiItemName><apiType value="int"/><apiDesc>  	Das stabile Ende der Auswahl, wenn Sie die Auswahl erweitern. Es kann entweder der Anfang oder das Ende der Auswahl sein.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Führt einen Bildlauf durch, sodass der Textbereich im Container sichtbar ist.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:selectRange"><apiName>selectRange</apiName><shortdesc> 
		 Legt den Bereich des ausgewählten Texts in einer Komponente fest, die ITextSupport implementiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchorIndex</apiItemName><apiType value="int"/><apiDesc>Der auf null basierende Index des Zeichens beim Ankerende der Auswahl
		 
		 </apiDesc></apiParam><apiParam><apiItemName>activeIndex</apiItemName><apiType value="int"/><apiDesc>Der auf null basierende Index des Zeichens beim aktiven Ende der Auswahl.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Legt den Bereich des ausgewählten Texts in einer Komponente, die ITextSupport implementiert, fest. Wenn eines der beiden Argumente sich außerhalb des Bereichs befindet, sollte die Auswahl nicht geändert werden. Um Inline-IME zu unterstützen, sollten Komponenten diese Methode aufrufen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:setCompositionSize"><apiName>setCompositionSize</apiName><shortdesc> 
		 Legt die für Text im Container zulässige Breite und Höhe fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/><apiDesc>Die Breite in Pixel, die für Text im Container zur Verfügung steht.
		 </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/><apiDesc>Die Höhe in Pixel, die für Text im Container zur Verfügung steht.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Legt die für Text im Container zulässige Breite und Höhe fest. 
		 
		 </apiDesc><example conref="examples\ContainerController_setCompositionSizeExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:setStyle"><apiName>setStyle</apiName><shortdesc> 
		Legt den Wert für den vom styleProp-Parameter angegebenen Stil auf den vom newValue-Parameter angegebenen Wert fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Der Name der Stileigenschaft, deren Wert Sie festlegen möchten.
		</apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="any"/><apiDesc>Der Wert, den Sie dem Stil zuweisen möchten.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> 
		Legt den Wert für den vom <codeph>styleProp</codeph>-Parameter angegebenen Stil auf den vom <codeph>newValue</codeph>-Parameter angegebenen Wert fest.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:textInputHandler"><apiName>textInputHandler</apiName><shortdesc> Verarbeitet das TextEvent.TEXT_INPUT-Ereignis, wenn der Client Ereignisse verwaltet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:TextEvent"/><apiDesc> Das TextEvent-Objekt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Verarbeitet das <codeph>TextEvent.TEXT_INPUT</codeph>-Ereignis, wenn der Client Ereignisse verwaltet.
		 
		 </apiDesc><example conref="examples\ContainerController_textInputHandlerExample.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#TextEvent/TEXT_INPUT"><linktext>TextEvent.TEXT_INPUT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.container:ContainerController:protected:updateVisibleRectangle"><apiName>updateVisibleRectangle</apiName><shortdesc> 
		 Bei der Durchführung eines Bildlaufs wird das Scroll-Rectangle so auf das Container-Rectangle festgelegt, dass alle Zeilen, die zur Hälfte angezeigt werden, auf den Bildlaufbereich beschnitten werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Bei der Durchführung eines Bildlaufs wird das Scroll-Rectangle so auf das Container-Rectangle festgelegt, dass alle Zeilen, die zur Hälfte angezeigt werden, auf den Bildlaufbereich beschnitten werden. Wird kein Bildlauf durchgeführt, löschen Sie das Scroll-Rectangle, sodass kein Abschneiden erfolgt.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.container:ContainerController:absoluteStart:get"><apiName>absoluteStart</apiName><shortdesc> 
		 Gibt das erste Zeichen im Container zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Gibt das erste Zeichen im Container zurück. Wenn es sich nicht um den ersten Container im Textfluss handelt, wird dieser Wert beim Erstellen des Textes aktualisiert, und zwar, wenn die <codeph>compose()</codeph>- oder <codeph>updateAllControllers()</codeph>-Methoden von IFlowComposer aufgerufen werden.
		 
	 	 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>flashx.textLayout.compose.IFlowComposer</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Grundlinie an, an der die dominierende Grundlinie ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Grundlinie an, an der die dominierende Grundlinie ausgerichtet wird. Wenn Sie beispielsweise für <codeph>dominantBaseline</codeph> den Wert ASCENT und für <codeph>alignmentBaseline</codeph> den Wert DESCENT festlegen, wird der obere Textrand an der DESCENT-Grundlinie oder unter der Linie ausgerichtet. Das größte Element in der Zeile bestimmt im Allgemeinen die Grundlinien.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert USE_DOMINANT_BASELINE verwendet.</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 TextLayoutFormat: Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Alpha-Wert (Transparenz) für den Hintergrund (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit dem alpha-Wert 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 1 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 TextLayoutFormat: Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Hintergrundfarbe des Texts (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Kann entweder der Konstantenwert <codeph>BackgroundColor.TRANSPARENT</codeph> oder ein hexadezimaler Wert sein, der die drei RGB-Werte in 8-Bit (rot, grün, blau) festlegt; z. B. 0xFF0000 für Rot und 0x00FF00 für Grün.
		 <p>Zulässige Werte als String: flashx.textLayout.formats.BackgroundColor.TRANSPARENT, flashx.textLayout.formats.FormatValue.INHERIT und Einheiten von 0x0 bis 0xffffffff.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TRANSPARENT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 TextLayoutFormat: Betrag, um den die Grundlinie vom dominantBaseline-Wert verschoben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Betrag, um den die Grundlinie vom <codeph>dominantBaseline</codeph>-Wert verschoben wird. Einheiten in Pixeln oder einem Prozentwert für <codeph>fontSize</codeph> (geben Sie in diesem Fall einen Stringwert wie beispielsweise 140 % ein). Positive Werte verschieben die Zeile bei horizontalem Text nach oben (bei vertikalem nach rechts), negative Werte verschieben sie bei horizontalem Text nach unten (bei vertikalem nach links). 
		 <p>Zulässige Werte sind flashx.textLayout.formats.BaselineShift.SUPERSCRIPT, flashx.textLayout.formats.BaselineShift.SUBSCRIPT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 und 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0.0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 TextLayoutFormat: Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an. Zeilen werden entweder von oben nach unten (<codeph>BlockProgression.TB</codeph> für horizontalen Text) oder von rechts nach links (<codeph>BlockProgression.RL</codeph> für vertikalen Text) platziert.
		 <p>Zulässige Werte sind flashx.textLayout.formats.BlockProgression.RL, flashx.textLayout.formats.BlockProgression.TB, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert TB verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Position von Zeilenumbrüchen in einem mehrzeiligen Text an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Position von Zeilenumbrüchen in einem mehrzeiligen Text an. Mit der Einstellung <codeph>BreakOpportunity.AUTO</codeph> wird der Text normal umbrochen. Mit der Einstellung <codeph>BreakOpportunity.NONE</codeph> wird der Text <i>nicht</i> umbrochen, es sei denn, er wird zu lang und die Zeile kann an keiner anderen Position umbrochen werden. Legen Sie <codeph>BreakOpportunity.ANY</codeph> fest, damit die Zeile an einer beliebigen Stelle und nicht nur zwischen den Wörtern umbrochen werden kann. Legen Sie <codeph>BreakOpportunity.ALL</codeph> fest, damit jede typografische Gruppe auf einer einzelnen Zeile platziert wird (hilfreich bei Text in einem Pfad).
		 <p>Zulässige Werte sind flash.text.engine.BreakOpportunity.ALL, flash.text.engine.BreakOpportunity.ANY, flash.text.engine.BreakOpportunity.AUTO, flash.text.engine.BreakOpportunity.NONE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete Art des CFF-Hintings.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete Art des CFF-Hintings. Durch CFF-Hinting wird bestimmt, ob die Flash-Laufzeitumgebung erzwingt, dass starke horizontale Ausläufer in das Subpixel-Raster eingefügt werden oder nicht. Diese Eigenschaft gilt nur, wenn die <codeph>renderingMode</codeph>-Eigenschaft auf <codeph>RenderingMode.CFF</codeph> festgelegt und die Schriftart eingebettet ist (<codeph>fontLookup</codeph>-Eigenschaft auf <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt). Bei kleinen Bildschirmgrößen entsteht durch Hinting ein klar lesbarer Text.
		 <p>Zulässige Werte sind flash.text.engine.CFFHinting.NONE, flash.text.engine.CFFHinting.HORIZONTAL_STEM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert HORIZONTAL_STEM verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:color:get"><apiName>color</apiName><shortdesc>
		 TextLayoutFormat: Farbe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Farbe des Texts. Ein Hexadezimalwert, der drei 8-Bit-RGB-Werte (red, green, blue) angibt; beispielsweise 0xFF0000 für rot und 0x00FF00 für grün. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 TextLayoutFormat: Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Anzahl der Textspalten (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Die Spaltenzahl überschreibt die anderen Spalteneinstellungen. Als Wert ist eine ganze Zahl oder <codeph>FormatValue.AUTO</codeph> festgelegt, falls nicht angegeben. Wenn <codeph>columnCount</codeph> nicht festgelegt ist, wird <codeph>columnWidth</codeph> dazu verwendet, so viele Spalten zu erstellen, wie in den Container passen.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT sowie Ganzzahlen von 1 bis 50.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 TextLayoutFormat: Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt den Zwischenraum in Pixeln an, der zwischen den Spalten gelassen werden soll (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Wert ist eine Zahl
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 20 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:columnState:get"><apiName>columnState</apiName><shortdesc> 
		 Gibt ein ColumnState-Objekt zurück, das die Anzahl und Merkmale der Spalten im Container beschreibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.container:ColumnState</apiValueClassifier></apiValueDef><apiDesc> 
		 Gibt ein ColumnState-Objekt zurück, das die Anzahl und Merkmale der Spalten im Container beschreibt. Diese Werte werden beim Neuerstellen des Texts aktualisiert, entweder infolge von <codeph>IFlowComposer.compose()</codeph> oder <codeph>IFlowComposer.updateAllControllers()</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ColumnState"><linktext>ColumnState</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 TextLayoutFormat: Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Spaltenbreite in Pixeln (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Wenn Sie die Breite, aber nicht die Anzahl der Spalten festlegen, erstellt TextLayout so viele Spalten dieser Breite wie möglich, wobei die Containerbreite und die <codeph>columnGap</codeph>-Einstellungen zugrunde gelegt werden. Der restliche Raum befindet sich links nach der letzten Spalte. Der Wert ist eine Zahl.
		 <p>Zulässige Werte als String sind flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 8000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert AUTO an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:compositionHeight:get"><apiName>compositionHeight</apiName><shortdesc> 
		 Gibt die vertikale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 Gibt die vertikale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist. Der Wert wird in Pixeln angegeben.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController/setCompositionSize()"><linktext>setCompositionSize()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:compositionWidth:get"><apiName>compositionWidth</apiName><shortdesc> 
		 Gibt die horizontale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 Gibt die horizontale Ausdehnung zurück, die für den Text innerhalb des Containers zulässig ist. Der Wert wird in Pixeln angegeben.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController/setCompositionSize()"><linktext>setCompositionSize()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:computedFormat:get"><apiName>computedFormat</apiName><shortdesc> 
		 Gibt eine ITextLayoutFormat-Instanz mit den auf diesen Container angewendeten Attributen zurück, einschließlich der vom Stammelement übernommenen Attribute.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		 Gibt eine ITextLayoutFormat-Instanz mit den auf diesen Container angewendeten Attributen zurück, einschließlich der vom Stammelement übernommenen Attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController/rootElement"><linktext>rootElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:container:get"><apiName>container</apiName><shortdesc> 
		 Gibt das Containeranzeigeobjekt zurück, das die Textzeilen für diese ContainerController-Instanz enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc> 
		 Gibt das Containeranzeigeobjekt zurück, das die Textzeilen für diese ContainerController-Instanz enthält. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController/ContainerController()"><linktext>ContainerController()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:coreStyles:get"><apiName>coreStyles</apiName><shortdesc> Gibt die coreStyles für diesen ContainerController zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc> Gibt die <codeph>coreStyles</codeph> für diesen ContainerController zurück. Beachten Sie, dass die Get-Funktion eine Kopie des coreStyles-Wörtbuchs erstellt. Das coreStyles-Objekt bindet die Formate ein, die von TextLayoutFormat definiert sind. Das <codeph>coreStyles</codeph>-Objekt besteht aus einem Array von <i>stylename-value</i>-Paaren.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernart. Die <codeph>DigitCase.OLD_STYLE</codeph>-Einstellung stellt eine Annäherung an Kleinbuchstaben mit verschiedenen Oberlängen und Unterlängen dar. Die Ziffern haben proportionale Zwischenräume. Dieser Stil ist nur in ausgewählten Schriftarten verfügbar, am häufigsten in einem zusätzlichen oder Expert-Font. Die <codeph>DigitCase.LINING</codeph>-Einstellung hat eine All-Cap-Höhe und erscheint für die Darstellung in Tabellen im Allgemeinen in Monospace.<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitCase.DEFAULT, flash.text.engine.DigitCase.LINING, flash.text.engine.DigitCase.OLD_STYLE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernbreite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete Ziffernbreite. Dies kann <codeph>DigitWidth.PROPORTIONAL</codeph> sein, was optimal für einzelne Zahlen aussieht, oder <codeph>DigitWidth.TABULAR</codeph>, was optimal für Zahlen in Tabellen, Diagrammen und vertikalen Zeilen funktioniert.<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>Zulässige Werte sind flash.text.engine.DigitWidth.DEFAULT, flash.text.engine.DigitWidth.PROPORTIONAL, flash.text.engine.DigitWidth.TABULAR, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:direction:get"><apiName>direction</apiName><shortdesc>
		 TextLayoutFormat: Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die standardmäßige bidirektionale Einbettungsebene des Texts im Textblock an. Lesereihenfolge von links nach rechts wie in lateinischen Skripten oder von rechts nach links (Arabisch, Hebräisch). Diese Eigenschaft wirkt sich auf die Spaltenanordnung aus, wenn sie auf der Containerebene angewendet wird. Spalten können ebenso wie Text von links nach rechts oder von rechts nach links ausgerichtet sein. Im Folgenden sind einige Beispiele aufgeführt:<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.Direction.LTR, flashx.textLayout.formats.Direction.RTL, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert LTR verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 TextLayoutFormat: Gibt an, welche Elementgrundlinie an der alignmentBaseline ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt an, welche Elementgrundlinie an der <codeph>alignmentBaseline</codeph> ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen. Ein Wert von <codeph>TextBaseline.AUTO</codeph> wählt die dominierende Grundlinie basierend auf der <codeph>locale</codeph>-Eigenschaft des übergeordneten Absatzes. Für Japanisch und Chinesisch ist der ausgewählte Grundlinienwert <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Diese Grundlinienauswahl wird durch die Auswahl der Schriftart und der Schriftgröße bestimmt.<p><adobeimage alt="Grundlinien" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.FormatValue.AUTO, flash.text.engine.TextBaseline.ROMAN, flash.text.engine.TextBaseline.ASCENT, flash.text.engine.TextBaseline.DESCENT, flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP, flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER, flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Grundlinienposition der ersten Linie im Container an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Grundlinienposition der ersten Linie im Container an. Auf welche Grundlinie diese Eigenschaft verweist, hängt vom Gebietsschema auf Containerebene ab. Für Japanisch und Chinesisch ist es <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>, für alle anderen Sprachen ist es <codeph>TextBaseline.ROMAN</codeph>. Der Offset vom oberen Versatz (oder dem rechten Einzug, wenn für <codeph>blockProgression</codeph> RL eingestellt wurde) des Containers zur Grundlinie der ersten Zeile kann <codeph>BaselineOffset.ASCENT</codeph>, d. h. gleich der Oberlänge der Zeile 
(<codeph>BaselineOffset.LINE_HEIGHT</codeph>) sein und damit der Höhe dieser ersten Zeile entsprechen oder eine beliebige Zahl mit einem Festwert für einen absoluten Abstand sein. <codeph>BaselineOffset.AUTO</codeph> richtet die Oberlänge der Zeile am oberen Versatz des Containers aus.<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>Zulässige Werte: flashx.textLayout.formats.BaselineOffset.AUTO, flashx.textLayout.formats.BaselineOffset.ASCENT, flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT, flashx.textLayout.formats.FormatValue.INHERIT und Zahlen von 0 bis 1000.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:flowComposer:get"><apiName>flowComposer</apiName><shortdesc> 
		 Gibt das Flow-Composer-Objekt zurück, das Text in dem von diesem Controller verwalteten Container erstellt und hervorhebt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.compose:IFlowComposer</apiValueClassifier></apiValueDef><apiDesc> 
		 Gibt das Flow-Composer-Objekt zurück, das Text in dem von diesem Controller verwalteten Container erstellt und hervorhebt. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>flashx.textLayout.compose.IFlowComposer</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		 TextLayoutFormat: Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartnamen. Die Flash-Laufzeitumgebung rendert das Element mit der ersten verfügbaren Schriftart in der Liste. Beispiel: Bei Arial, Helvetica und _sans sucht der Player nach Arial, dann nach Helvetica (wenn Arial nicht gefunden wurde) und anschließend nach _sans.
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert Arial verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 TextLayoutFormat: Zu verwendende Schriftartsuche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Zu verwendende Schriftartsuche. Durch Angeben von <codeph> FontLookup.DEVICE</codeph> werden die auf dem System, das die SWF-Datei ausführt, installierten Schriftarten verwendet. Geräteschriftarten führen zu einer kleineren Filmgröße, der Text wird jedoch auf verschiedenen Systemen und Plattformen nicht unbedingt auf dieselbe Weise wiedergegeben. Durch Festlegen von <codeph>FontLookup.EMBEDDED_CFF</codeph> werden Schriftkonturen verwendet, die in der veröffentlichten SWF-Datei eingebettet sind. Eingebettete Schriftarten erhöhen die Größe der SWF-Datei (manchmal erheblich), der Text wird jedoch konsistent in der gewählten Schriftart angezeigt.
		 <p>Zulässige Werte sind flash.text.engine.FontLookup.DEVICE, flash.text.engine.FontLookup.EMBEDDED_CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEVICE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 TextLayoutFormat: Die Textgröße in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die Textgröße in Pixeln.
		 <p>Zulässige Werte sind Zahlen von 1 bis 720 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 12 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 TextLayoutFormat: Stil des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Stil des Texts. Kann <codeph>FontPosture.NORMAL</codeph> für einfachen Text oder <codeph>FontPosture.ITALIC</codeph> für Kursivschrift sein. Diese Eigenschaft gilt nur für Geräteschriftarten (<codeph>fontLookup</codeph>-Eigenschaft wird festgelegt auf flash.text.engine.FontLookup.DEVICE).
		 <p>Zulässige Werte sind flash.text.engine.FontPosture.NORMAL, flash.text.engine.FontPosture.ITALIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 TextLayoutFormat: Schriftartstärke.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Schriftartstärke. Kann <codeph>FontWeight.NORMAL</codeph> für normalen Text oder <codeph>FontWeight.BOLD</codeph> sein. Wird nur auf Geräteschriftarten angewendet (für <codeph>fontLookup</codeph>-Eigenschaft ist flash.text.engine.FontLookup.DEVICE festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.FontWeight.NORMAL, flash.text.engine.FontWeight.BOLD, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NORMAL verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:format:get"><apiName>format</apiName><shortdesc> 
		 Speichert das ITextLayoutFormat-Objekt, das die Attribute für diesen Container enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		 Speichert das ITextLayoutFormat-Objekt, das die Attribute für diesen Container enthält. Der Controller übernimmt die Containereigenschaften vom TextFlow, dessen Teil er ist. Aufgrund dieser Eigenschaft können verschiedene Controller in demselben Textfluss beispielsweise unterschiedliche Spalteneinstellungen oder unterschiedlichen Abstand aufweisen.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:horizontalScrollPolicy:get"><apiName>horizontalScrollPolicy</apiName><shortdesc> 
		 Gibt die horizontale Bildlaufrichtlinie an, die Sie festlegen können, indem Sie eine der Konstanten der ScrollPolicy-Klasse zuweisen: ON, OFF oder AUTO.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 Gibt die horizontale Bildlaufrichtlinie an, die Sie festlegen können, indem Sie eine der Konstanten der ScrollPolicy-Klasse zuweisen: ON, OFF oder AUTO.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ScrollPolicy"><linktext>ScrollPolicy</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc> Gibt die aktuelle horizontale Bildlaufposition auf der Bühne an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Gibt die aktuelle horizontale Bildlaufposition auf der Bühne an. Der Wert gibt die Anzahl der Pixel von links an.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:interactionManager:get"><apiName>interactionManager</apiName><shortdesc conref="flashx.textLayout.elements.TextFlow#interactionManager"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:ISelectionManager</apiValueClassifier></apiValueDef><apiDesc conref="flashx.textLayout.elements.TextFlow#interactionManager"> 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/interactionManager"><linktext>flashx.textLayout.elements.TextFlow.interactionManager</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 TextLayoutFormat: Regel zum Ausrichten von Text in einem Absatz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Regel zum Ausrichten von Text in einem Absatz. Standardwert ist <codeph>FormatValue.AUTO</codeph>, durch den der Text anhand der <codeph>locale</codeph>-Eigenschaft des Absatzes ausgerichtet wird. Bei allen Sprachen (mit Ausnahme von Japanisch und Chinesisch) wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustificationRule.SPACE</codeph>, wodurch zusätzlicher Leerraum zu den Leerzeichen hinzugefügt wird. Bei Japanisch und Chinesisch wird <codeph>FormatValue.AUTO</codeph> zu <codeph>JustficationRule.EAST_ASIAN</codeph>. Teilweise wird durch die Ausrichtung der Abstand der Interpunktion geändert. Bei Text mit lateinischen Buchstaben nehmen sowohl Komma als auch japanische Punkte die volle Zeichenbreite ein, bei Text mit ostasiatischen Zeichen nur die halbe Zeichenbreite. Bei ostasiatischem Text ist außerdem der Abstand zwischen aufeinanderfolgdenden Satzzeichen geringer, da dies den üblichen typographischen Konventionen in ostasiatischen Sprachen entspricht. Beachten Sie außerdem im folgenden Beispiel den Zeilenabstand, der auf die zweite Zeile der Absätze angewendet wird. In der ostasiatischen Version werden die letzten zwei Zeilen nach links verschoben. In der lateinischen Version werden die zweite und folgende Zeilen nach links verschoben.<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.JustificationRule.EAST_ASIAN, flashx.textLayout.formats.JustificationRule.SPACE, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 TextLayoutFormat: Der Stil, der zum Ausrichten des Absatzes verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Der Stil, der zum Ausrichten des Absatzes verwendet wird. Nur zusammen mit einer <codeph>justificationRule</codeph>-Einstellung von <codeph>JustificationRule.EAST_ASIAN</codeph> verwendet. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird in <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> für alle Gebietsschemata aufgelöst. Die von der JustificationStyle-Klasse definierten Konstanten legen die Optionen für die Verarbeitung von Kinsoku-Zeichen fest. Diese japanischen Zeichen können weder am Anfang noch am Ende einer Zeile stehen. Legen Sie <codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> fest, wenn die Abstände im Text größer sein sollen. Wenn Sie das gleiche Verhalten wie mit <codeph>justificationRule</codeph> auch mit <codeph>JustificationRule.SPACE</codeph> erzielen möchten, verwenden Sie <codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph>.
		 <p>Zulässige Werte sind flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU, flash.text.engine.JustificationStyle.PUSH_OUT_ONLY, flashx.textLayout.formats.FormatValue.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert flashx.textLayout.formats.FormatValue.AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:kerning:get"><apiName>kerning</apiName><shortdesc>
		 TextLayoutFormat: Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Beim Kerning werden die Pixel zwischen bestimmten Zeichenpaaren angepasst, um die Lesbarkeit zu verbessern. Kerning wird für alle Schriftarten mit Kerningtabellen unterstützt.
		 <p>Zulässige Werte sind flash.text.engine.Kerning.ON, flash.text.engine.Kerning.OFF, flash.text.engine.Kerning.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 TextLayoutFormat: Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt das Zeilenabstandsmodell an, das eine Kombination von Zeilenabstandsbasis und Zeilenabstandsrichtung ist. Die Leerraumbasis ist die Grundlinie, auf die sich die <codeph>lineHeight</codeph>-Eigenschaft bezieht. Die Zeilenabstandsrichtung bestimmt, ob die <codeph>lineHeight</codeph>-Eigenschaft auf den Abstand der Grundlinie einer Zeile zu derjenigen der vorherigen oder nachfolgenden Zeile verweist. Der Standardwert <codeph>FormatValue.AUTO</codeph> wird basierend auf der <codeph>locale</codeph>-Eigenschaft des Absatzes aufgelöst. Für Japanisch und Chinesisch ist es <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>, für alle anderen Sprachen ist es <codeph>LeadingModel.ROMAN_UP</codeph>.<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.LeadingModel.ROMAN_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN, flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN, flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD, flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP, flashx.textLayout.formats.LeadingModel.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 TextLayoutFormat: Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können. Die Ligaturen, die für jede dieser Einstellungen angezeigt werden, sind von der Schriftart abhängig. Eine Ligatur tritt dann auf, wenn zwei oder mehr Buchstabenformen zu einer Glyphe zusammengefasst sind. Ligaturen ersetzen in der Regel aufeinanderfolgende Zeichen, die gemeinsame Komponenten aufweisen, beispielsweise die Buchstabenpaare fi, fl und ae. Sie werden sowohl für lateinische als auch nicht-lateinische Zeichensätze verwendet. Die Ligaturen, die von den Werten der LigatureLevel-Klasse aktiviert werden (<codeph>MINIMUM</codeph>, <codeph>COMMON</codeph>, <codeph>UNCOMMON</codeph> und <codeph>EXOTIC</codeph>) sind additiv. Jeder Wert aktiviert einen neuen Satz von Ligaturen, beinhaltet jedoch auch die der vorhergehenden Typen.<p><b>Hinweis:</b> Bei der Arbeit mit arabischen oder syrischen Schriftarten muss <codeph>ligatureLevel</codeph> als „MINIMUM“ oder höher festgelegt werden.</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>Zulässige Werte sind flash.text.engine.LigatureLevel.MINIMUM, flash.text.engine.LigatureLevel.COMMON, flash.text.engine.LigatureLevel.UNCOMMON, flash.text.engine.LigatureLevel.EXOTIC, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COMMON verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 TextLayoutFormat: Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Steuert Zeilenumbruch im Container (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Text im Container kann an die Breite des Containers angepasst werden (<codeph>LineBreak.TO_FIT</codeph>) bzw. kann so festgelegt werden, dass nur bei expliziten Zeilenendschaltungen oder Zeilenvorschüben der Umbruch erfolgt (<codeph>LineBreak.EXPLICIT</codeph>).
		 <p>Zulässige Werte sind flashx.textLayout.formats.LineBreak.EXPLICIT, flashx.textLayout.formats.LineBreak.TO_FIT, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TO_FIT an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 TextLayoutFormat: Steuerelemente für den Zeilenabstand des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Steuerelemente für den Zeilenabstand des Texts. Der Abstand von der Grundlinie der vorherigen oder nächsten Zeile (auf der Basis des <codeph>LeadingModel</codeph>) zur Grundlinie der aktuellen Zeile ist mit dem maximalen zusätzlichen Leerraum identisch, der auf jedes Zeichen in der Zeile angewendet wird. Dies ist entweder eine Zahl oder ein Prozentsatz. Geben Sie beim Festlegen als Prozentangabe einen Stringwert wie 140% ein.<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>Zulässige Werte als Zahlen liegen zwischen -720 und 720.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 120 % verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 TextLayoutFormat: Wenn „true“, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Wenn <codeph>true</codeph>, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.
		 <p>Zulässige Werte sind „true“, „false“ und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „false“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:locale:get"><apiName>locale</apiName><shortdesc>
		 TextLayoutFormat: Das Gebietsschema des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Das Gebietsschema des Texts. Steuert Buchstabentransformationen und -formung. Standardmäßige Gebietsschemabezeichner werden verwendet, wie in Unicode Technical Standard #35 beschrieben. Beispiel: „en“, „en_US“ und „en-US“ stehen für Englisch, „ja“ für Japanisch. 
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „en“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 TextLayoutFormat: Unterer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Unterer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem unteren Rand des Containers und dem Text. Der Wert ist eine Zahl. <p> Bei horizontalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum unten im Container angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 TextLayoutFormat: Linker Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Linker Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem linken Rand des Containers und dem Text. Der Wert ist eine Zahl.<p> Bei vertikalem Text in bildlauffähigen Containern mit mehreren Spalten wird in der ersten und den folgenden Spalten der Textabstand als Leerraum am Ende des Containers angezeigt. Bei der letzten Spalte müssen Sie möglicherweise einen Bildlauf durchführen, um den Abstand zu sehen, wenn der gesamte Text nicht in die Spalte passt.</p>
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 TextLayoutFormat: Rechter Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Rechter Einzug in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem rechten Rand des Containers und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 TextLayoutFormat: Oberer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Oberer Versatz in Pixeln (übernimmt den Standardwert, falls während der Kaskade nicht definiert). Leerraum zwischen dem oberen Rand des Containers und dem Text. Der Wert ist eine Zahl.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert 0 an.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des unteren Absatzrands in Pixeln angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des unteren Absatzrands in Pixeln angibt. Dieser Wert gilt für den rechten Rand bei von links nach rechts verlaufendem Text und für den linken Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Leerraum nach dem Absatz (in Pixeln) festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Leerraum nach dem Absatz (in Pixeln) festlegt. Wird zusammen mit <codeph>paragraphSpaceBefore</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Wert für den Leeraum vor dem Absatz in Pixeln angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Wert für den Leeraum vor dem Absatz in Pixeln angibt. Wird zusammen mit <codeph>paragraphSpaceAfter</codeph> ausgeblendet.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des oberen Absatzrands angibt in Pixeln angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die den Versatz des oberen Absatzrands angibt in Pixeln angibt. Dieser Wert gilt für den linken Rand bei von links nach rechts verlaufendem Text und für den rechten Rand bei von rechts nach links verlaufendem Text. 
		 <p>Zulässige Werte sind Zahlen von 0 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 TextLayoutFormat: Der für diesen Text verwendete Wiedergabemodus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Der für diesen Text verwendete Wiedergabemodus. Wird nur auf eingebettete Schriftarten angewendet (für die <codeph>fontLookup</codeph>-Eigenschaft ist <codeph>FontLookup.EMBEDDED_CFF</codeph> festgelegt).
		 <p>Zulässige Werte sind flash.text.engine.RenderingMode.NORMAL, flash.text.engine.RenderingMode.CFF, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert CFF verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:rootElement:get"><apiName>rootElement</apiName><shortdesc> 
		 Gibt das Stammelement zurück, das im Container angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiValueClassifier></apiValueDef><apiDesc> 
		 Gibt das Stammelement zurück, das im Container angezeigt wird. Das Stammelement könnte zum Beispiel eine DivElement- oder TextFlow-Instanz sein.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#ContainerFormattedElement"><linktext>flashx.textLayout.elements.ContainerFormattedElement</linktext></link><link href="flashx.textLayout.elements.xml#DivElement"><linktext>flashx.textLayout.elements.DivElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>flashx.textLayout.elements.TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 TextLayoutFormat: Gibt die Tabulatoren an, die dem Absatz zugewiesen sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt die Tabulatoren an, die dem Absatz zugewiesen sind. Set-Funktionen können ein Array mit flashx.textLayout.formats.TabStopFormat, eine zusammengezogene Stringdarstellung, nicht definierte Werte oder <codeph>FormatValue.INHERIT</codeph> verarbeiten. Die zusammengezogene Stringdarstellung wird immer in ein Array mit flashx.textLayout.formats.TabStopFormat konvertiert. <p>Das stringbasierte Format ist eine Liste von Tabulatorpositionen, wobei die einzelnen Tabulatoren durch eine oder mehrere Leerstellen getrennt sind.</p><p>Ein Tabulator hat die folgende Form: &lt;Ausrichtungstyp>&lt;Ausrichtungsposition>|&lt;Ausrichtungs-Token>.</p><p>Der Ausrichtungstyp ist ein einzelnes Zeichen und kann S, E, C oder D sein (oder entsprechend mit Kleinbuchstaben sein). S oder s für Start, E oder e für End, C oder c für Center und D oder d für Decimal. Der Ausrichtungstyp ist optional und ist standardmäßig S, wenn er nicht festgelegt wurde.</p><p>Die Ausrichtungsposition ist eine Zahl und wird entsprechend der FXG-Spezifikation für Zahlen (dezimal oder wissenschaftliche Schreibweise) angegeben. Die Ausrichtungsposition ist erforderlich.</p><p>Mithilfe des vertikalen Balkens wird die Ausrichtungsposition vom Ausrichtungs-Token getrennt. Dieser Balken sollte nur vorhanden sein, wenn das Ausrichtungs-Token vorhanden ist.</p><p> Das Ausrichtungs-Token ist optional, wenn der Ausrichtungstyp D ist, nicht jedoch für die anderen Ausrichtungstypen. Das Ausrichtungs-Token kann eine beliebige Zeichensequenz sein, die durch das Leerzeichen beendet wird, das den Tabulator abschließt (für den letzten Tabulator ist das abschließenden Leerzeichen optional; das Ende des Ausrichtungs-Tokens ist implizit). Ein Leerzeichen ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm der umgekehrte Schrägstrich (\) als Escape-Zeichen vorangeht. Ein umgekehrter Schrägstrich ist möglicherweise Teil eines Ausrichtungs-Tokens, wenn ihm ein weiterer umgekehrter Schrägstrich (\) als Escape-Zeichen vorangeht. Wenn der Ausrichtungstyp D ist und kein Ausrichtungstoken angegeben ist, weist er den Standardwert „null“ auf.</p><p>Werden keine Tabulatoren festgelegt, wird die Tabulatortaste standardmäßig am Ende der Zeile ausgelöst.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert „null“ verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 TextLayoutFormat: Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Ausrichtung der letzten (oder einzigen) Zeile im Absatz relativ zum Container im ausgerichteten Text. Wenn für <codeph>textAlign</codeph> die Einstellung <codeph>TextAlign.JUSTIFY</codeph> festgelegt ist, gibt <codeph>textAlignLast</codeph> an, wie die letzte Zeile (oder einzige Zeile, wenn es sich dabei um einen Zeilenblock handelt) ausgerichtet wird. Werte sind gleich <codeph>textAlign</codeph>.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 TextLayoutFormat: Ausrichtung der Zeilen im Absatz relativ zum Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Ausrichtung der Zeilen im Absatz relativ zum Container. <codeph>TextAlign.LEFT</codeph> richtet Zeilen am linken Rand des Containers aus. <codeph>TextAlign.RIGHT</codeph> führt Ausrichtung am rechten Rand aus. <codeph>TextAlign.CENTER</codeph> richtet die Zeile in gleichen Abständen vom linken und rechten Rand aus. <codeph>TextAlign.JUSTIFY</codeph> richtet die Zeilen so aus, dass sie den Raum ausfüllen. <codeph>TextAlign.START</codeph> entspricht der Einstellung von links bei von links nach rechts verlaufendem Text oder von rechts bei von rechts nach links verlaufendem Text. <codeph>TextAlign.END</codeph> entspricht der Einstellung von rechts bei von links nach rechts verlaufendem Text oder von links bei von rechts nach links verlaufendem Text.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextAlign.LEFT, flashx.textLayout.formats.TextAlign.RIGHT, flashx.textLayout.formats.TextAlign.CENTER, flashx.textLayout.formats.TextAlign.JUSTIFY, flashx.textLayout.formats.TextAlign.START, flashx.textLayout.formats.TextAlign.END, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert START verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 TextLayoutFormat: Wert für Alpha (Transparenz) des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Wert für Alpha (Transparenz) des Texts. Der Wert 0 steht für vollständige Transparenz und der Wert 1 für vollständige Undurchsichtigkeit. Anzeigeobjekte mit einem <codeph>textAlpha</codeph>-Wert von 0 sind aktiv, auch wenn sie nicht sichtbar sind.
		 <p>Zulässige Werte sind Zahlen von 0 bis 1 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 1 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 TextLayoutFormat: Auszeichnung im Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Auszeichnung im Text. Zum Anwenden der Unterstreichung verwenden; Standardeinstellung ist „keine“.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextDecoration.NONE, flashx.textLayout.formats.TextDecoration.UNDERLINE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert NONE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textFlow:get"><apiName>textFlow</apiName><shortdesc> 
		 Gibt das TextFlow-Objekt zurück, dessen Inhalt im Container angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc> 
		 Gibt das TextFlow-Objekt zurück, dessen Inhalt im Container angezeigt wird. Entweder sind die <codeph>textFlow</codeph>- und <codeph>rootElement</codeph>-Werte identisch oder es handelt sich um das TextFlow-Objekt des Stammelements. Beispiel: Wenn das Stammelement des Containers ein DivElement ist, würde sich als Wert das TextFlow-Objekt ergeben, zu dem das DivElement gehört.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#/TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 TextLayoutFormat: Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Eine Zahl, die die Einrückung der ersten Zeile des Absatzes in Pixeln festlegt. Durch eine negative Einrückung wird die Zeile an den Rand und möglicherweise aus dem Container verschoben.
		 <p>Zulässige Werte sind Zahlen von -1000 bis 1000 und flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 TextLayoutFormat: Gibt Optionen für die Ausrichtung des Texts an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Gibt Optionen für die Ausrichtung des Texts an. Der Standardwert ist <codeph>TextJustify.INTER_WORD</codeph>, d. h., bei der Ausrichtung wird zusätzlicher Leerraum den Leerzeichen hinzugefügt. <codeph>TextJustify.DISTRIBUTE</codeph> fügt den Leerzeichen und zwischen einzelnen Buchstaben zusätzlichen Raum hinzu. Wird nur zusammen mit einem <codeph>justificationRule</codeph>-Wert von <codeph>JustificationRule.SPACE</codeph> verwendet.
		 <p>Zulässige Werte sind flashx.textLayout.formats.TextJustify.INTER_WORD, flashx.textLayout.formats.TextJustify.DISTRIBUTE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert INTER_WORD verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textLength:get"><apiName>textLength</apiName><shortdesc> Gibt die Gesamtzahl der Zeichen im Container zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Gibt die Gesamtzahl der Zeichen im Container zurück. Dabei kann Text enthalten sein, der aktuell nicht in der Ansicht ist, wenn im Container ein Bildlauf durchgeführt werden kann. Dieser Wert wird beim Erstellen des Texts aktualisiert (wenn die <codeph>compose()</codeph>- oder <codeph>updateAllControllers()</codeph>-Methoden von IFlowComposer aufgerufen werden).
		 
	 	 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>flashx.textLayout.compose.IFlowComposer</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 TextLayoutFormat: Bestimmt die Gradzahl zum Drehen dieses Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Bestimmt die Gradzahl zum Drehen dieses Texts.
		 <p>Zulässige Werte: flash.text.engine.TextRotation.ROTATE_0, flash.text.engine.TextRotation.ROTATE_180, flash.text.engine.TextRotation.ROTATE_270, flash.text.engine.TextRotation.ROTATE_90, flash.text.engine.TextRotation.AUTO, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert AUTO verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, auf die linke Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent der <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, auf die linke Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingLeft</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent der Schriftgröße, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Zahl in Pixeln (oder Prozent von <codeph>fontSize</codeph>, z. B. 120 %), die die Laufweite (manuelles Kerning) angibt, die auf die rechte Seite jedes Zeichens angewendet werden soll. Wenn Kerning aktiviert ist, wird der <codeph>trackingRight</codeph>-Wert den Werten der Kerning-Tabelle für die Schriftart hinzugefügt. Wenn Kerning deaktiviert ist, wird der <codeph>trackingRight</codeph>-Wert als manueller Kerning-Wert verwendet. Unterstützt sowohl positive als auch negative Werte. 
		 <p>Zulässige Werte für Zahlen liegen zwischen -1000 und 1000.</p>
		 <p>Zulässige Werte für Prozentwerte liegen zwischen -1000 % und 1000 %.</p>
		 <p>Zu den zulässigen Werten gehört flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert 0 verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 TextLayoutFormat: Die für diesen Text verwendete typografische Buchstabenart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Die für diesen Text verwendete typografische Buchstabenart. Im Folgenden sind einige Beispiele dafür aufgeführt:<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>Zulässige Werte sind flashx.textLayout.formats.TLFTypographicCase.DEFAULT, flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS, flashx.textLayout.formats.TLFTypographicCase.UPPERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE, flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert DEFAULT verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:userStyles:get"><apiName>userStyles</apiName><shortdesc> 
		 Das userStyles-Objekt für eine ContainerController-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc> 
		 Das <codeph>userStyles</codeph>-Objekt für eine ContainerController-Instanz. Die Get-Funktion erstellt eine Kopie des <codeph>userStyles</codeph>-Objekts, das ein Array von <i>stylename-value</i>-Paaren ist.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 TextLayoutFormat: Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Vertikale Ausrichtung oder Blocksatz (übernimmt Standardwert, wenn während der Kaskade nicht definiert). Bestimmt, wie TextFlow-Elemente innerhalb des Containers ausgerichtet werden.
		 <p>Zulässige Werte sind flashx.textLayout.formats.VerticalAlign.TOP, flashx.textLayout.formats.VerticalAlign.MIDDLE, flashx.textLayout.formats.VerticalAlign.BOTTOM, flashx.textLayout.formats.VerticalAlign.JUSTIFY, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn diese Eigenschaft während einer Kaskade nicht definiert ist, nimmt sie den Wert TOP an.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:verticalScrollPolicy:get"><apiName>verticalScrollPolicy</apiName><shortdesc> Gibt die vertikale Bildlaufrichtlinie an, die Sie festlegen können, indem Sie eine der Konstanten der ScrollPolicy-Klasse zuweisen: ON, OFF oder AUTO.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> Gibt die vertikale Bildlaufrichtlinie an, die Sie festlegen können, indem Sie eine der Konstanten der ScrollPolicy-Klasse zuweisen: ON, OFF oder AUTO.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ScrollPolicy"><linktext>ScrollPolicy</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:verticalScrollPosition:get"><apiName>verticalScrollPosition</apiName><shortdesc> Gibt die aktuelle vertikale Bildlaufposition auf der Bühne an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> Gibt die aktuelle vertikale Bildlaufposition auf der Bühne an. Der Wert gibt die Anzahl der Pixel oben an.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.container:ContainerController:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 TextLayoutFormat: Entfernt Leerraum oder behält ihn bei, wenn Text in einem TextFlow importiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>wenn der festgelegte Wert nicht innerhalb des gültigen Bereichs für diese Eigenschaft liegt
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat: Entfernt Leerraum oder behält ihn bei, wenn Text in einem TextFlow importiert wird. <codeph>WhiteSpaceCollapse.PRESERVE</codeph> behält alle Whitespace-Zeichen bei. <codeph>WhiteSpaceCollapse.COLLAPSE</codeph> entfernt Zeichen für neue Zeilen, Tabulatoren sowie Leerzeichen am Anfang und Ende bei einem importierten Textblock. Zeilenumbruch-Tags () und Unicode-Zeilentrennzeichen werden beibehalten.
		 <p>Zulässige Werte sind flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE, flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE, flashx.textLayout.formats.FormatValue.INHERIT.</p>
		 <p>Standardwert ist nicht definiert, d. h. wurde nicht festgelegt.</p>
		 <p>Wenn die Eigenschaft während einer Kaskade nicht definiert ist, wird der Wert aus einem übergeordneten Element übernommen. Wenn bei keinem der übergeordneten Elemente diese Eigenschaft festgelegt ist, wird der Wert COLLAPSE verwendet.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.container:ContainerController:containerControllerInitialFormat:set"><apiName>containerControllerInitialFormat</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>