<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.events"><apiName>flashx.textLayout.events</apiName><apiDetail/><apiClassifier id="flashx.textLayout.events:FlowElementMouseEvent"><apiName>FlowElementMouseEvent</apiName><shortdesc> Un objet LinkElement distribue cet événement lorsqu’il détecte une activité de la souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> Un objet LinkElement distribue cet événement lorsqu’il détecte une activité de la souris. Text Layout Framework contient cette version spéciale des événements de souris, car ces derniers sont généralement indésirables lorsqu’un élément de lien est intégré dans un flux de texte modifiable.  
	 <p>Vous pouvez ajouter un écouteur d’événement à un objet LinkElement pour écouter ce type d’événement. Si vous choisissez d’annuler l’événement en appelant la méthode <codeph>Event.preventDefault()</codeph>, le comportement par défaut associé à l’événement ne se produit pas.
	 </p>
	 <p>Si vous choisissez de ne pas ajouter d’écouteur d’événement à l’objet LinkElement ou si votre fonction d’écouteur d’événement n’annule pas le comportement, l’événement est redistribué, mais cette fois par l’occurrence Textflow associée de l’objet LinkElement, et non par l’objet LinkElement lui-même. Cela fournit une deuxième opportunité d’écouter cet événement avec un écouteur d’événement associé à l’objet TextFlow.  
	 </p>
	 <p> Les événements FlowElementMouseEvent ne sont distribués que lorsque le texte ne peut pas être modifié ou lorsque la touche Ctrl est activée en simultané avec une action de la souris. </p>
	 <p>
	 Les six types d’événements suivants ne sont distribués que lorsque le texte ne peut pas être modifié ou lorsque la touche Ctrl est activée : 
	 <ul>
	   <li><codeph>MouseEvent.CLICK</codeph></li>
	   <li><codeph>MouseEvent.MOUSE_DOWN</codeph></li>
	   <li><codeph>MouseEvent.MOUSE_OUT</codeph></li>
	   <li><codeph>MouseEvent.MOUSE_UP</codeph></li>
	   <li><codeph>MouseEvent.ROLL_OVER</codeph></li>
	   <li><codeph>MouseEvent.ROLL_OUT</codeph></li>
	 </ul>
	 </p>
	 
	 </apiDesc><example conref="examples\FlowElementMouseEvent_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>flashx.textLayout.elements.LinkElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.events:FlowElementMouseEvent:FlowElementMouseEvent"><apiName>FlowElementMouseEvent</apiName><shortdesc> 
		 Crée un objet événement contenant des informations sur l’activité de la souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Il existe six types : <codeph>MouseEvent.CLICK</codeph> ; <codeph>MouseEvent.MOUSE_DOWN</codeph> ; <codeph>MouseEvent.MOUSE_OUT</codeph> ; <codeph>MouseEvent.MOUSE_UP</codeph> ; <codeph>MouseEvent.ROLL_OVER</codeph> et <codeph>MouseEvent.ROLL_OUT</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet événement prend part à la phase de propagation vers le haut (bubbling) du flux d’événements. Les objets FlowElementMouseEvent ne se propagent vers le haut.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Détermine si l’objet d’événement peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>cancelable</codeph> héritée.  Les objets FlowElementMouseEvent peuvent être annulés. Vous pouvez annuler le comportement par défaut associé à cet événement en appelant la méthode <codeph>preventDefault()</codeph> dans votre écouteur d’événement.
		 </apiDesc></apiParam><apiParam><apiItemName>flowElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiData>null</apiData><apiDesc>Occurrence de l’objet FlowElement, généralement un objet LinkElement, associée à cet événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>flowElement</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>originalEvent</apiItemName><apiType value="flash.events:MouseEvent"/><apiData>null</apiData><apiDesc>Evénement de souris d’origine qui s’est produit dans l’objet flowElement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>originalEvent</codeph>.

		 </apiDesc></apiParam></apiConstructorDef><apiDesc> 
		 Crée un objet événement contenant des informations sur l’activité de la souris. Les objets événements sont transmis en tant que paramètres aux écouteurs d’événement. Utilisez le constructeur si vous prévoyez de distribuer manuellement un événement. Il n’est pas nécessaire d’utiliser le constructeur pour écouter les objets FlowElementMouseEvent générés par un objet LinkElement. 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:CLICK"><apiName>CLICK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>click</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:MOUSE_DOWN"><apiName>MOUSE_DOWN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDown</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:MOUSE_MOVE"><apiName>MOUSE_MOVE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseMove</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:MOUSE_UP"><apiName>MOUSE_UP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseUp</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:ROLL_OUT"><apiName>ROLL_OUT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rollOut</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:ROLL_OVER"><apiName>ROLL_OVER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rollOver</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:flowElement:get"><apiName>flowElement</apiName><shortdesc> 
		 Elément LinkElement qui a distribué l’événement. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:FlowElement</apiValueClassifier></apiValueDef><apiDesc> 
		 Elément LinkElement qui a distribué l’événement. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>flashx.textLayout.elements.LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.events:FlowElementMouseEvent:originalEvent:get"><apiName>originalEvent</apiName><shortdesc> 
		 Evénement de souris d’origine généré par l’activité de la souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.events:MouseEvent"/></apiValueDef><apiDesc> 
		 Evénement de souris d’origine généré par l’activité de la souris. Cette propriété peut contenir l’une des valeurs suivantes :
		 <ul>
		   <li><codeph>MouseEvent.CLICK</codeph></li>
		   <li><codeph>MouseEvent.MOUSE_DOWN</codeph></li>
		   <li><codeph>MouseEvent.MOUSE_OUT</codeph></li>
		   <li><codeph>MouseEvent.MOUSE_UP</codeph></li>
		   <li><codeph>MouseEvent.MOUSE_OVER</codeph></li>
		   <li><codeph>MouseEvent.MOUSE_OUT</codeph></li>
		 </ul>
		 <p>
		 Dans la plupart des cas, l’événement d’origine correspond à l’événement que l’objet LinkElement distribue. Les événements correspondent aux événements <codeph>click</codeph>, <codeph>mouseDown</codeph>, <codeph>mouseOut</codeph> et <codeph>mouseOver</codeph>. Il existe deux cas, cependant, où l’événement d’origine est converti par l’objet LinkElement en événement associé. Si un objet LinkElement détecte un événement <codeph>mouseOver</codeph>, il distribue un événement <codeph>rollOver</codeph>. De même, si un objet LinkElement détecte un événement <codeph>mouseOut</codeph>, il distribue un événement <codeph>rollOut</codeph>.
		 </p>
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.MouseEvent.xml"><linktext>flash.events.MouseEvent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:CompositionCompleteEvent"><apiName>CompositionCompleteEvent</apiName><shortdesc> 
	 Une occurrence TextFlow distribue cet événement une fois l’opération de composition terminée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Une occurrence TextFlow distribue cet événement une fois l’opération de composition terminée. Chaque conteneur texte a deux états : composition et affichage. Cet événement vous avertit lorsque la phase de composition est terminée. Cela vous permet d’apporter les modifications nécessaires et appropriées au conteneur avant d’afficher le texte. Par exemple, vous pouvez utiliser cet événement pour ajouter la mise en surbrillance de certains mots ou caractères dans l’enchaînement de texte avant l’affichage de ce dernier. 
	 
	 <p>Les trois principales méthodes qui distribuent cet événement sont <codeph>composer()</codeph>, <codeph>updateToController()</codeph> et <codeph>updateAllControllers()</codeph>. Ces trois méthodes font partie de la classe StandardFlowComposer. </p>
	 
	 <p><b>Remarque : </b>si l’événement est distribué par la méthode <codeph>updateAllControllers()</codeph>, n’appelez pas <codeph>updateAllControllers()</codeph> à nouveau dans votre fonction de gestionnaire d’événement. Un tel appel est récursif, car la méthode <codeph>updateAllControllers()</codeph> exécute la composition et les étapes d’affichage. La méthode <codeph>updateAllControllers()</codeph> distribue cet événement à l’issue de la composition, mais avant l’exécution de l’étape d’affichage. Le même raisonnement s’applique à la méthode <codeph>updateToController()</codeph>. 
	 </p>
	 
	 </apiDesc><example conref="examples\CompositionCompleteEvent_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>flashx.textLayout.elements.TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.events:CompositionCompleteEvent:CompositionCompleteEvent"><apiName>CompositionCompleteEvent</apiName><shortdesc> Constructeur
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement - Utilisez la propriété statique COMPOSITION_COMPLETE.
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si un événement peut se propager vers le haut (bubbling). Cet événement ne se propage pas vers le haut. 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si le comportement associé à l’événement peut être évité. Cet événement ne peut pas être annulé. 
		 </apiDesc></apiParam><apiParam><apiItemName>textFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier><apiData>null</apiData><apiDesc>L’objet TextFlow qui est composé 
		 </apiDesc></apiParam><apiParam><apiItemName>compositionStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Début de la composition, en termes d’index dans le flux de texte. 
		 </apiDesc></apiParam><apiParam><apiItemName>compositionLength</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Nombre des caractères composés 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> Constructeur
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:CompositionCompleteEvent:COMPOSITION_COMPLETE"><apiName>COMPOSITION_COMPLETE</apiName><shortdesc> 
	     Définit la valeur de la propriété type d’un objet événement compositionComplete 
	     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>compositionComplete</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	     Définit la valeur de la propriété <codeph>type</codeph> d’un objet événement <codeph>compositionComplete</codeph> 
	     </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:CompositionCompleteEvent:compositionLength:get"><apiName>compositionLength</apiName><shortdesc> 
		 Nombre des caractères composés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Nombre des caractères composés.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:CompositionCompleteEvent:compositionStart:get"><apiName>compositionStart</apiName><shortdesc> 
		 Position de début de la plage de texte affectée par la composition, exprimée en tant qu’index dans le flux de texte. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Position de début de la plage de texte affectée par la composition, exprimée en tant qu’index dans le flux de texte. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:CompositionCompleteEvent:textFlow:get"><apiName>textFlow</apiName><shortdesc>
		 L’objet TextFlow sur lequel composition est terminée. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc>
		 L’objet TextFlow sur lequel composition est terminée.  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:DamageEvent"><apiName>DamageEvent</apiName><shortdesc> 
	 Une occurrence TextFlow le distribue à chaque fois qu’il est signalé comme étant endommagé. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Une occurrence TextFlow le distribue à chaque fois qu’il est signalé comme étant endommagé. Un dommage peut être provoqué par des changements apportés au modèle ou à la présentation. 
	 
	 </apiDesc><example conref="examples\DamageEvent_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>flashx.textLayout.elements.TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.events:DamageEvent:DamageEvent"><apiName>DamageEvent</apiName><shortdesc> Constructeur
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Index de texte au début du dommage
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Longueur de texte qui a été endommagée 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>textFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier><apiData>null</apiData></apiParam><apiParam><apiItemName>damageAbsoluteStart</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>damageLength</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam></apiConstructorDef><apiDesc> Constructeur
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:DamageEvent:DAMAGE"><apiName>DAMAGE</apiName><shortdesc> Type d’événement de l’objet DamageEvent </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>damage</apiData><apiType value="String"/></apiValueDef><apiDesc> Type d’événement de l’objet DamageEvent </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:DamageEvent:damageAbsoluteStart:get"><apiName>damageAbsoluteStart</apiName><shortdesc>
		 Début absolu du dommage 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Début absolu du dommage 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:DamageEvent:damageLength:get"><apiName>damageLength</apiName><shortdesc>
		 Longueur du dommage 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Longueur du dommage 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:DamageEvent:textFlow:get"><apiName>textFlow</apiName><shortdesc>
		 Objet TextFlow qui possède le dommage 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc>
		 Objet TextFlow qui possède le dommage 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:StatusChangeEvent"><apiName>StatusChangeEvent</apiName><shortdesc> 
	 Une occurrence TextFlow distribue cet événement lorsque le statut d’un objet FlowElement change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Une occurrence TextFlow distribue cet événement lorsque l’état d’un objet FlowElement change. Cet événement peut être utilisé pour détecter la fin du chargement d’un graphique intégré. Vous pouvez utiliser votre gestionnaire d’événement pour recomposer le flux de texte en prenant en compte la présence de l’élément de graphique intégré récemment chargé. 
	 
	 </apiDesc><example conref="examples\StatusChangeEvent_example.as"/></apiClassifierDetail><apiConstructor id="flashx.textLayout.events:StatusChangeEvent:StatusChangeEvent"><apiName>StatusChangeEvent</apiName><shortdesc> Crée un objet événement contenant des informations sur le changement de statut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Il n’existe qu’un seul type d’événement StatusChangeEvent : <codeph>StatusChangeEvent.INLINE_GRAPHIC_STATUS_CHANGE</codeph> ; 
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Indique si un événement peut se propager vers le haut (bubbling). Ce n’est pas le cas de cet événement. 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Indique si le comportement associé à l’événement peut être évité. Cet événement ne peut pas être annulé. 
		 </apiDesc></apiParam><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiData>null</apiData><apiDesc>Occurrence FlowElement qui a rencontré un changement de statut.
		 </apiDesc></apiParam><apiParam><apiItemName>status</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nouveau statut de l’occurrence FlowElement.
		 </apiDesc></apiParam><apiParam><apiItemName>errorEvent</apiItemName><apiType value="flash.events:ErrorEvent"/><apiData>null</apiData><apiDesc>Objet ErrorEvent, le cas échéant, associé au statut. 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> Crée un objet événement contenant des informations sur le changement de statut.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:StatusChangeEvent:INLINE_GRAPHIC_STATUS_CHANGE"><apiName>INLINE_GRAPHIC_STATUS_CHANGE</apiName><shortdesc> 
	     Définit la valeur de la propriété type d’un objet événement inlineGraphicStatusChanged.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>inlineGraphicStatusChange</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	     Définit la valeur de la propriété <codeph>type</codeph> d’un objet événement <codeph>inlineGraphicStatusChanged.</codeph>
	     </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:StatusChangeEvent:element:get"><apiName>element</apiName><shortdesc> 
		 Occurrence FlowElement qui a rencontré un changement de statut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:FlowElement</apiValueClassifier></apiValueDef><apiDesc> 
		 Occurrence FlowElement qui a rencontré un changement de statut. 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement"><linktext>flashx.textLayout.elements.FlowElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.events:StatusChangeEvent:errorEvent:get"><apiName>errorEvent</apiName><shortdesc> 
		 Objet ErrorEvent qui a été distribué à la suite du changement d’état. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.events:ErrorEvent"/></apiValueDef><apiDesc> 
		 Objet ErrorEvent qui a été distribué à la suite du changement d’état.  
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.ErrorEvent.xml"><linktext>flash.events.ErrorEvent</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.events:StatusChangeEvent:status:get"><apiName>status</apiName><shortdesc>
		 Nouveau statut de l’occurrence FlowElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Nouveau statut de l’occurrence FlowElement. Les valeurs possibles de cette propriété sont définies par la classe InlineGraphicElementStatus. La classe InlineGraphicElementStatus comporte cinq constantes statiques : 
		 <ul>
		   <li>ERROR : String = "error". Une erreur s’est produite pendant le chargement d’un graphique référencé. </li>
		   <li>LOADING : String = "loading". La charge a été lancée (mais pas terminée) sur un élément graphique qui est une URL. </li>
		   <li>LOAD_PENDING : String = "loadPending". L’élément graphique est une URL qui n’a pas été chargée. </li>
		   <li>READY : String = "ready". Le graphique est entièrement chargé et correctement dimensionné. </li>
		   <li>SIZE_PENDING : String = "sizePending". L’élément graphique avec des valeurs de largeur/hauteur automatique ou en pourcentage a terminé son chargement mais n’a pas été recomposé. </li>
		 </ul>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElementStatus"><linktext>flashx.textLayout.elements.InlineGraphicElementStatus</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:SelectionEvent"><apiName>SelectionEvent</apiName><shortdesc> 
	 Une occurrence TextFlow distribue un objet SelectionEvent lorqu’un objet EditManager ou SelectionManager change ou sélectionne une plage de texte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Une occurrence TextFlow distribue un objet SelectionEvent lorqu’un objet EditManager ou SelectionManager change ou sélectionne une plage de texte. Par exemple, cet événement est distribué non seulement lorsque vous sélectionnez une plage de texte, mais également lorsque la sélection change parce que l’utilisateur clique ailleurs dans le flux de texte. De plus, cet événement est également distribué lorsqu’un objet EditManager modifie le texte ou la mise en forme du texte dans une plage de texte. 
	 
	 </apiDesc><example conref="examples\SelectionEvent_example.as"/></apiClassifierDetail><apiConstructor id="flashx.textLayout.events:SelectionEvent:SelectionEvent"><apiName>SelectionEvent</apiName><shortdesc> 
		 Crée un objet événement contenant des informations sur le flux.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Il n’existe qu’un seul type d’événement : <codeph>SelectionEvent.SELECTION_CHANGE</codeph> ; 
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Indique si un événement peut se propager vers le haut (bubbling). Ce n’est pas le cas de cet événement. 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Indique si le comportement associé à l’événement peut être évité.
		 </apiDesc></apiParam><apiParam><apiItemName>selectionState</apiItemName><apiOperationClassifier>flashx.textLayout.edit:SelectionState</apiOperationClassifier><apiData>null</apiData><apiDesc>	Objet de type ElementRange qui décrit la plage de texte sélectionnée. 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> 
		 Crée un objet événement contenant des informations sur le flux.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:SelectionEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc> 
		 La constante SelectionEvent.SELECTION_CHANGE définit la valeur de la propriété type de l’objet événement d’un événement de sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 La constante SelectionEvent.SELECTION_CHANGE définit la valeur de la propriété type de l’objet événement d’un événement de sélection. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:SelectionEvent:selectionState:get"><apiName>selectionState</apiName><shortdesc> 
		 Objet de type SelectionState qui représente la plage sélectionnée qui est associée à cet événement SelectionEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionState</apiValueClassifier></apiValueDef><apiDesc> 
		 Objet de type SelectionState qui représente la plage sélectionnée qui est associée à cet événement SelectionEvent.
		 
		 <p>Vous pouvez utiliser cette propriété, de même que la classe ElementRange, pour créer une occurrence ElementRange qui représente la plage du texte sélectionné. Vous pouvez utiliser la ligne de code suivante pour créer une occurrence de la classe ElementRange qui représente la plage du texte sélectionné (la variable <codeph>ev</codeph> représente l’objet événement et l’opérateur conditionnel est utilisé pour éviter toute valeur <codeph>null</codeph> à la propriété <codeph>selectionState</codeph>) :</p>
		 <codeblock>
		 // Find selected element range
		 var range:ElementRange = ev.selectionState ?  
		 	ElementRange.createElementRange(ev.selectionState.textFlow,
		 	ev.selectionState.absoluteStart, ev.selectionState.absoluteEnd) : null;</codeblock>
		 
		 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#ElementRange"><linktext>flashx.textLayout.edit.ElementRange</linktext></link><link href="flashx.textLayout.edit.xml#SelectionState"><linktext>flashx.textLayout.edit.SelectionState</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:FlowOperationEvent"><apiName>FlowOperationEvent</apiName><shortdesc> Une occurrence TextFlow distribue cet événement juste avant le début d’une opération et à nouveau juste après l’opération. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> Une occurrence TextFlow distribue cet événement juste avant le début d’une opération et à nouveau juste après l’opération. Bien que l’objet événement distribué dans les deux cas soit une occurrence de l’objet FlowOperationEvent, les événements distribués avant et après une opération diffèrent de façon significative. 
	 
	 <p>Avant une opération, l’objet TextFlow distribue un événement FlowOperationEvent avec sa propriété <codeph>type</codeph> définie sur <codeph>FlowOperationEvent.FLOW_OPERATION_BEGIN.</codeph> Vous pouvez déterminer le type d’opération qui est sur le point de commencer en consultant la propriété <codeph>operation</codeph>. Les événements de type FLOW_OPERATION_BEGIN peuvent être annulés, ce qui signifie que si vous décidez que l’opération ne doit pas se poursuivre, vous pouvez appeler la méthode <codeph>Event.PreventDefault()</codeph> pour l’annuler. Si vous annulez l’opération, cette dernière n’est pas réalisée et l’événement FLOW_OPERATION_END n’est pas distribué. Vous pouvez également choisir de revenir dans l’objet EditManager pour effectuer une autre opération avant que l’opération ayant déclenché l’événement ne soit terminée. Si vous procédez ainsi, les opérations que vous réalisez dans votre gestionnaire d’événement seront annulées en une seule opération avec l’opération ayant déclenché l’événement. </p>
	 
	 <p>Si vous autorisez l’opération à continuer, l’objet TextFlow distribue un événement FlowOperationEvent à la fin de l’opération avec sa propriété <codeph>type</codeph> définie sur <codeph>FlowOperationEvent.FLOW_OPERATION_END</codeph>. Cet événement est distribué avant que Flash Player ne génère les erreurs susceptibles de résulter de l’opération. Ceci vous donne la possibilité de traiter l’erreur avant que Flash Player ne génère l’erreur. Vous pouvez accéder à l’erreur par l’intermédiaire de la propriété <codeph>error</codeph> de l’événement. Si vous choisissez de gérer l’erreur dans votre gestionnaire d’événement, vous pouvez empêcher Flash Player de générer l’erreur en annulant l’événement FLOW_OPERATION_END par l’appel de la méthode <codeph>Event.preventDefault()</codeph>. Vous pouvez également choisir de revenir dans l’objet EditManager pour effectuer des opérations supplémentaires. Si vous procédez ainsi, les opérations résultantes seront annulées avec l’opération ayant déclenché l’événement.
	 </p> 
	 
	 </apiDesc><example conref="examples\FlowOperationEvent_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.operations.xml#FlowOperation"><linktext>flashx.textLayout.operations.FlowOperation</linktext></link></related-links><apiConstructor id="flashx.textLayout.events:FlowOperationEvent:FlowOperationEvent"><apiName>FlowOperationEvent</apiName><shortdesc> Crée un objet événement contenant des informations sur le flux.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>		Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Il existe deux types : <codeph>FlowOperationEvent.FLOW_OPERATION_BEGIN</codeph> ; <codeph>FlowOperationEvent.FLOW_OPERATION_END</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>		Indique si un événement peut se propager vers le haut (bubbling). Ce n’est pas le cas de cet événement. 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Indique si le comportement associé à l’événement peut être évité. Vous pouvez annuler cet événement en appelant la méthode <codeph>Event.preventDefault()</codeph> dans votre fonction de gestionnaire d’événement. 
		 </apiDesc></apiParam><apiParam><apiItemName>operation</apiItemName><apiOperationClassifier>flashx.textLayout.operations:FlowOperation</apiOperationClassifier><apiData>null</apiData><apiDesc>	Objet FlowOperation qui est sur le point de commencer ou qui vient de se terminer. 
		 </apiDesc></apiParam><apiParam><apiItemName>level</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>		Toute génération d’erreur pendant l’opération. 
		 </apiDesc></apiParam><apiParam><apiItemName>error</apiItemName><apiType value="Error"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc> Crée un objet événement contenant des informations sur le flux.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:FlowOperationEvent:FLOW_OPERATION_BEGIN"><apiName>FLOW_OPERATION_BEGIN</apiName><shortdesc> 
		 Définit la valeur de la propriété type d’un objet événement flowOperationBegin.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flowOperationBegin</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 Définit la valeur de la propriété <codeph>type</codeph> d’un objet événement <codeph>flowOperationBegin</codeph> distribué avant le début d’une opération. L’annulation de cet événement bloque l’opération.  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowOperationEvent:FLOW_OPERATION_COMPLETE"><apiName>FLOW_OPERATION_COMPLETE</apiName><shortdesc>  
		 Définit la valeur de la propriété type d’un objet d’événement flowOperationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flowOperationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>  
		 Définit la valeur de la propriété <codeph>type</codeph> d’un objet d’événement <codeph>flowOperationComplete</codeph>. Distribué lorsque toutes les opérations sont terminées, y compris les opérations en attente et les opérations composites, lorsque la composition est terminée et lorsque l’affichage est en train de défiler.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowOperationEvent:FLOW_OPERATION_END"><apiName>FLOW_OPERATION_END</apiName><shortdesc>  
		 Définit la valeur de la propriété type d’un objet événement flowOperationEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flowOperationEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>  
		 Définit la valeur de la propriété <codeph>type</codeph> d’un objet événement <codeph>flowOperationEnd</codeph> distribué avant le début d’une opération. Les erreurs sont stockées dans <codeph>OperationEvent.error</codeph>. En cas d’erreur, l’annulation de cet événement empêche une nouvelle génération de l’erreur. De façon générale, toutes les erreurs sont susceptibles d’être fatales. 
	 	 <p>Modifier une opération à ce stade (après son exécution) risque d’échouer. </p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowOperationEvent:error:get"><apiName>error</apiName><shortdesc> 
		 Erreur générée, le cas échéant, pendant une opération. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Error"/></apiValueDef><apiDesc> 
		 Erreur générée, le cas échéant, pendant une opération. Si une erreur se produit au cours d’une opération, une référence à l’objet erreur est associée à l’événement FLOW_OPERATION_END. Ceci vous donne la possibilité de gérer l’erreur avant que Flash Player ne génère l’erreur. Si vous annulez l’événement, Flash Player ne génère pas l’erreur. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowOperationEvent:level:get"><apiName>level</apiName><shortdesc> 
		 Les opérations peuvent être fusionnées par imbrication dans les opérations composites.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Les opérations peuvent être fusionnées par imbrication dans les opérations composites. Cet indicateur décrit le niveau d’imbrication de l’opération.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:FlowOperationEvent:operation:get"><apiName>operation</apiName><shortdesc> 
		 L’opération est sur le point de commencer ou vient de se terminer. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.operations:FlowOperation</apiValueClassifier></apiValueDef><apiDesc> 
		 L’opération est sur le point de commencer ou vient de se terminer. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.operations.xml#FlowOperation"><linktext>flashx.textLayout.operations.FlowOperation</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:UpdateCompleteEvent"><apiName>UpdateCompleteEvent</apiName><shortdesc> 
	 Une occurrence TextFlow distribue cet événement une fois la mise à jour de ses conteneurs terminée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata><asCustoms><internal>Note: the DamageEvent_example class contains a good example of 
	 using the UpdateCompleteEvent, so I have included it as the class example
	 instead of creating a new example. I've updated the description of the
	 DamageEvent_example file to include prominent mention of the UpdateCompleteEvent.
	 
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 Une occurrence TextFlow distribue cet événement une fois la mise à jour de ses conteneurs terminée. Chaque conteneur texte a deux états : composition et affichage. Cet événement vous avertit lorsque la phase d’affichage est terminée. Ceci vous permet d’apporter les modifications nécessaires au conteneur lorsqu’il est prêt à être affiché, mais qu’il n’a pas encore été dessiné à l’écran. 
	 
	 </apiDesc><example conref="examples\DamageEvent_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>flashx.textLayout.elements.TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.events:UpdateCompleteEvent:UpdateCompleteEvent"><apiName>UpdateCompleteEvent</apiName><shortdesc> Constructeur
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement - Utilisez la propriété statique UPDATE_COMPLETE. 
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si un événement peut se propager vers le haut (bubbling). Cet événement ne se propage pas vers le haut. 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si le comportement associé à l’événement peut être évité. Cet événement ne peut pas être annulé. 
		 </apiDesc></apiParam><apiParam><apiItemName>textFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier><apiData>null</apiData><apiDesc>Objet ContainerController dont le conteneur a été mis à jour 
		 </apiDesc></apiParam><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiData>null</apiData><apiDesc>L’objet TextFlow qui a été mis à jour 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> Constructeur
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:UpdateCompleteEvent:UPDATE_COMPLETE"><apiName>UPDATE_COMPLETE</apiName><shortdesc> 
	     Définit la valeur de la propriété type d’un objet UpdateCompleteEvent 
	     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>updateComplete</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	     Définit la valeur de la propriété <codeph>type</codeph> d’un objet <codeph>UpdateCompleteEvent</codeph> 
	     </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:UpdateCompleteEvent:controller:get"><apiName>controller</apiName><shortdesc> 
		 Contrôleur du conteneur en cours de mise à jour 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.container:ContainerController</apiValueClassifier></apiValueDef><apiDesc> 
		 Contrôleur du conteneur en cours de mise à jour 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.events:UpdateCompleteEvent:textFlow:get"><apiName>textFlow</apiName><shortdesc>
		 Objet TextFlow qui a été mis à jour. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc>
		 Objet TextFlow qui a été mis à jour.  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.events:TextLayoutEvent"><apiName>TextLayoutEvent</apiName><shortdesc>
	 Une occurrence TextLayoutEvent représente un événement, comme l’évenement TextLayoutEvent.SCROLL, qui ne nécessite pas de propriétés personnalisées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Une occurrence TextLayoutEvent représente un événement, comme l’évenement <codeph>TextLayoutEvent.SCROLL</codeph>, qui ne nécessite pas de propriétés personnalisées. 
	 <p>Un événement scroll est représenté par une occurrence TextLayoutEvent avec sa propriété <codeph>type</codeph> définie sur <codeph>TextLayoutEvent.SCROLL</codeph>. Une classe spéciale n’est pas nécessaire pour les événements scroll, car un événement scroll ne dispose pas de propriétés personnalisées, comme cela est le cas pour les autres événements qui ont des classes d’événements spécifiques. Si un nouvel événement Text Layout est nécessaire et si l’événement ne requiert pas de propriétés personnalisées, le nouvel événement sera également représenté par un objet TextLayoutEvent, mais sa propriété <codeph>type</codeph> sera définie sur une nouvelle constante statique. 
	 </p>
	 
	 </apiDesc><example conref="examples\TextLayoutEvent_example.as"/></apiClassifierDetail><apiConstructor id="flashx.textLayout.events:TextLayoutEvent:TextLayoutEvent"><apiName>TextLayoutEvent</apiName><shortdesc>
		  La classe TextLayoutEvent représente l’objet événement transmis à l’écouteur d’événement pour de nombreux événements Text Layout.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef><apiDesc>
		  La classe TextLayoutEvent représente l’objet événement transmis à l’écouteur d’événement pour de nombreux événements Text Layout.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.events:TextLayoutEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	      La constante TextLayoutEvent.SCROLL définit la valeur de la propriété type de l’objet événement d’un événement scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	      La constante <codeph>TextLayoutEvent.SCROLL</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet événement d’un événement <codeph>scroll</codeph>.
	     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>