<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.compose"><apiName>flashx.textLayout.compose</apiName><apiDetail/><apiClassifier id="flashx.textLayout.compose:ITextLineCreator"><apiName>ITextLineCreator</apiName><shortdesc> 
	 L’objet ITextLineCreator définit une interface afin de créer des objets TextLine pour une occurrence IFlowComposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> 
	 ITextLineCreator définit une interface de création d’objets TextLine pour une occurrence IFlowComposer.
	 
	 <p>L’interface ITextLineCreator enveloppe les méthodes de création de ligne FTE. Deux raisons expliquent pourquoi une application peut vouloir utiliser cette interface pour contrôler la création de ligne. Tout d’abord, si l’application comporte un fichier SWF qui contient une police et que vous souhaitez utiliser cette police dans un autre fichier SWF, vous pouvez réutiliser la police si l’objet TextLine a été créé à partir du fichier SWF dans lequel réside la police. Ensuite, vous pouvez accélérer le temps de recomposition en réutilisant les objets TextLine créés. TLF effectue cette opération en interne. Lorsqu’il réutilise des objets, il appelle la méthode recreateTextLine au lieu de la méthode createTextLine. Votre application peut comporter des objets TextLine supplémentaires qu’il sait pouvoir réutiliser. Si tel est le cas, dans votre implémentation de la méthode createTextLine, vous pouvez appeler la méthode TextBlock.recreateTextLine avec la ligne à réutiliser au lieu de la méthodeTextBlock.createTextLine. </p>
	 
	 </apiDesc><example conref="examples\ITextLineCreator_ClassExample.as"/></apiClassifierDetail><related-links><link href="" invalidHref="flast.text.engine.TextLine.xml"><linktext>flast.text.engine.TextLine</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>flashx.textLayout.compose.IFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiOperation id="flashx.textLayout.compose:ITextLineCreator:flashx.textLayout.compose:ITextLineCreator:createTextLine"><apiName>createTextLine</apiName><shortdesc> 
		 Crée un objet TextLine pour un compositeur de flux. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet TextLine créé
		  
		 </apiDesc><apiType value="flash.text.engine:TextLine"/></apiReturn><apiParam><apiItemName>textBlock</apiItemName><apiType value="flash.text.engine:TextBlock"/><apiDesc>Objet TextBlock pour lequel la ligne doit être créée. 
		 </apiDesc></apiParam><apiParam><apiItemName>previousLine</apiItemName><apiType value="flash.text.engine:TextLine"/><apiData>null</apiData><apiDesc>Ligne précédente qui a été créée pour l’objet TextBlock, le cas échéant. 
		 </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiData>1000000</apiData><apiDesc>Largeur maximale de la ligne. 
		 </apiDesc></apiParam><apiParam><apiItemName>lineOffset</apiItemName><apiType value="Number"/><apiData>0.0</apiData><apiDesc>Valeur de décalage facultative.
		 </apiDesc></apiParam><apiParam><apiItemName>fitSomething</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Si la valeur est <codeph>true</codeph>, au moins un caractère ou un graphique intégré doit être placé sur la ligne même si cet élément entraîne le dépassement de la valeur du paramètre <codeph>width</codeph> pour la ligne.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Crée un objet TextLine pour un compositeur de flux. 
		 
		 <p>Appelé par un compositeur de flux lorsqu’une ligne de texte doit être créée.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:ITextLineCreator:flashx.textLayout.compose:ITextLineCreator:recreateTextLine"><apiName>recreateTextLine</apiName><shortdesc> 
		 Recrée un objet TextLine pour un compositeur de flux.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet TextLine recréé
		 
		 </apiDesc><apiType value="flash.text.engine:TextLine"/></apiReturn><apiParam><apiItemName>textBlock</apiItemName><apiType value="flash.text.engine:TextBlock"/><apiDesc>Objet TextBlock pour lequel la ligne doit être créée. 
		 </apiDesc></apiParam><apiParam><apiItemName>textLine</apiItemName><apiType value="flash.text.engine:TextLine"/><apiDesc>Ligne précédente qui a été créée pour l’objet TextBlock, le cas échéant. 
		 </apiDesc></apiParam><apiParam><apiItemName>previousLine</apiItemName><apiType value="flash.text.engine:TextLine"/><apiData>null</apiData><apiDesc>Largeur maximale de la ligne. 
		 </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiData>1000000</apiData><apiDesc>Valeur de décalage facultative.
		 </apiDesc></apiParam><apiParam><apiItemName>lineOffset</apiItemName><apiType value="Number"/><apiData>0.0</apiData><apiDesc>Si la valeur est <codeph>true</codeph>, au moins un caractère ou un graphique intégré doit être placé sur la ligne même si cet élément entraîne le dépassement de la valeur du paramètre <codeph>width</codeph> pour la ligne.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>fitSomething</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc> 
		 Recrée un objet TextLine pour un compositeur de flux.
		 
		 <p>Appelé par un compositeur de flux lorsqu’une ligne de texte doit être recréée.</p>
		 
		 <p><b>Remarque :</b> la méthode TextBlock <codeph>recreateTextLine()</codeph> est disponible à partir de Flash Player 10.1 et AIR 2.0. Pour mettre en œuvre cette méthode afin qu’elle soit compatible avec des moteurs d’exécution antérieurs, vérifiez l’existence de la méthode <codeph>recreateTextLine()</codeph> sur l’objet TextBlock avant d’appeler ce dernier.</p>
		  
		 </apiDesc><example conref="examples\ITextLineCreator_recreateTextLine.as"/></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.compose:TextFlowLine"><apiName>TextFlowLine</apiName><shortdesc> 
	 La classe TextFlowLine représente une seule ligne de texte dans un enchaînement de texte. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseInterface>flashx.textLayout.compose:IVerticalJustificationLine</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 La classe TextFlowLine représente une seule ligne de texte dans un enchaînement de texte. 
	 
	 <p>Utilisez cette classe pour accéder à des informations sur la façon dont une ligne de texte a été composée : position, hauteur, largeur et ainsi de suite. Lorsque l’enchaînement de texte (TextFlow) est modifié, les lignes immédiatement avant et sur le site de la modification sont marquées comme non valides car elles doivent être recomposées. Les lignes après le site de la modification peuvent ne pas être endommagées immédiatement, mais elles pourraient être régénérées lorsque le texte est composé. Vous pouvez accéder à une classe TextFlowLine endommagée, mais les valeurs auxquelles vous accédez reflétent l’ancien état de l’objet TextFlow. Lorsque l’objet TextFlow est recomposé, il génère de nouvelles lignes et vous pouvez extraire la nouvelle ligne pour une position donnée en appelant <codeph>TextFlow.flowComposer.findLineAtPosition()</codeph>.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flashx.textLayout.compose.TextFlow.xml"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.compose:TextFlowLine:TextFlowLine"><apiName>TextFlowLine</apiName><shortdesc> Constructeur : crée une nouvelle occurrence TextFlowLine. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>textLine</apiItemName><apiType value="flash.text.engine:TextLine"/><apiDesc>L’objet d’affichage TextLine à utiliser pour cette ligne. 
		 </apiDesc></apiParam><apiParam><apiItemName>paragraph</apiItemName><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier><apiDesc>Le paragraphe (ParagraphElement) dans lequel placer la ligne. 
		 </apiDesc></apiParam><apiParam><apiItemName>outerTargetWidth</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>La largeur sur laquelle la ligne est composée, à l’exception des marges et des retraits.
		 </apiDesc></apiParam><apiParam><apiItemName>lineOffset</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Le décalage de la ligne en pixels dans l’encart du conteneur approprié (conforme à la direction du paragraphe et à la progresion du bloc de conteneur), avant l’alignement des lignes du paragraphe.  
		 </apiDesc></apiParam><apiParam><apiItemName>absoluteStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>La position des caractères dans l’enchaînement de texte à laquelle la ligne commence. 
		 </apiDesc></apiParam><apiParam><apiItemName>numChars</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Nombre de caractères dans la ligne.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> Constructeur : crée une nouvelle occurrence TextFlowLine.  
		  <p><b>Remarque</b> : aucun client ne devrait l’appeler. Il est exposé pour l’écriture de votre propre composeur. </p>
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine </linktext></link><link href="" invalidHref="flashx.textLayout.compose.ParagraphElement.xml"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.compose.xml#TextFlowLine/absoluteStart"><linktext>absoluteStart</linktext></link><link href="flashx.textLayout.compose.xml#TextFlowLine/numChars"><linktext>numChars</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.compose:TextFlowLine:getBounds"><apiName>getBounds</apiName><shortdesc> 
		 Renvoie les limites de la ligne sous forme de rectangle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>un rectangle qui représente les limites de la ligne. 
		 
		 </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn></apiOperationDef><apiDesc> 
		 Renvoie les limites de la ligne sous forme de rectangle.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:TextFlowLine:getTextLine"><apiName>getTextLine</apiName><shortdesc> 
		 Renvoie l’objet flash.text.engine.TextLine pour cette ligne, qui est peut-être recréée si elle n’existe pas en raison du nettoyage. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>objet pour cette ligne ou <codeph>null</codeph> si l’objet TextLine ne peut pas être recréé.
		 
		 </apiDesc><apiType value="flash.text.engine:TextLine"/></apiReturn><apiParam><apiItemName>forceValid</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Si la valeur est true, la classe TextLine est recréée, si elle existe mais n’est pas valide. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie l’objet <codeph>flash.text.engine.TextLine</codeph> pour cette ligne, qui est peut-être recréée si elle n’existe pas en raison du nettoyage. Définissez <codeph>forceValid</codeph> sur <codeph>true</codeph> pour entraîner la recréation de la classe TextLine. Renvoie la valeur null si la classe TextLine ne peut pas être recréée. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>TextLine</linktext></link></related-links></apiOperation><apiValue id="flashx.textLayout.compose:TextFlowLine:absoluteStart:get"><apiName>absoluteStart</apiName><shortdesc> 
		 L’emplacement de la ligne comme une position de caractère absolu dans l’objet TextFlow. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 L’emplacement de la ligne comme une position de caractère absolu dans l’objet TextFlow. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.textLayout.compose.TextFlow.xml"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:ascent:get"><apiName>ascent</apiName><shortdesc conref="flash.text.engine.TextLine#ascent"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.text.engine.TextLine#ascent"> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:columnIndex:get"><apiName>columnIndex</apiName><shortdesc> Le numéro de la colonne dans laquelle la ligne a été importée, la première colonne étant 0. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> Le numéro de la colonne dans laquelle la ligne a été importée, la première colonne étant 0. 
		 	
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:controller:get"><apiName>controller</apiName><shortdesc> 
		 Le contrôleur (objet ContainerController) pour le conteneur dans lequel la ligne a été importée. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.container:ContainerController</apiValueClassifier></apiValueDef><apiDesc> 
		 Le contrôleur (objet ContainerController) pour le conteneur dans lequel la ligne a été importée. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController"><linktext>flashx.textLayout.container.ContainerController</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:descent:get"><apiName>descent</apiName><shortdesc conref="flash.text.engine.TextLine#descent"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.text.engine.TextLine#descent"> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:height:get"><apiName>height</apiName><shortdesc> Largeur de la ligne, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Largeur de la ligne, en pixels.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#TextFlowLine/width"><linktext>largeur</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:lineOffset:get"><apiName>lineOffset</apiName><shortdesc> 
		 Le décalage de la ligne en pixels dans l’encart du conteneur approprié (conforme à la direction du paragraphe et à la progresion du bloc de conteneur), avant l’alignement des lignes du paragraphe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 Le décalage de la ligne en pixels dans l’encart du conteneur approprié (conforme à la direction du paragraphe et à la progresion du bloc de conteneur), avant l’alignement des lignes du paragraphe. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:location:get"><apiName>location</apiName><shortdesc> 
		 L’une des valeurs de l’objet TextFlowLineLocation pour spécifier l’emplacement d’une ligne au sein d’un paragraphe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 L’une des valeurs de l’objet TextFlowLineLocation pour spécifier l’emplacement d’une ligne au sein d’un paragraphe. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.textLayout.compose.ParagraphElement.xml"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.compose.xml#TextFlowLineLocation"><linktext>TextFlowLineLocation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:paragraph:get"><apiName>paragraph</apiName><shortdesc> 
		 Le paragraphe (ParagraphElement) dans lequel la ligne réside. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:ParagraphElement</apiValueClassifier></apiValueDef><apiDesc> 
		 Le paragraphe (ParagraphElement) dans lequel la ligne réside. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.textLayout.compose.ParagraphElement.xml"><linktext>ParagraphElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:spaceAfter:get"><apiName>spaceAfter</apiName><shortdesc> 
		 La quantité d’espace à laisser après la ligne. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 La quantité d’espace à laisser après la ligne. 
		 <p>Si la ligne est la dernière ligne d’un paragraphe qui possède une marge inférieure, la ligne a une valeur <codeph>spaceAfter</codeph>. Si la ligne est au bas d’une colonne, alors la valeur <codeph>spaceAfter</codeph> est ignorée. Dans le cas contraire, la ligne vient devant une autre ligne de la colonne et la ligne suivante doit être positionnée verticalement pour s’assurer qu’il y a au moins cette quantité d’espace entre la dernière ligne du paragraphe et la première ligne du paragraphe suivant. </p> 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/paragraphSpaceAfter"><linktext>TextLayoutFormat.paragraphSpaceAfter</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:spaceBefore:get"><apiName>spaceBefore</apiName><shortdesc> 
		 La quantité d’espace à laisser avant la ligne. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 La quantité d’espace à laisser avant la ligne. 
		 <p>Si la ligne est la première ligne d’un paragraphe qui possède une marge supérieure, la ligne a une valeur <codeph>spaceBefore</codeph>. Si la ligne est en haut d’une colonne, alors la valeur <codeph>spaceBefore</codeph> est ignorée. Dans le cas contraire, la ligne suit une autre ligne dans la colonne et elle est placée verticalement pour s’assurer qu’il y a au moins cette quantité d’espace entre la ligne et la dernière ligne du paragraphe précédent. </p> 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/paragraphSpaceBefore"><linktext>TextLayoutFormat.paragraphSpaceBefore</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:textHeight:get"><apiName>textHeight</apiName><shortdesc>
		 Hauteur de la ligne de texte, qui est égale à monter plus descendre.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Hauteur de la ligne, qui est égale à <codeph>monter</codeph> plus <codeph>descendre</codeph>. La valeur est calculée à partir de la différence entre les lignes de base qui limitent la ligne, soit sur base idéographique en haut et en bas ou monter et descendre, selon si la ligne de base au niveau y=0 est idéographique (par exemple, TextBaseline.IDEOGRAPHIC_TOP) ou non.  
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:textLength:get"><apiName>textLength</apiName><shortdesc> 
		 Nombre de caractères jusqu’à la ligne suivante, y compris les espaces. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Nombre de caractères jusqu’à la ligne suivante, y compris les espaces.  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:textLineExists:get"><apiName>textLineExists</apiName><shortdesc> 
		 Indique si l’objet flash.text.engine.TextLine pour cet objet TextFlowLine existe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		 Indique si l’objet <codeph>flash.text.engine.TextLine</codeph> pour cet objet TextFlowLine existe. La valeur est <codeph>true</codeph> si l’objet TextLine n’a <i>pas</i> été nettoyé et <codeph>false</codeph> s’il l’a été.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>TextLine</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:unjustifiedTextWidth:get"><apiName>unjustifiedTextWidth</apiName><shortdesc> 
		 Largeur de la ligne si elle n’était pas justifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 Largeur de la ligne si elle n’était pas justifiée. Pour du texte non justifié, cette valeur est la même que la valeur <codeph>textLength</codeph>. Pour du texte justifié, cette valeur est ce que la longueur aurait été sans justification et la valeur <codeph>textLength</codeph> représente la largeur réelle de la ligne. Par exemple, lorsque la chaîne suivante est justifiée et qu’une largeur de 500 lui est affectée, sa largeur réelle est de 500, mais d’une largeur non justifiée de 268,9921875. 
		 
		 <p>TBD : ajouter une image de ligne justifiée </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:validity:get"><apiName>validity</apiName><shortdesc> Validité de la ligne.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Validité de la ligne. 
		 <p>Une ligne peut être non valide si le texte, les attributs qui lui sont appliqués ou les paramètres du contrôleur ont été modifiés depuis la création de la ligne. Une ligne peut cependant être affichée et vous pouvez l’utiliser, mais les valeurs utilisées seront les valeurs de l’heure de création. La ligne représentée par l’objet <codeph>textLine</codeph> sera également un état non valide. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#TextFlowLine/textLine"><linktext>textLine</linktext></link><link href="" invalidHref="flash.text.engine.xml#TextLine/validity"><linktext>TextLine.validity</linktext></link><link href="flashx.textLayout.compose.xml#TextFlowLine/GEOMETRY_DAMAGED"><linktext>GEOMETRY_DAMAGED</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:x:get"><apiName>x</apiName><shortdesc> 
		 La position horizontale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir de la gauche du conteneur. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 La position horizontale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir de la gauche du conteneur. 
		 <p><b>Remarque : </b>bien que cette propriété soit techniquement de type <codeph>lecture-écriture</codeph>, vous devez la traiter comme une propriété <codeph>en lecture seule</codeph>. L’accesseur Set existe uniquement pour satisfaire aux exigences de l’interface IVerticalJustificationLine qui définit les accesseurs Get et Set pour cette propriété. L’utilisation de l’accesseur Set, bien que possible, entraîne des résultats imprévisibles. 
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#TextFlowLine/y"><linktext>y</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLine:y:get"><apiName>y</apiName><shortdesc> 
		 La position verticale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir du haut du conteneur. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 La position verticale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir du haut du conteneur. 
		 <p><b>Remarque : </b>bien que cette propriété soit techniquement de type <codeph>lecture-écriture</codeph>, vous devez la traiter comme une propriété <codeph>en lecture seule</codeph>. L’accesseur Set existe uniquement pour satisfaire aux exigences de l’interface IVerticalJustificationLine qui définit les accesseurs Get et Set pour cette propriété. L’utilisation de l’accesseur Set, bien que possible, entraîne des résultats imprévisibles. 
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#TextFlowLine/x"><linktext>x</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:FlowComposerBase"><apiName>FlowComposerBase</apiName><shortdesc> 
	 La classe FlowComposerBase est la classe de base des classes du compositeur de flux Text Layout Framework, qui contrôlent la composition des lignes de texte dans les objets ContainerController. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><Exclude kind="method" name="checkFirstDamage"/><Exclude kind="method" name="debugCheckTextFlowLines"/><Exclude kind="property" name="lines"/><Exclude kind="method" name="addLine"/><Exclude kind="method" name="initializeLines"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 La classe FlowComposerBase est la classe de base des classes du compositeur de flux Text Layout Framework, qui contrôlent la composition des lignes de texte dans les objets ContainerController. 
	 
	 <p>FlowComposerBase est une classe d’utilitaires qui implémente des méthodes et des propriétés communes à plusieurs types de compositeur de flux. Le code de l’application n’instancie ou n’utilise généralement pas cette classe (sauf s’il l’étend pour créer un compositeur de flux personnalisé). </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/flowComposer"><linktext>flashx.textLayout.elements.TextFlow.flowComposer</linktext></link></related-links><apiConstructor id="flashx.textLayout.compose:FlowComposerBase:FlowComposerBase"><apiName>FlowComposerBase</apiName><shortdesc> Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Constructeur. 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.compose:FlowComposerBase:damage"><apiName>damage</apiName><shortdesc conref="IFlowComposer#damage()"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>startPosition</apiItemName><apiType value="int"/><apiDesc>début de la plage à endommager 
		 </apiDesc></apiParam><apiParam><apiItemName>damageLength</apiItemName><apiType value="int"/><apiDesc>nombre de caractères à endommager 
		 </apiDesc></apiParam><apiParam><apiItemName>damageType</apiItemName><apiType value="String"/><apiDesc>type de dommage. Une des classes flashx.textLayout.compose.FlowDamageType
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#damage()"> 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:FlowComposerBase:findLineAtPosition"><apiName>findLineAtPosition</apiName><shortdesc conref="IFlowComposer#findLineAtPosition()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.compose:TextFlowLine</apiOperationClassifier><apiDesc>Objet TextFlowLine renfermant le contenu à la position spécifiée ou valeur null s’il est introuvable. 
		
		</apiDesc></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Position du contenu pour lequel vous voulez obtenir l’objet TextFlowLine. 
		</apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Spécifie la ligne à renvoyer lorsque la position se situe entre le dernier élément d’une ligne et le premier élément de la ligne suivante.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#findLineAtPosition()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:FlowComposerBase:findLineIndexAtPosition"><apiName>findLineIndexAtPosition</apiName><shortdesc conref="IFlowComposer#findLineIndexAtPosition()"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/><apiDesc>Index de la ligne de texte à la position spécifiée. S’il est introuvable, le considère comme au-delà de la fin et renvoie le nombre de lignes. 
		 	 
		 </apiDesc></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Position du contenu pour lequel vous voulez obtenir la ligne de texte.
		 </apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie l’index du conteneur à renvoyer lorsque la position se situe entre la dernière ligne d’un conteneur et la première ligne du conteneur suivant.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#findLineIndexAtPosition()"> 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:FlowComposerBase:getLineAt"><apiName>getLineAt</apiName><shortdesc conref="IFlowComposer#getLineAt()"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.compose:TextFlowLine</apiOperationClassifier><apiDesc>Objet TextFlowLine doté du numéro de ligne spécifié ou valeur <codeph>null</codeph> s’il est introuvable.
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>	Numéro de ligne de l’objet TextFlowLine à renvoyer.
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#getLineAt()"> 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:FlowComposerBase:isDamaged"><apiName>isDamaged</apiName><shortdesc conref="IFlowComposer#isDamaged()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>La valeur est true si des objets TextFlowLine entre le début du flux jusqu’à la ligne renfermant le contenu à la position <codeph>absolutePosition</codeph> sont signalés comme étant endommagés.
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Dernière position dans la zone ciblée 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#isDamaged()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:FlowComposerBase:updateLengths"><apiName>updateLengths</apiName><shortdesc conref="IFlowComposer#updateLengths()"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>startPosition</apiItemName><apiType value="int"/><apiDesc>Début de modification en longueur.
		 </apiDesc></apiParam><apiParam><apiItemName>deltaLength</apiItemName><apiType value="int"/><apiDesc>Changement du nombre de caractères.
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#updateLengths()"> 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.compose:FlowComposerBase:damageAbsoluteStart:get"><apiName>damageAbsoluteStart</apiName><shortdesc>
		 Position absolue qui précède immédiatement le premier élément du flux de texte devant être composé et mis à jour. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Position absolue qui précède immédiatement le premier élément du flux de texte devant être composé et mis à jour. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:FlowComposerBase:numLines:get"><apiName>numLines</apiName><shortdesc conref="IFlowComposer#numLines"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="IFlowComposer#numLines"> </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:FlowComposerBase:swfContext:get"><apiName>swfContext</apiName><shortdesc> 
		L’occurrence ISWFContext utilisée pour effectuer des appels FTE le cas échéant. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.compose:ISWFContext</apiValueClassifier></apiValueDef><apiDesc> 
		L’instance ISWFContext utilisée pour effectuer des appels FTE le cas échéant.  
		
		<p>Par défaut, l’implémentation ISWFContext est cet objet FlowComposerBase. Les applications peuvent fournir une implémentation personnalisée pour utiliser des polices intégrées dans un autre fichier SWF ou pour mettre en mémoire cache et réutiliser des lignes de texte. </p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#ISWFContext"><linktext>flashx.textLayout.compose.ISWFContext</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:FlowComposerBase:textFlow:get"><apiName>textFlow</apiName><shortdesc> 
		Objet TextFlow auquel le compositeur de flux est associé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc> 
		Objet TextFlow auquel le compositeur de flux est associé. 
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>flashx.textLayout.elements.TextFlow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:ISWFContext"><apiName>ISWFContext</apiName><shortdesc> 
	 L’interface ISWFContext autorise un fichier SWF à partager son contexte avec d’autres fichiers SWF qui le chargent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> 
	 L’interface ISWFContext autorise un fichier SWF à partager son contexte avec d’autres fichiers SWF qui le chargent. Une application qui charge un fichier SWF de type ISWFContext peut appeler les méthodes dans le contexte du fichier SWF chargé. Elle est utilisée principalement pour appeler les méthodes de création de lignes de texte FTE.
	 
	 <p>Une application utilise cette interface pour contrôler la création de lignes de texte pour deux raisons : </p>
	 <ul>
	   <li><b>Réutiliser une police incorporée : </b> si une application souhaite utiliser une police incorporée dans un fichier SWF chargé, elle peut accéder à la police si un objet TextLine est créé dans le contexte du fichier SWF chargé.</li>
	   <li><b>Réutiliser les occurrences de TextLine existantes</b> : la réutilisation des occurrences de TextLine peut accélérer la recomposition. TLF réutilise les occurrences de TextLine en interne. TLF réutilise un objet TextLine en appelant <codeph>TextBlock.recreateTextLine()</codeph> au lieu de <codeph>TextBlock.createTextLine()</codeph> lorsque TLF reconnaît que l’objet TextLine existe encore.</li>
	 </ul>
	 
	 
	 <p>Votre application peut disposer d’autres occurrences de TextLine pouvant être réutilisées. Pour réutiliser manuellement les occurrences de TextLine existantes :</p>
	 <ol>
	   <li>Interrompez les appels de <codeph>TextBlock.createTextLine()</codeph>.</li>
	   <li>Appelez ensuite <codeph>TextBlock.recreateTextLine()</codeph> avec l’occurrence de TextLine existante plutôt qu’avec <codeph>TextBlock.createTextLine()</codeph>.</li>
	 </ol>
	 <p>Notez cependant que <codeph>TextBlock.recreateTextLine()</codeph> est uniquement disponible dans Flash Player 10.1 et les versions ultérieures.</p>
	 
	 </apiDesc><example conref="examples\EmbeddedFontLineCreator.as"/><example conref="examples\FontConsumer.as"/></apiClassifierDetail><related-links><link href="" invalidHref="flash.text.engine.xml#TextBlock/createTextLine()"><linktext>flash.text.engine.TextBlock.createTextLine()</linktext></link><link href="" invalidHref="flash.text.engine.xml#TextBlock/recreateTextLine()"><linktext>flash.text.engine.TextBlock.recreateTextLine()</linktext></link></related-links><apiOperation id="flashx.textLayout.compose:ISWFContext:flashx.textLayout.compose:ISWFContext:callInContext"><apiName>callInContext</apiName><shortdesc>
	      Un moyen d’appeler une méthode dans un contexte contrôlé par le client. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Quel que soit le renvoi de la fonction. 
	     
	      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>fn</apiItemName><apiType value="Function"/><apiDesc>La fonction ou la méthode à appeler.
	      </apiDesc></apiParam><apiParam><apiItemName>thisArg</apiItemName><apiType value="Object"/><apiDesc>Le pointeur this de la fonction.
	      </apiDesc></apiParam><apiParam><apiItemName>argArray</apiItemName><apiType value="Array"/><apiDesc>Les arguments de la fonction.
	      </apiDesc></apiParam><apiParam><apiItemName>returns</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Si la valeur est true, la fonction renvoie une valeur.
	     
	      </apiDesc></apiParam></apiOperationDef><apiDesc>
	      Un moyen d’appeler une méthode dans un contexte contrôlé par le client. 
	     
	      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flashx.textLayout.compose.xml#Function/apply()"><linktext>Function.apply()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.compose:IFlowComposer"><apiName>IFlowComposer</apiName><shortdesc>
	 IFlowComposer définit l’interface de gestion de la disposition et de l’affichage d’un flux de texte. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 IFlowComposer définit l’interface de gestion de la disposition et de l’affichage d’un flux de texte. 
	 
	 <p>Les enchaînements de texte affichés avec une implémentation de compositeur de flux peuvent être dynamiques et interactifs. Un compositeur de flux gère un ou plusieurs contrôleurs d’affichage. Chaque contrôleur est associé à un conteneur d’objet d’affichage (par exemple un Sprite) par l’intermédiaire duquel les lignes créées pour le flux de texte sont finalement affichées. Le diagramme suivant illustre la relation qui existe entre les objets TextFlow, IFlowComposer, ContainerController et DisplayObjectContainer :</p>
	 
	 <p><adobeimage alt="IFlowComposer" href="../../../images/textLayout_singleController.gif"/></p>
	 
	 <p>Un compositeur de flux calcule la partie d’un flux de texte qui entre dans chaque conteneur et ajoute les lignes de texte appropriées pour l’objet d’affichage du conteneur. L’interface IFlowComposer définit des méthodes distinctes pour calculer la présentation et pour mettre à jour l’affichage. IFlowComposer met également au point des méthodes de composition incrémentielle et de mise à jour d’un flux de texte. Ces méthodes peuvent permettre d’éviter de bloquer l’interface utilisateur lors de la mise à jour de flux de texte longs. </p>
	 
	 <p>En plus de gérer la composition et l’affichage du texte, un compositeur de flux contrôle le conteneur qui a le focus, gère l’affichage de la mise en surbrillance des sélections (qui peuvent traverser les limites des conteneurs) et fournit un accès direct à tous les objets TextLine du flux. </p>
	 
	 <p>Pour utiliser une implémentation IFlowComposer, affectez une occurrence de cette implémentation à la propriété <codeph>flowComposer</codeph> d’un objet TextFlow. Appelez la méthode <codeph>updateAllControllers()</codeph> pour mettre en forme et afficher le texte dans les conteneurs associés au compositeur de flux.</p>
	 
	 <p><b>Remarque :</b> pour les flux de texte simples et statiques, vous pouvez également utiliser la méthode des classes de fabrique de ligne de texte. Ces classes de fabrique créent généralement des lignes plus facilement qu’un compositeur de flux, mais elles ne prennent pas en charge les modifications, les changements dynamiques et l’interaction de l’utilisateur. </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.container.xml#ContainerController"><linktext>ContainerController</linktext></link><link href="flashx.textLayout.compose.xml#FlowComposerBase"><linktext>FlowComposerBase</linktext></link><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.factory.xml#StringTextLineFactory"><linktext>StringTextLineFactory</linktext></link><link href="flashx.textLayout.factory.xml#TextFlowTextLineFactory"><linktext>TextFlowTextLineFactory</linktext></link></related-links><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:addControllerAt"><apiName>addControllerAt</apiName><shortdesc> 
		 Ajoute un contrôleur à cette occurrence IFlowComposer à l’index spécifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Objet ContainerController à ajouter. 
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index numérique qui indique la position dans la liste des contrôleurs à laquelle insérer l’objet ContainerController. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Ajoute un contrôleur à cette occurrence IFlowComposer à l’index spécifié.
		 
		 <p>La liste des contrôleurs est en base 0 (le premier contrôleur a l’index 0). </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:addController"><apiName>addController</apiName><shortdesc> 
		 Ajoute un contrôleur à cette occurrence IFlowComposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Objet ContainerController à ajouter. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Ajoute un contrôleur à cette occurrence IFlowComposer.
		 
		 <p>Le conteneur est ajouté à la fin de la liste des conteneurs. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:composeToController"><apiName>composeToController</apiName><shortdesc> 
		 Compose le contenu de l’élément racine jusqu’au conteneur situé à l’index spécifié inclus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>unknown</apiData><apiDesc>Composez au moins jusqu’à ce conteneur dans l’objet TextFlow Si controllerIndex est supérieur au nombre de contrôleurs, composez jusqu’à la fin du dernier conteneur. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Compose le contenu de l’élément racine jusqu’au conteneur situé à l’index spécifié inclus.
		 
		 <p>Si le contenu d’un conteneur jusqu’au conteneur situé à l’index spécifié inclus a changé, la méthode renvoie la valeur <codeph>true</codeph>. Si <codeph>index</codeph> est supérieur au nombre de contrôleurs (ou non spécifié), tous les conteneurs sont composés. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer/updateAllControllers()"><linktext>updateAllControllers()</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer/updateToController()"><linktext>updateToController()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:composeToPosition"><apiName>composeToPosition</apiName><shortdesc> 
		 Compose le contenu de l’élément racine jusqu’à la position spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiData>unknown</apiData><apiDesc>Composez au moins jusqu’à cette position dans l’objet TextFlow. Par défaut ou si absolutePosition va au-delà de la fin du flux, composez jusqu’à la fin de ce dernier. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Compose le contenu de l’élément racine jusqu’à la position spécifiée.
		 
		 <p>Si le contenu d’un conteneur jusqu’au conteneur possédant le contenu situé à la position spécifiée inclus a changé, la méthode renvoie la valeur <codeph>true</codeph>. Si <codeph>absolutePosition</codeph> est supérieure à la longueur de TextFlow (ou non spécifiée), l’ensemble du flux est composé. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer/updateAllControllers()"><linktext>updateAllControllers()</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer/updateToController()"><linktext>updateToController()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:compose"><apiName>compose</apiName><shortdesc> 
		 Calcule le nombre de lignes nécessaires à l’affichage du contenu de l’élément racine du flux et les positions de ces lignes dans les conteneurs d’affichage du flux. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
		 Calcule le nombre de lignes nécessaires à l’affichage du contenu de l’élément racine du flux et les positions de ces lignes dans les conteneurs d’affichage du flux. 
		 
		 <p>Les implémentations de cette méthode ne doivent pas actualiser l’affichage, mais doivent enregistrer les résultats afin que les appels suivants de la méthode <codeph>compose()</codeph> ou <codeph>updateAllControllers()</codeph> n’ pas de composition supplémentaire si le contenu du flux n’a pas changé.</p>
		 
		 <p>Si le contenu d’un conteneur a changé, la méthode doit renvoyer la valeur <codeph>true</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer/updateAllControllers()"><linktext>updateAllControllers()</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer/updateToController()"><linktext>updateToController()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:damage"><apiName>damage</apiName><shortdesc> Marquer des lignes comme endommagées et nécessitant une recomposition. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>startPosition</apiItemName><apiType value="int"/><apiDesc>début de la plage à endommager 
		 </apiDesc></apiParam><apiParam><apiItemName>damageLength</apiItemName><apiType value="int"/><apiDesc>nombre de caractères à endommager 
		 </apiDesc></apiParam><apiParam><apiItemName>damageType</apiItemName><apiType value="String"/><apiDesc>type de dommage. Une des classes flashx.textLayout.compose.FlowDamageType
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Marquer des lignes comme endommagées et nécessitant une recomposition. 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.compose.xml#FlowDamageType"><linktext>flashx.textLayout.compose.FlowDamageType</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:findControllerIndexAtPosition"><apiName>findControllerIndexAtPosition</apiName><shortdesc> 
		 Renvoie l’index du contrôleur renfermant le contenu à la position spécifiée. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index du contrôleur du conteneur ou -1 s’il est introuvable. 
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Position du contenu pour lequel l’index du conteneur est recherché. 
		 </apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie l’index du conteneur à renvoyer lorsque la position se situe entre le dernier élément d’un conteneur et le premier élément du conteneur suivant. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie l’index du contrôleur renfermant le contenu à la position spécifiée.  
		 
		 <p>Une position peut être considérée comme étant la division entre deux caractères ou d’autres éléments d’un flux de texte. Si la valeur dans <codeph>absolutePosition</codeph> correspond à une position située entre le dernier caractère d’un conteneur et le premier caractère du suivant, alors le conteneur précédent est renvoyé si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>true</codeph> et le dernier conteneur est renvoyé si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>false</codeph>.</p>
		 
		 <p>La méthode doit renvoyer -1 si le contenu à la position spécifiée n’est pas dans un conteneur ou n’est pas compris dans la plage des positions dans le flux de texte.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:findLineAtPosition"><apiName>findLineAtPosition</apiName><shortdesc> 
		Renvoie l’objet TextFlowLine renfermant le contenu à la position spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet TextFlowLine renfermant le contenu à la position spécifiée ou valeur null s’il est introuvable. 
		
		</apiDesc><apiOperationClassifier>flashx.textLayout.compose:TextFlowLine</apiOperationClassifier></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Position du contenu pour lequel vous voulez obtenir l’objet TextFlowLine. 
		</apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	Spécifie la ligne à renvoyer lorsque la position se situe entre le dernier élément d’une ligne et le premier élément de la ligne suivante.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> 
		Renvoie l’objet TextFlowLine renfermant le contenu à la position spécifiée.
		
		<p>Une position peut être considérée comme étant la division entre deux caractères ou d’autres éléments d’un flux de texte. Si la valeur dans <codeph>absolutePosition</codeph> correspond à une position située entre le dernier élément d’une ligne et le premier élément de la ligne suivante, alors la ligne précédente est renvoyée si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>true</codeph> et la dernière ligne est renvoyée si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>false</codeph>.</p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:findLineIndexAtPosition"><apiName>findLineIndexAtPosition</apiName><shortdesc> 
		 Renvoie le numéro de ligne séquentiel de l’objet TextFlowLine renfermant le contenu à la position spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index de la ligne de texte à la position spécifiée. S’il est introuvable, le considère comme au-delà de la fin et renvoie le nombre de lignes. 
		 	 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Position du contenu pour lequel vous voulez obtenir la ligne de texte.
		 </apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie l’index du conteneur à renvoyer lorsque la position se situe entre la dernière ligne d’un conteneur et la première ligne du conteneur suivant.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie le numéro de ligne séquentiel de l’objet TextFlowLine renfermant le contenu à la position spécifiée. 
		 
		 <p>Le numéro de la première ligne est 0 et celui de la dernière ligne est égal au nombre de lignes moins un. Si la position spécifiée dans <codeph>absolutePosition</codeph> se trouve au-delà de la fin du flux de texte, cette méthode doit renvoyer le numéro qui sera affecté à la prochaine nouvelle ligne ajoutée au flux de texte (qui est égal au nombre de lignes). </p>
		 
		 <p>Une position peut être considérée comme étant la division entre deux caractères ou d’autres éléments d’un flux de texte. Si la valeur dans <codeph>absolutePosition</codeph> correspond à une position située entre la dernière ligne d’un conteneur et la première ligne du suivant, alors le conteneur précédent est renvoyé si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>true</codeph> et le dernier conteneur est renvoyé si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>false</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:getControllerAt"><apiName>getControllerAt</apiName><shortdesc> 
		 Renvoie l’objet ContainerController situé à l’index spécifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet ContainerController à la position spécifiée. 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index de l’objet ContainerController à renvoyer. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie l’objet ContainerController situé à l’index spécifié. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:getControllerIndex"><apiName>getControllerIndex</apiName><shortdesc> 
		 Renvoie l’index de l’objet ContainerController spécifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index de l’objet ContainerController spécifié ou -1 si le contrôleur n’est pas associé à ce compositeur de flux. 
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Référence à l’objet ContainerController à rechercher. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie l’index de l’objet ContainerController spécifié. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:getLineAt"><apiName>getLineAt</apiName><shortdesc> 
		 Renvoie la ligne avec le numéro de ligne spécifié. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet TextFlowLine doté du numéro de ligne spécifié ou valeur <codeph>null</codeph> s’il est introuvable.
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.compose:TextFlowLine</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>	Numéro de ligne de l’objet TextFlowLine à renvoyer.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie la ligne avec le numéro de ligne spécifié.  
		 
		 <p>La liste des lignes est numérotée de zéro au nombre de lignes moins un. Si la valeur dans <codeph>index</codeph> n’est pas dans les limites de la liste des lignes, cette fonction renvoie la valeur <codeph>null</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:interactionManagerChanged"><apiName>interactionManagerChanged</apiName><shortdesc>
		 Appelé par l’objet TextFlow lorsque le gestionnaire d’interaction change. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newInteractionManager</apiItemName><apiOperationClassifier>flashx.textLayout.edit:ISelectionManager</apiOperationClassifier><apiDesc>La nouvelle occurrence ISelectionManager. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Appelé par l’objet TextFlow lorsque le gestionnaire d’interaction change.  
		 
		 <p>Les implémentations de l’interface IFlowComposer doivent mettre à jour les écouteurs d’événement et les propriétés qui référencent le gestionnaire d’interaction. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:isDamaged"><apiName>isDamaged</apiName><shortdesc> 
		 Indique si des objets TextFlowLine entre le début du flux et la ligne renfermant le contenu à la position spécifiée sont signalés comme étant endommagés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si un des objets TextFlowLine entre le début du flux jusqu’à la ligne renfermant le contenu à la position <codeph>absolutePosition</codeph> sont signalés comme étant endommagés.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Dernière position dans la zone ciblée 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Indique si des objets TextFlowLine entre le début du flux et la ligne renfermant le contenu à la position spécifiée sont signalés comme étant endommagés. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:removeAllControllers"><apiName>removeAllControllers</apiName><shortdesc> 
		 Supprime tous les contrôleurs à partir de cette occurrence IFlowComposer. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Supprime tous les contrôleurs à partir de cette occurrence IFlowComposer.  
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:removeControllerAt"><apiName>removeControllerAt</apiName><shortdesc> 
		 Supprime le contrôleur situé à l’index spécifié de cette occurrence IFlowComposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index de l’objet ContainerController à supprimer.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Supprime le contrôleur situé à l’index spécifié de cette occurrence IFlowComposer.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:removeController"><apiName>removeController</apiName><shortdesc> 
		 Supprime un contrôleur à partir de cette occurrence IFlowComposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Occurrence ContainerController à supprimer.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Supprime un contrôleur à partir de cette occurrence IFlowComposer. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:setFocus"><apiName>setFocus</apiName><shortdesc> 
		 Définit le focus sur le conteneur qui contient l’emplacement spécifié par le paramètre absolutePosition. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Spécifie la position dans le flux de texte du conteneur qui doit recevoir le focus. 
		 </apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Si la valeur est true et si la position se trouve avant le premier caractère dans un conteneur, définit le focus à la fin du conteneur précédent.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Définit le focus sur le conteneur qui contient l’emplacement spécifié par le paramètre <codeph>absolutePosition</codeph>. 
		 
		 <p>L’implémentation est chargée de définir ce que signifie la définition du focus. Par exemple, une implémentation peut utiliser la propriété <codeph>focus</codeph> intégrée de l’objet Stage (à condition que les conteneurs soient des objets InteractiveObjects) ou l’implémentation peut gérer le focus de toute autre façon. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Stage/focus"><linktext>flash.display.Stage.focus</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:setRootElement"><apiName>setRootElement</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newRootElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:updateAllControllers"><apiName>updateAllControllers</apiName><shortdesc> 
		 Compose le contenu de l’élément racine et met à jour l’affichage. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
		 Compose le contenu de l’élément racine et met à jour l’affichage.   
		 
		 <p>La présentation du texte se compose généralement de deux étapes : composition et affichage. Dans la phase de composition, le compositeur de flux calcule le nombre de lignes nécessaires à l’affichage du contenu, ainsi que la position de ces lignes dans les conteneurs d’affichage du flux. Dans la phase d’affichage, le compositeur de flux met à jour les enfants de l’objet d’affichage de ses conteneurs. La méthode <codeph>updateAllControllers()</codeph> est censée effectuer les deux phases. Une implémentation efficace effectuera le suivi des modifications apportées au contenu afin d’effectuer un cycle complet de composition et d’affichage uniquement lorsque cela est nécessaire.</p>
		 
		 <p>Cette méthode met à jour toutes les lignes de texte et la liste d’affichage immédiatement et de façon synchronisée. </p>
		 
		 <p>Si le contenu d’un conteneur a changé, la méthode doit renvoyer la valeur <codeph>true</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:updateLengths"><apiName>updateLengths</apiName><shortdesc> Mettez à jour les longueurs dans les lignes pour conserver la correspondance de l’objet TextFlow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>startPosition</apiItemName><apiType value="int"/><apiDesc>Début de modification en longueur.
		 </apiDesc></apiParam><apiParam><apiItemName>deltaLength</apiItemName><apiType value="int"/><apiDesc>Changement du nombre de caractères.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> Mettez à jour les longueurs dans les lignes pour conserver la correspondance de l’objet TextFlow. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:updateToController"><apiName>updateToController</apiName><shortdesc> 
		 Compose et met à jour l’affichage jusqu’au conteneur situé à l’index spécifié inclus. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>unknown</apiData><apiDesc>Index du dernier conteneur à mettre à jour. Par défaut, tous les conteneurs sont mis à jour.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Compose et met à jour l’affichage jusqu’au conteneur situé à l’index spécifié inclus. 
		 
		 <p>La méthode <codeph>updateToController()</codeph> est censée à la fois composer le contenu et mettre à jour l’affichage afin que tous les conteneurs jusqu’à celui qui est situé à l’index spécifié inclus soient à jour. Par exemple, si vous disposez d’une chaîne de vingt conteneurs et spécifiez l’index 10, <codeph>updateToController()</codeph> doit s’assurer que les dix premiers conteneurs (index 0 à 9) sont composés et affichés. La composition peut s’arrêter à ce niveau. Si la valeur de <codeph>controllerIndex</codeph> est -1 (ou n’est pas spécifiée), tous les conteneurs doivent être mis à jour.</p>
		 
		 <p>Cette méthode met à jour toutes les lignes de texte et la liste d’affichage immédiatement et de façon synchronisée. </p>
		 
		 <p>Si le contenu d’un conteneur a changé, la méthode doit renvoyer la valeur <codeph>true</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:composing:get"><apiName>composing</apiName><shortdesc> 
		 True si le compositeur de flux exécute actuellement l’opération de composition. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		 True si le compositeur de flux exécute actuellement l’opération de composition. 
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:damageAbsoluteStart:get"><apiName>damageAbsoluteStart</apiName><shortdesc> 
		 Première position non valide dans l’élément racine, comme position absolue à partir du début du flux. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Première position non valide dans l’élément racine, comme position absolue à partir du début du flux. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:numControllers:get"><apiName>numControllers</apiName><shortdesc> 
		 Nombre de conteneurs affectés à cette occurrence IFlowComposer. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Nombre de conteneurs affectés à cette occurrence IFlowComposer.  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:numLines:get"><apiName>numLines</apiName><shortdesc> 
		 Nombre total de lignes dans le flux. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		 Nombre total de lignes dans le flux.  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:rootElement:get"><apiName>rootElement</apiName><shortdesc> 
		 Elément racine associé à cette occurrence IFlowComposer. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiValueClassifier></apiValueDef><apiDesc> 
		 Elément racine associé à cette occurrence IFlowComposer.  
		 
		 <p>Seul un objet TextFlow peut être un élément racine. </p>
		  
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#ContainerFormattedElement"><linktext>ContainerFormattedElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:IFlowComposer:flashx.textLayout.compose:IFlowComposer:swfContext:get"><apiName>swfContext</apiName><shortdesc> 
		 L’occurrence ISWFContext à utiliser pour les appels qui doivent être effectués dans un contexte SWF spécifique. Les implémentations de IFlowComposer doivent permettre la définition de cette propriété de façon à ce que les utilisateurs de l’interface puissent créer des lignes dans un autre contexte SWF que celui qui contient l’implémentation. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.compose:ISWFContext</apiValueClassifier></apiValueDef><apiDesc> 
		 L’occurrence ISWFContext à utiliser pour les appels qui doivent être effectués dans un contexte SWF spécifique   
		 
		 <p>Les implémentations de IFlowComposer doivent permettre la définition de cette propriété de façon à ce que les utilisateurs de l’interface puissent créer des lignes dans un autre contexte SWF que celui qui contient l’implémentation. Une implémentation par défaut de l’objet ISWFContext doit également être fournie.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.elements.ISWFContext.xml"><linktext>ISWFContext</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:StandardFlowComposer"><apiName>StandardFlowComposer</apiName><shortdesc> 
	La classe StandardFlowComposer fournit un compositeur standard et un gestionnaire de conteneur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><Exclude kind="method" name="createBackgroundManager"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.compose:IFlowComposer</apiBaseInterface><apiBaseClassifier>flashx.textLayout.compose:FlowComposerBase</apiBaseClassifier></apiClassifierDef><apiDesc> 
	La classe StandardFlowComposer fournit un compositeur standard et un gestionnaire de conteneur. 
	
	<p>Chaque appel de la méthode <codeph>compose()</codeph> ou <codeph>updateAllControllers()</codeph> normalise d’abord le flux de texte. Le processus de normalisation vérifie les parties de l’objet TextFlow qui ont été modifiées et adopte l’approche suivante : 
	<ol>
	<li> Supprime entièrement les objets FlowLeafElement et SubParagraphGroupElement vides.</li>
	<li> Fusionne les plages associées dont les attributs sont identiques. </li>
	<li> Ajoute un paragraphe vide si un flux est entièrement vide.</li>
 	</ol>
 	</p>
	
	<p>Pour utiliser une classe StandardFlowComposer, affectez-la à la propriété <codeph>flowComposer</codeph> d’un objet TextFlow. Appelez la méthode <codeph>updateAllControllers()</codeph> pour mettre en forme et afficher le texte dans les conteneurs associés au compositeur de flux.</p>
	
	<p><b>Remarque :</b> pour les flux de texte simples et statiques, vous pouvez également utiliser la méthode des classes de fabrique de ligne de texte. Ces classes de fabrique créent généralement des lignes plus facilement qu’un compositeur de flux, mais elles ne prennent pas en charge les modifications, les changements dynamiques et l’interaction de l’utilisateur. </p>
	
	</apiDesc><example conref="examples\StandardFlowComposer_ClassExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/flowComposer"><linktext>flashx.textLayout.elements.TextFlow.flowComposer</linktext></link></related-links><apiConstructor id="flashx.textLayout.compose:StandardFlowComposer:StandardFlowComposer"><apiName>StandardFlowComposer</apiName><shortdesc> 
		Crée un objet StandardFlowComposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> 
		Crée un objet StandardFlowComposer. 
		
		<p>Pour utiliser un objet StandardFlowComposer, affectez-le à la propriété <codeph>flowComposer</codeph> d’un objet TextFlow. Appelez la méthode <codeph>updateAllControllers()</codeph> pour mettre en forme et afficher le texte dans les conteneurs associés au compositeur de flux.</p>
		
		</apiDesc><example conref="examples\StandardFlowComposer_constructor.as"/></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:addControllerAt"><apiName>addControllerAt</apiName><shortdesc conref="IFlowComposer#addControllerAt()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Objet ContainerController à ajouter. 
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index numérique qui indique la position dans la liste des contrôleurs à laquelle insérer l’objet ContainerController. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#addControllerAt()"> </apiDesc><example conref="examples\StandardFlowComposer_addControllerAt.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:addController"><apiName>addController</apiName><shortdesc conref="IFlowComposer#addController()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Objet ContainerController à ajouter. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#addController()"> </apiDesc><example conref="examples\StandardFlowComposer_addController.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:composeToController"><apiName>composeToController</apiName><shortdesc conref="IFlowComposer#composeToController()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>unknown</apiData><apiDesc>Composez au moins jusqu’à ce conteneur dans l’objet TextFlow Si controllerIndex est supérieur au nombre de contrôleurs, composez jusqu’à la fin du dernier conteneur. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#composeToController()"> </apiDesc><example conref="examples\StandardFlowComposer_composeToController.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:composeToPosition"><apiName>composeToPosition</apiName><shortdesc conref="IFlowComposer#composeToPosition()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiData>unknown</apiData><apiDesc>Composez au moins jusqu’à cette position dans l’objet TextFlow. Par défaut ou si absolutePosition va au-delà de la fin du flux, composez jusqu’à la fin de ce dernier. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#composeToPosition()"> </apiDesc><example conref="examples\StandardFlowComposer_composeToPosition.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:compose"><apiName>compose</apiName><shortdesc> 
		 Calcule le nombre de lignes nécessaires à l’affichage du contenu de l’élément racine du flux et les positions de ces lignes dans les conteneurs d’affichage du flux. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
		 Calcule le nombre de lignes nécessaires à l’affichage du contenu de l’élément racine du flux et les positions de ces lignes dans les conteneurs d’affichage du flux. 
		 
		 <p>La méthode <codeph>compose()</codeph> ne compose du contenu que s’il a changé depuis la dernière opération de composition. Les résultats sont enregistrés afin que les appels suivants de la méthode <codeph>compose()</codeph> ou <codeph>updateAllControllers()</codeph> n’ pas de composition supplémentaire si le contenu du flux n’a pas changé.</p>
		 
		 <p>Si le contenu d’un conteneur a changé, la méthode renvoie la valeur <codeph>true </codeph>.</p>
		 
		 </apiDesc><example conref="examples\StandardFlowComposer_compose.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer/updateAllControllers()"><linktext>updateAllControllers()</linktext></link><link href="flashx.textLayout.compose.xml#StandardFlowComposer/updateToController()"><linktext>updateToController()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:findControllerIndexAtPosition"><apiName>findControllerIndexAtPosition</apiName><shortdesc> 
		 Renvoie l’index du contrôleur renfermant le contenu à la position spécifiée. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index du contrôleur du conteneur ou -1 s’il est introuvable. 
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Position du contenu pour lequel l’index du conteneur est recherché. 
		 </apiDesc></apiParam><apiParam><apiItemName>preferPrevious</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie l’index du conteneur à renvoyer lorsque la position se situe entre le dernier élément d’un conteneur et le premier élément du conteneur suivant. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie l’index du contrôleur renfermant le contenu à la position spécifiée.  
		 
		 <p>Une position peut être considérée comme étant la division entre deux caractères ou d’autres éléments d’un flux de texte. Si la valeur dans <codeph>absolutePosition</codeph> correspond à une position située entre le dernier caractère d’un conteneur et le premier caractère du suivant, alors le conteneur précédent est renvoyé si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>true</codeph> et le dernier conteneur est renvoyé si le paramètre <codeph>preferPrevious</codeph> est défini sur <codeph>false</codeph>.</p>
		 
		 <p>La méthode renvoie -1 si le contenu à la position spécifiée n’est pas dans un conteneur ou n’est pas compris dans la plage des positions dans le flux de texte. </p>
		 
		 </apiDesc><example conref="examples\StandardFlowComposer_findControllerIndexAtPosition.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:getAbsoluteStart"><apiName>getAbsoluteStart</apiName><shortdesc> 
		 Renvoie la position absolue du premier élément de contenu dans l’objet ContainerController spécifié. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Position située avant le premier caractère ou le graphique dans l’objet ContainerController. 
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Objet ContainerController associé à ce compositeur de flux. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Renvoie la position absolue du premier élément de contenu dans l’objet ContainerController spécifié. 
		 
		 <p>Une position se calcule en comptabilisant la division entre deux caractères ou d’autres éléments d’un flux de texte. La position qui précède le premier élément d’un flux est zéro. Une position absolue est la position à partir du début du flux. </p>
		 
		 </apiDesc><example conref="examples\StandardFlowComposer_getAbsoluteStart.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:getControllerAt"><apiName>getControllerAt</apiName><shortdesc conref="IFlowComposer#getControllerAt()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Objet ContainerController à la position spécifiée. 
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index de l’objet ContainerController à renvoyer. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#getControllerAt()"> </apiDesc><example conref="examples\StandardFlowComposer_getControllerAt.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:getControllerIndex"><apiName>getControllerIndex</apiName><shortdesc conref="IFlowComposer#getControllerIndex()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata><asCustoms><player>version AIR 1.5
	 	 </player></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/><apiDesc>Index de l’objet ContainerController spécifié ou -1 si le contrôleur n’est pas associé à ce compositeur de flux. 
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Référence à l’objet ContainerController à rechercher. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#getControllerIndex()"> </apiDesc><example conref="examples\StandardFlowComposer_getControllerIndex.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:interactionManagerChanged"><apiName>interactionManagerChanged</apiName><shortdesc>
		 Appelé par l’objet TextFlow lorsque le gestionnaire d’interaction change. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newInteractionManager</apiItemName><apiOperationClassifier>flashx.textLayout.edit:ISelectionManager</apiOperationClassifier><apiDesc>La nouvelle occurrence ISelectionManager. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Appelé par l’objet TextFlow lorsque le gestionnaire d’interaction change.  
		 
		 <p>Cette fonction est appelée automatiquement. Le code n’a généralement pas besoin d’appeler cette méthode. Les classes qui étendent la classe StandardFlowComposer peuvent annuler cette méthode pour mettre à jour les écouteurs d’événement et autres propriétés liées au gestionnaire d’interaction. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:protected:preCompose"><apiName>preCompose</apiName><shortdesc> Renvoie la valeur true si la composition est nécessaire. Sinon, la valeur false est renvoyée. </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> Renvoie la valeur true si la composition est nécessaire. Sinon, la valeur false est renvoyée. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:removeAllControllers"><apiName>removeAllControllers</apiName><shortdesc conref="IFlowComposer#removeAllControllers()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="IFlowComposer#removeAllControllers()"> </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:removeControllerAt"><apiName>removeControllerAt</apiName><shortdesc conref="IFlowComposer#removeControllerAt()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index de l’objet ContainerController à supprimer.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#removeControllerAt()"> </apiDesc><example conref="examples\StandardFlowController_removeControllerAt.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:removeController"><apiName>removeController</apiName><shortdesc conref="IFlowComposer#removeController()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controller</apiItemName><apiOperationClassifier>flashx.textLayout.container:ContainerController</apiOperationClassifier><apiDesc>Occurrence ContainerController à supprimer.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#removeController()"> </apiDesc><example conref="examples\StandardFlowController_removeController.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:setFocus"><apiName>setFocus</apiName><shortdesc> 
		 Définit le focus sur le conteneur qui contient l’emplacement spécifié par le paramètre absolutePosition. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>absolutePosition</apiItemName><apiType value="int"/><apiDesc>Spécifie la position dans le flux de texte du conteneur qui doit recevoir le focus. 
		 </apiDesc></apiParam><apiParam><apiItemName>leanLeft</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Si la valeur est true et si la position se trouve avant le premier caractère dans un conteneur, définit le focus à la fin du conteneur précédent. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Définit le focus sur le conteneur qui contient l’emplacement spécifié par le paramètre <codeph>absolutePosition</codeph>. 
		 
		 <p>L’objet StandardFlowComposer appelle la méthode <codeph>setFocus()</codeph> de l’objet ContainerController contenant la position spécifiée du flux de texte.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Stage/focus"><linktext>flash.display.Stage.focus</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:setRootElement"><apiName>setRootElement</apiName><shortdesc conref="IFlowComposer#setRootElement()"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newRootElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiOperationClassifier></apiParam></apiOperationDef><apiDesc conref="IFlowComposer#setRootElement()"> </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:updateAllControllers"><apiName>updateAllControllers</apiName><shortdesc> 
		 Compose le contenu de l’élément racine et met à jour l’affichage. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est true si des modifications ont eu lieu. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
		 Compose le contenu de l’élément racine et met à jour l’affichage.   
		 
		 <p>La présentation du texte se compose de deux étapes : composition et affichage. Dans la phase de composition, le compositeur de flux calcule le nombre de lignes nécessaires à l’affichage du contenu, ainsi que la position de ces lignes dans les conteneurs d’affichage du flux. Dans la phase d’affichage, le compositeur de flux met à jour les enfants de l’objet d’affichage de ses conteneurs. La méthode <codeph>updateAllControllers()</codeph> initialise les deux phases en séquence. L’objet StandardFlowComposer effectue le suivi des modifications apportées au contenu afin d’effectuer un cycle complet de composition et d’affichage uniquement lorsque cela est nécessaire. </p>
		 
		 <p>Cette méthode met à jour toutes les lignes de texte et la liste d’affichage immédiatement et de façon synchronisée. </p>
		 
		 <p>Si le contenu d’un conteneur est modifié, la méthode renvoie la valeur <codeph>true</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:StandardFlowComposer:updateToController"><apiName>updateToController</apiName><shortdesc> 
		 Compose et met à jour l’affichage jusqu’au conteneur situé à l’index spécifié inclus. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph>, si des modifications ont eu lieu.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>unknown</apiData><apiDesc>Index du dernier conteneur à mettre à jour. Par défaut, tous les conteneurs sont mis à jour.
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 Compose et met à jour l’affichage jusqu’au conteneur situé à l’index spécifié inclus. 
		 
		 <p>La méthode <codeph>updateToController()</codeph> compose le contenu et met à jour l’affichage de tous les conteneurs jusqu’au conteneur situé à l’index spécifié inclus. Par exemple, si vous disposez d’une chaîne de 20 conteneurs et spécifiez l’index 10, <codeph>updateToController()</codeph> vérifie que les dix premiers conteneurs (index 0 à 9) sont composés et affichés. La composition s’arrête à ce niveau. Si la valeur de <codeph>controllerIndex</codeph> est -1 (ou n’est pas spécifiée), tous les conteneurs sont mis à jour.</p>
		 
		 <p>Cette méthode met à jour toutes les lignes de texte et la liste d’affichage immédiatement et de façon synchronisée. </p>
		 
		 <p>Si le contenu d’un conteneur est modifié, la méthode renvoie la valeur <codeph>true</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.compose:StandardFlowComposer:composing:get"><apiName>composing</apiName><shortdesc> 
		 La valeur est true si le compositeur de flux exécute actuellement l’opération de composition. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		 True si le compositeur de flux exécute actuellement l’opération de composition.  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:StandardFlowComposer:numControllers:get"><apiName>numControllers</apiName><shortdesc conref="IFlowComposer#numControllers"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="IFlowComposer#numControllers"> </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:StandardFlowComposer:rootElement:get"><apiName>rootElement</apiName><shortdesc conref="IFlowComposer#rootElement"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiValueClassifier></apiValueDef><apiDesc conref="IFlowComposer#rootElement"> </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:IVerticalJustificationLine"><apiName>IVerticalJustificationLine</apiName><shortdesc> 
	 L’interface IVerticalJustificationLine définit les méthodes et les propriétés nécessaires à la justification verticale de lignes de texte. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> 
	 L’interface IVerticalJustificationLine définit les méthodes et les propriétés nécessaires à la justification verticale de lignes de texte. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.compose:IVerticalJustificationLine:flashx.textLayout.compose:IVerticalJustificationLine:ascent:get"><apiName>ascent</apiName><shortdesc conref="flash.text.engine.TextLine#ascent"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.text.engine.TextLine#ascent"> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:IVerticalJustificationLine:flashx.textLayout.compose:IVerticalJustificationLine:descent:get"><apiName>descent</apiName><shortdesc conref="flash.text.engine.TextLine#descent"> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.text.engine.TextLine#descent"> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:IVerticalJustificationLine:flashx.textLayout.compose:IVerticalJustificationLine:height:get"><apiName>height</apiName><shortdesc> Largeur de la ligne, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Largeur de la ligne, en pixels.
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IVerticalJustificationLine/width"><linktext>largeur</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:IVerticalJustificationLine:flashx.textLayout.compose:IVerticalJustificationLine:x:get"><apiName>x</apiName><shortdesc> 
		 La position horizontale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir de la gauche du conteneur. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 La position horizontale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir de la gauche du conteneur. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IVerticalJustificationLine/y"><linktext>y</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:IVerticalJustificationLine:flashx.textLayout.compose:IVerticalJustificationLine:y:get"><apiName>y</apiName><shortdesc> 
		 La position verticale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir du haut du conteneur. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> 
		 La position verticale de la ligne par rapport à son conteneur, exprimée sous la forme du décalage en pixels à partir du haut du conteneur. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IVerticalJustificationLine/x"><linktext>x</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:TextFlowLineLocation"><apiName>TextFlowLineLocation</apiName><shortdesc> 
	 La classe TextFlowLineLocation est une classe d’énumération qui définit des constantes pour spécifier l’emplacement d’une ligne d’un paragraphe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 La classe TextFlowLineLocation est une classe d’énumération qui définit des constantes pour spécifier l’emplacement d’une ligne d’un paragraphe. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flashx.textLayout.compose.ParagraphElement.xml"><linktext>ParagraphElement</linktext></link><link href="" invalidHref="flashx.textLayout.compose.TextFlow.xml"><linktext>TextFlow</linktext></link></related-links><apiValue id="flashx.textLayout.compose:TextFlowLineLocation:FIRST"><apiName>FIRST</apiName><shortdesc> Spécifie la première ligne d’un paragraphe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc> Spécifie la première ligne d’un paragraphe.  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLineLocation:LAST"><apiName>LAST</apiName><shortdesc> Spécifie la dernière ligne d’un paragraphe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc> Spécifie la dernière ligne d’un paragraphe. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLineLocation:MIDDLE"><apiName>MIDDLE</apiName><shortdesc> Spécifie une ligne intermédiaire d’un paragraphe (ni la première ni la dernière ligne). </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc> Spécifie une ligne intermédiaire d’un paragraphe (ni la première ni la dernière ligne).  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.compose:TextFlowLineLocation:ONLY"><apiName>ONLY</apiName><shortdesc> Spécifie à la fois les première et dernière lignes dans un paragraphe. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="uint"/></apiValueDef><apiDesc> Spécifie à la fois les première et dernière lignes dans un paragraphe. 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:TextLineRecycler"><apiName>TextLineRecycler</apiName><shortdesc> 
	 La classe TextLineRecycler prend en charge le recyclage des objets TextLine. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 La classe TextLineRecycler prend en charge le recyclage des objets TextLine. Certaines versions de Flash Player prennent en charge une méthode recreateTextLine. La transmission des objets TextLine au programme de recyclage les rend réutilisables. Cette technique permet d’améliorer les performances de Flash Player. 
	 
	 </apiDesc></apiClassifierDetail><apiOperation id="flashx.textLayout.compose:TextLineRecycler:addLineForReuse"><apiName>addLineForReuse</apiName><shortdesc>
		 Ajoutez un objet TextLine au groupe à réutiliser. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>textLine</apiItemName><apiType value="flash.text.engine:TextLine"/></apiParam></apiOperationDef><apiDesc>
		 Ajoutez un objet TextLine au groupe à réutiliser. La valeur de la propriété userData ou du parent des objets TextLine à réutiliser doit être null.  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.compose:TextLineRecycler:getLineForReuse"><apiName>getLineForReuse</apiName><shortdesc>
		 Renvoyez un objet TextLine du groupe à réutiliser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="flash.text.engine:TextLine"/></apiReturn></apiOperationDef><apiDesc>
		 Renvoyez un objet TextLine du groupe à réutiliser. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.compose:TextLineRecycler:textLineRecyclerEnabled:get"><apiName>textLineRecyclerEnabled</apiName><shortdesc> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.compose:FlowDamageType"><apiName>FlowDamageType</apiName><shortdesc>
	  La classe FlowDamageType est une classe d’énumération qui définit des types de dommages pour les méthodes et événements. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  La classe FlowDamageType est une classe d’énumération qui définit des types de dommages pour les méthodes et événements. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.compose:FlowDamageType:GEOMETRY"><apiName>GEOMETRY</apiName><shortdesc>
		 Valeur utilisée pour définir la propriété de validité si la ligne a été annulée par d’autres lignes en déplacement. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>geometry</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  Valeur utilisée pour définir la propriété de <codeph>validité</codeph> si la ligne a été annulée par d’autres lignes en déplacement La ligne de texte peut ou non avoir besoin d’être recréée à la prochaine opération du composeur.  
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#TextFlowLine/validity"><linktext>flashx.textLayout.compose.TextFlowLine.validity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.compose:FlowDamageType:INVALID"><apiName>INVALID</apiName><shortdesc> 
		 Spécifie le type de dommage utilisé par IFlowComposer lors du traitement des dommages. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 Spécifie le type de dommage utilisé par IFlowComposer lors du traitement des dommages. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#TextFlowLine/validity"><linktext>flashx.textLayout.compose.TextFlowLine.validity</linktext></link></related-links></apiValue></apiClassifier></apiPackage>