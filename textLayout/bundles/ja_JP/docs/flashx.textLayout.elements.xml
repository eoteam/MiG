<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.elements"><apiName>flashx.textLayout.elements</apiName><apiDetail/><apiClassifier id="flashx.textLayout.elements:FlowLeafElement"><apiName>FlowLeafElement</apiName><shortdesc> フロー階層の最下位に表示される FlowElements の基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowElement</apiBaseClassifier></apiClassifierDef><apiDesc> フロー階層の最下位に表示される FlowElements の基本クラスです。FlowLeafElement オブジェクトには子がなく、InlineGraphicElement オブジェクトおよび SpanElement オブジェクトが含まれます。
	
	</apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:FlowLeafElement:FlowLeafElement"><apiName>FlowLeafElement</apiName><shortdesc> 
		 基本クラス - new FlowLeafElement() を呼び出すと、エラー例外がスローされます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> 
		 基本クラス - new FlowLeafElement() を呼び出すと、エラー例外がスローされます。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:FlowLeafElement:getComputedFontMetrics"><apiName>getComputedFontMetrics</apiName><shortdesc> この範囲の FontMetrics オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>この範囲に関連付けられたフォントメトリクス
		 </apiDesc><apiType value="flash.text.engine:FontMetrics"/></apiReturn></apiOperationDef><apiDesc> この範囲の FontMetrics オブジェクトを返します。FontMetrics オブジェクトのプロパティは、指定されたフォントの emBox、取り消し線位置、取り消し線太さ、下線位置および下線太さを記述します。 
		 
 		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.FontMetrics.xml"><linktext>flash.text.engine.FontMetrics</linktext></link><link href="" invalidHref="flash.text.engine.xml#ElementFormat/getFontMetrics"><linktext>flash.text.engine.ElementFormat.getFontMetrics</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowLeafElement:getNextLeaf"><apiName>getNextLeaf</apiName><shortdesc>
		 次の FlowLeafElement オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>次の FlowLeafElement、または末尾の場合は null
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>limitElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowGroupElement</apiOperationClassifier><apiData>null</apiData><apiDesc>検索を終了する最後のリーフを含む FlowGroupElement を指定します。null 値（デフォルト）は、エレメントがなくなるまで検索することを意味します。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 次の FlowLeafElement オブジェクトを返します。  
		 
		 </apiDesc><example conref="examples\FlowLeafElement_getNextLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowLeafElement:getPreviousLeaf"><apiName>getPreviousLeaf</apiName><shortdesc>
		 前の FlowLeafElement オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>前の leafElement、または末尾の場合は null
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>limitElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowGroupElement</apiOperationClassifier><apiData>null</apiData><apiDesc>検索を終了する最初のリーフを含む FlowGroupElement を指定します。null 値（デフォルト）は、エレメントがなくなるまで検索することを意味します。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 前の FlowLeafElement オブジェクトを返します。  
		 
		 </apiDesc><example conref="examples\FlowLeafElement_getPreviousLeafExample.as"/></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:FlowLeafElement:computedFormat:get"><apiName>computedFormat</apiName><shortdesc> 
		 このエレメントに有効な計算済みの文字フォーマット属性です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		 このエレメントに有効な計算済みの文字フォーマット属性です。属性の継承を考慮します。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowLeafElement:text:get"><apiName>text</apiName><shortdesc>
		 次の FlowLeafElement に関連付けられたテキストです。SpanElement サブクラスの値は、それが ParagraphELement の最後の範囲である場合、textLength より 1 文字少なくなります。BreakElement サブクラスの値は、U+2028 です。TabElement サブクラスの値は、tab です。InlineGraphicElement サブクラスの値は、U+FDEF です。
		 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 次の FlowLeafElement に関連付けられたテキストです。
		 <p><ul>
		 <li>SpanElement サブクラスの値は、それが ParagraphELement の最後の範囲である場合、<codeph>textLength</codeph> より 1 文字少なくなります。</li>
		 <li>BreakElement サブクラスの値は、U+2028 です。</li>
		 <li>TabElement サブクラスの値は、tab です。</li>
		 <li>InlineGraphicElement サブクラスの値は、U+FDEF です。</li>
		 </ul></p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#SpanElement/replaceText()"><linktext>flashx.textLayout.elements.SpanElement.replaceText()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:SpecialCharacterElement"><apiName>SpecialCharacterElement</apiName><shortdesc> SpecialCharacterElement クラスは、特殊文字を表すエレメントの抽象基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:SpanElement</apiBaseClassifier></apiClassifierDef><apiDesc> SpecialCharacterElement クラスは、特殊文字を表すエレメントの抽象基本クラスです。
	 
	 <p>SpecialCharacterElement オブジェクトを直接作成することはできません。<codeph>new SpecialCharacterElement()</codeph> を呼び出すと、エラー例外がスローされます。</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#BreakElement"><linktext>BreakElement</linktext></link><link href="flashx.textLayout.elements.xml#TabElement"><linktext>TabElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:SpecialCharacterElement:SpecialCharacterElement"><apiName>SpecialCharacterElement</apiName><shortdesc>  
		 基本クラス - new SpecialCharacterElement() を呼び出すと、エラー例外がスローされます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>  
		 基本クラス - <codeph>new SpecialCharacterElement()</codeph> を呼び出すと、エラー例外がスローされます。
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:InlineGraphicElementStatus"><apiName>InlineGraphicElementStatus</apiName><shortdesc> InlineGraphicElementStatus クラスは、InLineGraphicElement.status の値をチェックするための一連の定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> InlineGraphicElementStatus クラスは、<codeph>InLineGraphicElement.status</codeph> の値をチェックするための一連の定数を定義します。
     
     </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/status"><linktext>InlineGraphicElement.status</linktext></link></related-links><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:ERROR"><apiName>ERROR</apiName><shortdesc> 参照先グラフィックの読み込み中にエラーが発生しました。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc> 参照先グラフィックの読み込み中にエラーが発生しました。 
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:LOADING"><apiName>LOADING</apiName><shortdesc> URL を表すグラフィックエレメントの読み込みが開始されました（完了はしていません）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc> URL を表すグラフィックエレメントの読み込みが開始されました（完了はしていません）。  
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:LOAD_PENDING"><apiName>LOAD_PENDING</apiName><shortdesc> グラフィックエレメントは、読み込み済みでない URL です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadPending</apiData><apiType value="String"/></apiValueDef><apiDesc> グラフィックエレメントは、読み込み済みでない URL です。  
    	 
    	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:READY"><apiName>READY</apiName><shortdesc> グラフィックは完全に読み込まれ、適切にサイズ変更されています。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc> グラフィックは完全に読み込まれ、適切にサイズ変更されています。 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElementStatus:SIZE_PENDING"><apiName>SIZE_PENDING</apiName><shortdesc> 
         自動またはパーセント値により幅と高さが指定されたグラフィックエレメントは完全に読み込まれましたが、再構成されていません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sizePending</apiData><apiType value="String"/></apiValueDef><apiDesc> 
         自動またはパーセント値により幅と高さが指定されたグラフィックエレメントは完全に読み込まれましたが、再構成されていません。次の再構成で、グラフィックエレメントの実際のサイズが計算されます。 
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:TextFlow"><apiName>TextFlow</apiName><shortdesc>
	 TextFlow クラスは、ストーリーのすべてのテキストコンテンツを管理する役割を果たします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 TextFlow クラスは、ストーリーのすべてのテキストコンテンツを管理する役割を果たします。TextLayout 内で、テキストはエレメントの階層ツリーに保存されます。TextFlow は、エレメントツリーのルートオブジェクトです。ツリー上のすべてのエレメントは、基本クラスの FlowElement から派生されます。 
	 
	 <p>TextFlow オブジェクトは、ParagraphElement オブジェクトおよび DivElement オブジェクトを子として持つことができます。div（DivElement オブジェクト）は、段落（ParagraphElement オブジェクト）のグループを表します。段落は、SpanElement オブジェクト、InlineGraphicElement オブジェクト、LinkElement オブジェクトおよび TCYElement オブジェクトを子として持つことができます。</p>
	 
	 <p>範囲（SpanElement）は、段落内で同じ属性を持つテキスト範囲です。イメージ（InlineGraphicElement）は、テキストの行内で単一行として表示される任意のグラフィックを表します。LinkElement は、ハイパーリンク（HTML の <codeph>a</codeph> タグ）を表し、これに、複数の範囲を含めることができます。TCYElement オブジェクトは、縦書きの行の中の横書きテキストのように、行に対して垂直に表示される短いテキストの実行がある場合に日本語のテキストで使用されます。TCYElement にも、複数の範囲を含めることができます。</p>
	 
	 <p>TextFlow もまた、すべてのコンテナレベルのブロックエレメントのルートクラスである ContainerFormattedElement から派生されます。</p>
 	 <p>次の図で、TextFlow オブジェクトに対する他のエレメント（範囲や段落など）の関係を示します。</p>
 	 <p><adobeimage alt="TextFlow 階層の例" href="../../../images/textLayout_textFlowHierarchy.gif"/></p>
 	 
 	 <p>各 TextFlow オブジェクトには、対応する Configuration オブジェクトがあり、これを使用して、文字と段落のフォーマットおよびコンテナフォーマットの初期値を指定できます。また、これを使用して、選択範囲、リンク、フォーカスおよびスクロールの属性を指定できます。<codeph>TextFlow()</codeph> コンストラクターに Configuration オブジェクトをパラメーターとして入力すると、<codeph>TextFlow.configuration</codeph> プロパティを介してアクセス可能な読み取り専用のスナップショットが作成されます。TextFlow の構成は、作成後に変更できません。Configuration を指定しない場合は、<codeph>TextFlow.defaultConfiguration</codeph> プロパティを介してデフォルトの構成にアクセスできます。</p>
	 
	 </apiDesc><example conref="examples\TextFlowExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/configuration"><linktext>configuration</linktext></link><link href="flashx.textLayout.elements.xml#IConfiguration"><linktext>IConfiguration</linktext></link><link href="flashx.textLayout.elements.xml#DivElement"><linktext>DivElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement"><linktext>FlowElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowGroupElement"><linktext>FlowGroupElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowLeafElement"><linktext>FlowLeafElement</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>IFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.UpdateCompleteEvent_updateComplete"><apiName>updateComplete</apiName><shortdesc> コンテナに新規の DisplayObjects が追加されたり、構成の結果としてコンテナが更新されるたびに、TextFlow オブジェクトにより送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.UpdateCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> コンテナに新規の DisplayObjects が追加されたり、構成の結果としてコンテナが更新されるたびに、TextFlow オブジェクトにより送出されます。
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.DamageEvent_damage"><apiName>damage</apiName><shortdesc> TextFlow オブジェクトが損傷されるたびに、TextFlow オブジェクトにより送出されます。このイベントを使用すると、TextFlow が変更されたことが確認できます。ただし、このイベントを送信するときは、TextFlow 自体にはアクセスしないでください。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.DamageEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> TextFlow オブジェクトが損傷されるたびに、TextFlow オブジェクトにより送出されます。このイベントを使用すると、TextFlow が変更されたことが確認できます。ただし、このイベントを送信するときは、TextFlow 自体にはアクセスしないでください。このイベントは、TextFlow の変更が部分的に完了したときに送信されます。そのため、既に完了した変更もあれば、まだ保留中の変更もあるという一貫性のない状態が生じる場合があります。必要な情報をイベントから取得し、アプリケーションに制御が戻されたら、必要に応じて変更を行います。
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.TextLayoutEvent_scroll"><apiName>scroll</apiName><shortdesc> テキストがコントローラーコンテナ内でスクロールされると、TextFlow オブジェクトにより送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.TextLayoutEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> テキストがコントローラーコンテナ内でスクロールされると、TextFlow オブジェクトにより送出されます。  
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.StatusChangeEvent_inlineGraphicStatusChanged"><apiName>inlineGraphicStatusChanged</apiName><shortdesc> 幅または高さが auto またはパーセントに指定されてグラフィックのロードが完了したために InlineGraphicElement のサイズが変更された場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.StatusChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 幅または高さが auto またはパーセントに指定されてグラフィックのロードが完了したために InlineGraphicElement のサイズが変更された場合に送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_click"><apiName>click</apiName><shortdesc> リンクがクリックされると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> リンクがクリックされると送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_rollOut"><apiName>rollOut</apiName><shortdesc> マウスがリンクの領域から離れると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> マウスがリンクの領域から離れると送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_rollOver"><apiName>rollOver</apiName><shortdesc> マウスがリンクの領域に入ると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> マウスがリンクの領域に入ると送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_mouseMove"><apiName>mouseMove</apiName><shortdesc> マウスがリンクの上を通過すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> マウスがリンクの上を通過すると送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_mouseUp"><apiName>mouseUp</apiName><shortdesc> マウスボタンがリンク上で離されると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> マウスボタンがリンク上で離されると送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowElementMouseEvent_mouseDown"><apiName>mouseDown</apiName><shortdesc> マウスボタンがリンク上で押されると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> マウスボタンがリンク上で押されると送出されます。 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.CompositionCompleteEvent_compositionComplete"><apiName>compositionComplete</apiName><shortdesc> 再構成されるたびに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.CompositionCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 再構成されるたびに送出されます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.SelectionEvent_selectionChange"><apiName>selectionChange</apiName><shortdesc> 選択が変更されるたびに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flashx.textLayout.events.SelectionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 選択が変更されるたびに送出されます。主に選択依存ユーザーインターフェイスを更新するために使用されます。選択範囲の変更にも使用できますが、TextFlow 自体を変更する場合には使用できません。
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE_flowOperationComplete"><apiName>flowOperationComplete</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END_flowOperationEnd"><apiName>flowOperationEnd</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:TextFlow_flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN_flowOperationBegin"><apiName>flowOperationBegin</apiName><shortdesc>
	 
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowOperationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 
	  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flashx.textLayout.elements:TextFlow:TextFlow"><apiName>TextFlow</apiName><shortdesc> 
		 コンストラクター - 新しい TextFlow インスタンスを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>config</apiItemName><apiOperationClassifier>flashx.textLayout.elements:IConfiguration</apiOperationClassifier><apiData>null</apiData><apiDesc>この TextFlow オブジェクトに使用する構成を指定します。null の場合は、<codeph>TextFlow.defaultConfiguration</codeph> を使用して構成値にアクセスします。 
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> 
		 コンストラクター - 新しい TextFlow インスタンスを作成します。
		 
		 <p><codeph>config</codeph> パラメーターを指定すると、Configuration オブジェクトのコンテンツがコピーされ、変更できなくなります。ただし、<codeph>configuration</codeph> プロパティを介して構成設定にアクセスすることはできます。<codeph>config</codeph> パラメーターが null の場合、<codeph>defaultConfiguration</codeph> プロパティを介してデフォルトの構成設定にアクセスできます。</p> 
		 
		 <p>Configuration オブジェクトは、TextFlow に関する構成可能なデフォルト属性の設定のメカニズムを提供します。Configuration オブジェクトを変更できない場合でも、必要に応じて TextFlow とその子の属性を設定することで、デフォルト属性をオーバーライドできます。</p>
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.elements.xml#Configuration"><linktext>Configuration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow/configuration"><linktext>configuration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow/defaultConfiguration"><linktext>defaultConfiguration</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.elements:TextFlow:addEventListener"><apiName>addEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#addEventListener()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#addEventListener()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:getElementByID"><apiName>getElementByID</apiName><shortdesc> idName パラメーターに一致する id プロパティを持つエレメントを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>idName</codeph> に一致する id を持つエレメント
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>idName</apiItemName><apiType value="String"/><apiDesc>検索するエレメントの <codeph>id</codeph> 値。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> <codeph>idName</codeph> パラメーターに一致する <codeph>id</codeph> プロパティを持つエレメントを返します。<codeph>id</codeph> に基づくスタイルを適用する機能を提供します。 
		 
		 <p>例えば、次の行は、<codeph>id</codeph> が span1 のエレメントのスタイル "color" を 0xFF0000（赤）に設定します。</p>
		 
		 <codeblock rev="3.0">
		 textFlow.getElementByID("span1").setStyle("color", 0xFF0000);
		 </codeblock>
		 
		 <p><b>注意：</b>次のコードでは、<codeph>p.addChild(s)</codeph> が元の親から <codeph>s</codeph> を<i>削除</i>し、それを <codeph>p</codeph>（新しい親）に追加しています。</p>
		 
		 <codeblock rev="3.0">
		 var s:SpanElement = new SpanElement();
		 var p:ParagraphElement = new ParagraphElement();
		 ...
		 s = textFlow.getElementByID("span3") as SpanElement;
		 p.addChild(s);
		 textFlow.addChild(p);
		 </codeblock>
		 
		 </apiDesc><example conref="examples\TextFlow_getElementByIDExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/id"><linktext>FlowElement.id</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:getElementsByStyleName"><apiName>getElementsByStyleName</apiName><shortdesc> styleNameValue に設定されている styleName を持つすべてのエレメントを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>styleNameValue</codeph> に一致する <codeph>styleName</codeph> の値を持つエレメントの配列です。例えば、スタイル名が "color" のすべてのエレメントなどです。
		 
		 </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>styleNameValue</apiItemName><apiType value="String"/><apiDesc>このスタイル名を持つエレメントを検索します。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> <codeph>styleNameValue</codeph> に設定されている <codeph>styleName</codeph> を持つすべてのエレメントを返します。
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/styleName"><linktext>FlowElement.styleName</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:hasEventListener"><apiName>hasEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:invalidateAllFormats"><apiName>invalidateAllFormats</apiName><shortdesc> TextFlow のすべてのフォーマット情報を無効化し、フォーマットの再計算を強制します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> TextFlow のすべてのフォーマット情報を無効化し、フォーマットの再計算を強制します。スタイルが変更された場合は、このメソッドを呼び出します。
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#IFormatResolver/invalidateAll"><linktext>IFormatResolver.invalidateAll</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:removeEventListener"><apiName>removeEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:TextFlow:willTrigger"><apiName>willTrigger</apiName><shortdesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:TextFlow:defaultConfiguration"><apiName>defaultConfiguration</apiName><shortdesc> 構成が指定されていない場合にすべての新規 TextFlow オブジェクトに対して使用されるデフォルトの構成です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiValueClassifier>flashx.textLayout.elements:Configuration</apiValueClassifier></apiValueDef><apiDesc> 構成が指定されていない場合にすべての新規 TextFlow オブジェクトに対して使用されるデフォルトの構成です。 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#Configuration"><linktext>Configuration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:configuration:get"><apiName>configuration</apiName><shortdesc> 
		この TextFlow オブジェクトの Configuration オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:IConfiguration</apiValueClassifier></apiValueDef><apiDesc> 
		この TextFlow オブジェクトの Configuration オブジェクトです。Configuration オブジェクトは、文字と段落の初期フォーマット、コンテナの初期フォーマット、および選択範囲のハイライト、リンク、フォーカスおよびスクロールの属性を指定します。
		
		<p>Configuration オブジェクトを指定しない場合、Text Layout Framework はデフォルトの Configuration オブジェクトを使用します。これは <codeph>defaultConfiguration</codeph> プロパティにより参照されます。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#Configuration"><linktext>Configuration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow/defaultConfiguration"><linktext>defaultConfiguration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:flowComposer:get"><apiName>flowComposer</apiName><shortdesc> このエレメントのコンテナを管理します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.compose:IFlowComposer</apiValueClassifier></apiValueDef><apiDesc> このエレメントのコンテナを管理します。
		 
		 <p>エレメントから作成された TextLines は、コンテナの子として表示されます。flowComposer はコンテナを管理し、テキストが編集されると、コンテナに行を追加したりコンテナから行を削除したりします。また、flowComposer は、構成したい幅と高さ、スクロールを有効にするかどうかなどのクリティカルな属性を追跡します。</p>
		 
		 <p>コンテナと <codeph>flowComposer</codeph> は密接に関係します。<codeph>flowComposer</codeph> をリセットすると、コンテナはリセットされて、新しい flowComposer のコンテナになります。同様に、コンテナがリセットされると、<codeph>flowComposer</codeph> はリセットされてそのコンテナの新しい flowComposer になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#IFlowComposer"><linktext>FlowComposer</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:formatResolver:get"><apiName>formatResolver</apiName><shortdesc> エレメントのスタイルを解決するためのコールバック関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:IFormatResolver</apiValueClassifier></apiValueDef><apiDesc> エレメントのスタイルを解決するためのコールバック関数です。これを使用して、例えば CSS や名前付きスタイルを使用したスタイルを指定できます。 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#IFormatResolver"><linktext>IFormatResolver</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:generation:get"><apiName>generation</apiName><shortdesc> 
		この TextFlow オブジェクトの世代番号です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc> 
		この TextFlow オブジェクトの世代番号です。取り消し操作およびやり直し操作では、世代番号を使用して、操作の取り消しまたはやり直しが適切かどうかが検証されます。世代番号が一致している必要があります。 
		
		<p>モデルが変更されるたびに <codeph>generation</codeph> は増分されるため、世代番号の変更によってモデルが変更されたことを判別できます。</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:hostFormat:get"><apiName>hostFormat</apiName><shortdesc> この TextFlow オブジェクトの TextLayoutFormat オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> この TextFlow オブジェクトの TextLayoutFormat オブジェクトです。これにより、ホストフォーマットを再使用するためのいくつかの最適化が有効になります。次に例を示します。
		
		<codeblock>
		textFlowA.hostFormat = textFlowB.hostFormat
		</codeblock>
		
		<codeph>hostFormat</codeph> に TextLayoutFormat オブジェクトを割り当てる前に、フォーマット値を設定する必要があります。例えば、次の行ではフォントサイズは 24 に<i>設定されません</i>。それは、<codeph>hostFormat</codeph> に TextLayoutFormat オブジェクトを割り当てた<i>後</i>にフォントサイズが設定されているからです。
		
		<codeblock>
		format = new TextLayoutFormat()
		textFlow.hostFormat = format
		format.fontSize = 24;
		</codeblock>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:TextFlow:interactionManager:get"><apiName>interactionManager</apiName><shortdesc>
		 この TextFlow オブジェクトに関連付けられた InteractionManager です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:ISelectionManager</apiValueClassifier></apiValueDef><apiDesc>
		 この TextFlow オブジェクトに関連付けられた InteractionManager です。
		 <p>テキストに対するすべての選択と編集を制御します。TextFlow が選択可能でない場合、interactionManager は null になります。TextFlow を編集可能にするには、ISelectionManager と IEditManager の両方を意味する interactionManager を割り当てる必要があります。TextFlow を読み取り専用および選択可能にするには、ISelectionManager のみを意味する interactionManager を割り当てる必要があります。 </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#ISelectionManager"><linktext>ISelectionManager</linktext></link><link href="flashx.textLayout.edit.xml#IEditManager"><linktext>IEditManager</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:ContainerFormattedElement"><apiName>ContainerFormattedElement</apiName><shortdesc> 
	ContainerFormattedElement は、DivElement オブジェクトや TextFlow オブジェクトなどのすべてのコンテナレベルのブロックエレメントのルートクラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:ParagraphFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	ContainerFormattedElement は、DivElement オブジェクトや TextFlow オブジェクトなどのすべてのコンテナレベルのブロックエレメントのルートクラスです。コンテナレベルのブロックエレメントとは、他の FlowElement オブジェクトをグループ化するエレメントです。
	
	</apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#DivElement"><linktext>DivElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiClassifier><apiClassifier id="flashx.textLayout.elements:IFormatResolver"><apiName>IFormatResolver</apiName><shortdesc> フォーマットリゾルバーへのインターフェイスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> フォーマットリゾルバーへのインターフェイスです。これを実装することで、Flex の CSS スタイリングや名前付きスタイルなど、選択したスタイリングメカニズムを TextFlow に添付できます。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow/formatResolver"><linktext>TextFlow.formatResolver</linktext></link></related-links><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:getResolverForNewFlow"><apiName>getResolverForNewFlow</apiName><shortdesc> TextFlow がコピーされるときにフォーマットリゾルバーを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>TextFlow のコピーのフォーマットリゾルバー
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:IFormatResolver</apiOperationClassifier></apiReturn><apiParam><apiItemName>oldFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam><apiParam><apiItemName>newFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> TextFlow がコピーされるときにフォーマットリゾルバーを返します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:invalidateAll"><apiName>invalidateAll</apiName><shortdesc> フォーマットが再計算されるよう、TextFlow のキャッシュされたフォーマット情報を無効化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>textFlow</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> フォーマットが再計算されるよう、TextFlow のキャッシュされたフォーマット情報を無効化します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:invalidate"><apiName>invalidate</apiName><shortdesc> parent が変更されたり、id や styleName が変更された場合に、このエレメントに関するキャッシュされたフォーマット情報を無効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc> <codeph>parent</codeph> が変更されたり、<codeph>id</codeph> や <codeph>styleName</codeph> が変更された場合に、このエレメントに関するキャッシュされたフォーマット情報を無効にします。 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:resolveFormat"><apiName>resolveFormat</apiName><shortdesc> FlowElement オブジェクトまたは ContainerController オブジェクトが指定されると、そのオブジェクトに対する任意のフォーマット設定を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定されたオブジェクトに対するフォーマット設定です。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc> FlowElement オブジェクトまたは ContainerController オブジェクトが指定されると、そのオブジェクトに対する任意のフォーマット設定を返します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:IFormatResolver:flashx.textLayout.elements:IFormatResolver:resolveUserFormat"><apiName>resolveUserFormat</apiName><shortdesc> FlowElement オブジェクトまたは ContainerController オブジェクトとフォーマットプロパティの名前が指定されると、フォーマット値、または値が検出されない場合は undefined を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定されたオブジェクトの指定されたフォーマットの値です。
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>userFormat</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc> FlowElement オブジェクトまたは ContainerController オブジェクトとフォーマットプロパティの名前が指定されると、フォーマット値、または値が検出されない場合は <codeph>undefined</codeph> を返します。
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.elements:TabElement"><apiName>TabElement</apiName><shortdesc> 
	 TabElement クラスは、テキストフロー内の &amp;lt;tab/&amp;gt; を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:SpecialCharacterElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 TabElement クラスは、テキストフロー内の &lt;tab/> を表します。タブストップを TabStopFormat オブジェクトの配列として <codeph>ParagraphElement.tabStops</codeph> プロパティに割り当てます。
	 
	 <p><b>注意</b>：このクラスは、主に、MXML マークアップ内の &lt;tab/> をサポートするために存在します。次のように、テキスト内にをタブ文字（¥t）を直接追加できます。</p>
	 
	 <codeblock rev="3.0">
	 spanElement1.text += '\t';
	 </codeblock>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TabStopFormat"><linktext>flashx.textLayout.formats.TabStopFormat</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement/tabStops"><linktext>ParagraphElement.tabStops</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:TabElement:TabElement"><apiName>TabElement</apiName><shortdesc> コンストラクター - 新しい TabElement インスタンスを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - 新しい TabElement インスタンスを作成します。 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:IConfiguration"><apiName>IConfiguration</apiName><shortdesc> 構成オブジェクトの読み取り専用インターフェイスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc> 構成オブジェクトの読み取り専用インターフェイスです。TextFlow により、構築後は変更できない構成があることを保証するために使用されます。
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:defaultLinkActiveFormat:get"><apiName>defaultLinkActiveFormat</apiName><shortdesc> 
		テキストフロー内のすべてのリンク（LinkElement オブジェクト）に対して初期設定で適用するアクティブな文字フォーマット属性を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		テキストフロー内のすべてのリンク（LinkElement オブジェクト）に対して初期設定で適用するアクティブな文字フォーマット属性を指定します。これらは、これらの属性値が指定されていない新規の LinkElement オブジェクトでデフォルト値になります。 
		
		<p>デフォルト値は <codeph>null</codeph> です。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkActiveFormat"><linktext>FlowElement.linkActiveFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:defaultLinkHoverFormat:get"><apiName>defaultLinkHoverFormat</apiName><shortdesc> 
		テキストフロー内のリンク（LinkElement）をカーソルがホバーしたときにに適用する文字フォーマット属性の初期値を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		テキストフロー内のリンク（LinkElement）をカーソルがホバーしたときにに適用する文字フォーマット属性の初期値を指定します。これらは、これらの属性値が指定されていない新規の LinkElement オブジェクトでデフォルト値になります。
		
		<p>デフォルト値は <codeph>null</codeph> です。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkHoverFormat"><linktext>FlowElement.linkHoverFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:defaultLinkNormalFormat:get"><apiName>defaultLinkNormalFormat</apiName><shortdesc> 
		テキストフロー内のすべての LinkElement オブジェクトのリンク属性の初期値を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		テキストフロー内のすべての LinkElement オブジェクトのリンク属性の初期値を指定します。これらは、これらの属性値が指定されていない新規の LinkElement オブジェクトでデフォルト値になります。
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkNormalFormat"><linktext>FlowElement.linkNormalFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:enableAccessibility:get"><apiName>enableAccessibility</apiName><shortdesc> 
		アクセシビリティのサポートを有効にするかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		アクセシビリティのサポートを有効にするかどうかを指定します。<codeph>true</codeph> の場合、スクリーンリーダーは、TextFlow コンテンツを読み取ることができます。
		
		<p>デフォルト値は <codeph>false</codeph> です。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:flowComposerClass:get"><apiName>flowComposerClass</apiName><shortdesc> 新しい TextFlow オブジェクトにデフォルトで追加するフローコンポーザーのタイプを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef><apiDesc> 新しい TextFlow オブジェクトにデフォルトで追加するフローコンポーザーのタイプを指定します。デフォルト値は StandardFlowComposer です。
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:focusedSelectionFormat:get"><apiName>focusedSelectionFormat</apiName><shortdesc> 
		テキストフローのウィンドウにフォーカスがある場合の、テキストフロー（TextFlow）の初期選択フォーマット（SelectionFormat）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc> 
		テキストフローのウィンドウにフォーカスがある場合の、テキストフロー（TextFlow）の初期選択フォーマット（SelectionFormat）です。ウィンドウがアクティブで TextFlow 内のコンテナの 1 つにフォーカスがある場合、Text Layout Framework は <codeph>focusedSelectionFormat</codeph> を使用して選択対象を表します。必要に応じて、<codeph>SelectionManager.focusedSelectionFormat</codeph> を使用してこのフォーマットをオーバーライドできます。
		
		<p>SelectionFormat クラスは、デフォルト値を指定します。これは、テキストとその背景の色を反転させます。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/focusedSelectionFormat"><linktext>SelectionManager.focusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:inactiveSelectionFormat:get"><apiName>inactiveSelectionFormat</apiName><shortdesc> 
		ウィンドウが非アクティブな場合の、テキストフロー（TextFlow）の初期選択フォーマット（SelectionFormat）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc> 
		ウィンドウが非アクティブな場合の、テキストフロー（TextFlow）の初期選択フォーマット（SelectionFormat）です。ウィンドウが非アクティブな場合、Text Layout Framework は <codeph>inactiveSelectionFormat</codeph> を使用して選択対象を表します。必要に応じて、<codeph>SelectionManager.inactiveSelectionFormat</codeph> を使用してこのフォーマットをオーバーライドできます。
		
		<p><codeph>unfocusedSelectionFormat</codeph> をオーバーライドしない場合、次のような SelectionFormat 値が使用されます。</p> 
		<ul>
		  <li><codeph>color = 0xffffff</codeph>（白）</li>
		  <li><codeph>alpha = 0</codeph></li>
		  <li><codeph>blendMode = flash.display.BlendMode.DIFFERENCE</codeph></li>
		</ul>
		<p>この結果として、選択範囲は表示されません。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/inactiveSelectionFormat"><linktext>SelectionManager.inactiveSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:inlineGraphicResolverFunction:get"><apiName>inlineGraphicResolverFunction</apiName><shortdesc> インライングラフィックエレメントの解決に使用するコールバックを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Function"/></apiValueDef><apiDesc> インライングラフィックエレメントの解決に使用するコールバックを指定します。コールバックは <codeph>flashx.textLayout.elements.InlineGraphicElement</codeph> オブジェクトを受け取り、エレメントの <codeph>flashx.textLayout.elements.InlineGraphicElement#source</codeph> として使用する値を返します。このコールバックにより、インライングラフィックエレメントのソースの提供を構成の直前まで遅延させるメカニズムを実現します。
		<p><b>注意：</b>このコールバックは、String 型のプレースホルダーが既に設定されている場合のみ呼び出されます。また、複数回呼び出される可能性があります。 </p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:manageEnterKey:get"><apiName>manageEnterKey</apiName><shortdesc> 
		Text Layout Framework で Enter キーまたは Return キーをテキストとして入力して例えば段落を分けるか、またはクライアントコードで処理するかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		Text Layout Framework で Enter キーまたは Return キーをテキストとして入力して例えば段落を分けるか、またはクライアントコードで処理するかを指定します。クライアントコードでは、例えば、その目的用のデフォルトボタンを含むフォームをコミットしてこれを処理する場合があります。 
		
		<p>デフォルト値は <codeph>true</codeph> です。</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:manageTabKey:get"><apiName>manageTabKey</apiName><shortdesc> 
		Text Layout Framework で TAB キーをテキストとして入力するか、または Flash Player か AIR で処理してこれをタブ付きパネルイベントにするかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		Text Layout Framework で TAB キーをテキストとして入力するか、または Flash Player か AIR で処理してこれをタブ付きパネルイベントにするかを指定します。 
		
		<p>デフォルト値は <codeph>false</codeph> です。</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:overflowPolicy:get"><apiName>overflowPolicy</apiName><shortdesc> 
		コンテナの最後の行をコンテナ内に収めるか、またはコンテナ外に出すかを決定するために使用されるポリシーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> 
		コンテナの最後の行をコンテナ内に収めるか、またはコンテナ外に出すかを決定するために使用されるポリシーです。OverflowPolicy クラスの定数を使用して、このプロパティを設定します。
		
		<p>デフォルト値は OverflowPolicy.FIT_DESCENDERS で、この値では、行の頂点からベースラインまでの領域が収まる場合、行は構成領域内に収められます。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#OverflowPolicy"><linktext>OverflowPolicy</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:releaseLineCreationData:get"><apiName>releaseLineCreationData</apiName><shortdesc> テキストの構成プロセスで、段落が構成されるたびに、行の作成データを解放することを要求します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> テキストの構成プロセスで、段落が構成されるたびに、行の作成データを解放することを要求します。この要求によりメモリが節約されますが、構成プロセスは遅くなります。
		
		<p>デフォルト値は <codeph>false</codeph> です。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="" invalidHref="flash.text.engine.xml#TextBlock/releaseLineCreationData"><linktext>TextBlock.releaseLineCreationData</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollDragDelay:get"><apiName>scrollDragDelay</apiName><shortdesc> 
		スクロールが高速になり過ぎないよう、スクロールと次のスクロールの間に一定時間の遅延を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
		スクロールが高速になり過ぎないよう、スクロールと次のスクロールの間に一定時間の遅延を指定します。遅延は、この値によってミリ秒単位で指定します。デフォルト値は 35 です。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollDragPixels:get"><apiName>scrollDragPixels</apiName><shortdesc> ユーザーが選択範囲をドラッグして自動スクロールを開始した場合に、スクロールするデフォルトのピクセル数を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> ユーザーが選択範囲をドラッグして自動スクロールを開始した場合に、スクロールするデフォルトのピクセル数を指定します。デフォルト値は 20 です。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollMouseWheelMultiplier:get"><apiName>scrollMouseWheelMultiplier</apiName><shortdesc> マウスホイールイベントでスクロールする場合のデフォルトのピクセル数を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> マウスホイールイベントでスクロールする場合のデフォルトのピクセル数を指定します。デフォルト値は 20 です。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:scrollPagePercentage:get"><apiName>scrollPagePercentage</apiName><shortdesc>
		ページスクロールする場合のスクロールするテキストフローのデフォルトのパーセント値を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		ページスクロールする場合のスクロールするテキストフローのデフォルトのパーセント値を指定します。デフォルト値は、7.0 / 8.0 または .875 です。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:textFlowInitialFormat:get"><apiName>textFlowInitialFormat</apiName><shortdesc> 
		テキストフロー（TextFlow オブジェクト）の初期フォーマット TextLayoutFormat の構成を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		テキストフロー（TextFlow オブジェクト）の初期フォーマット TextLayoutFormat の構成を指定します。
		
		<p>デフォルト値は <codeph>null</codeph> です。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:IConfiguration:flashx.textLayout.elements:IConfiguration:unfocusedSelectionFormat:get"><apiName>unfocusedSelectionFormat</apiName><shortdesc> 
		ウィンドウはアクティブだが TextFlow 内のいずれのコンテナにもフォーカスがない場合に、Text Layout Framework が選択範囲を表すために使用する初期選択フォーマットを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc> 
		ウィンドウはアクティブだが TextFlow 内のいずれのコンテナにもフォーカスがない場合に、Text Layout Framework が選択範囲を表すために使用する初期選択フォーマットを設定します。必要に応じて、<codeph>SelectionManager.unfocusedSelectionFormat</codeph> を使用してこのフォーマットをオーバーライドできます。
		
		<p><codeph>unfocusedSelectionFormat</codeph> をオーバーライドしない場合、次のような SelectionFormat 値が使用されます。</p>
		
		<ul>
		  <li><codeph>color = 0xffffff</codeph>（白）</li>
		  <li><codeph>alpha = 0</codeph></li>
		  <li><codeph>blendMode = flash.display.BlendMode.DIFFERENCE</codeph></li>
		</ul>
		<p>この結果として、選択範囲は表示されません。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/unfocusedSelectionFormat"><linktext>SelectionManager.unfocusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:LinkState"><apiName>LinkState</apiName><shortdesc>
	  LinkState クラスは、LinkElement クラスの linkState プロパティの一連の定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  LinkState クラスは、LinkElement クラスの <codeph>linkState</codeph> プロパティの一連の定数を定義します。 
	 
	 </apiDesc><example conref="examples\LinkStateExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#LinkElement/linkState"><linktext>LinkElement.linkState</linktext></link></related-links><apiValue id="flashx.textLayout.elements:LinkState:ACTIVE"><apiName>ACTIVE</apiName><shortdesc> 
	 マウスボタンをリンク上で押しているときに起きるアクティブ状態を表す値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>active</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 マウスボタンをリンク上で押しているときに起きるアクティブ状態を表す値です。 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:LinkState:HOVER"><apiName>HOVER</apiName><shortdesc> 
	 マウスをリンク上にドラッグしているときに起きるホバー状態を表す値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hover</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 マウスをリンク上にドラッグしているときに起きるホバー状態を表す値です。 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:LinkState:LINK"><apiName>LINK</apiName><shortdesc> 
	 通常の、デフォルトのリンク状態を表す値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>link</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 通常の、デフォルトのリンク状態を表す値です。 
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:ParagraphElement"><apiName>ParagraphElement</apiName><shortdesc> 
	 ParagraphElement クラスは、テキストフロー階層で段落を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:ParagraphFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 ParagraphElement クラスは、テキストフロー階層で段落を表します。その親は ParagraphFormattedElement で、その子には範囲エレメント（SpanElement）、イメージエレメント（inLineGraphicElement）、リンクエレメント（LinkElement）および TCY（Tatechuuyoko - 縦中横）エレメント（TCYElement）を含めることができます。段落テキストは、1 つ以上の SpanElement オブジェクトに保存されます。このオブジェクトは、同じ属性を共有するテキストの範囲を定義します。TCYElement オブジェクトは、縦書きの行の中の横書きテキストのように、行に対して垂直な短い日本語テキストの実行を定義します。TCYElement にも、複数の範囲を含めることができます。
	 
	 </apiDesc><example conref="examples\ParagraphElementExample.as"/><example conref="examples\ParagraphElementExample2.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link><link href="flashx.textLayout.elements.xml#TCYElement"><linktext>TCYElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:ParagraphElement:ParagraphElement"><apiName>ParagraphElement</apiName><shortdesc> コンストラクター - テキストフロー内の段落を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - テキストフロー内の段落を表します。 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:ParagraphElement:findNextAtomBoundary"><apiName>findNextAtomBoundary</apiName><shortdesc> 
		 指定された位置より先をスキャンして、テキスト内の次のアトムの位置を検出してインデックスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>テキスト内の次のアトムのインデックス
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> テキスト内の開始位置で、0 から数えられます
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定された位置より先をスキャンして、テキスト内の次のアトムの位置を検出してインデックスを返します。アトムとは、グラフィックエレメントと文字（結合された文字のグループを含む）の両方、テキスト行を構成する分割できないエンティティを指す用語です。
		 
		 </apiDesc><example conref="examples\ParagraphElement_findNextAtomBoundary.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:findNextWordBoundary"><apiName>findNextWordBoundary</apiName><shortdesc> 
		 テキスト内の次の単語境界のインデックスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>テキスト内の次の単語境界のインデックス
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> テキスト内の開始位置で、0 から数えられます
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 テキスト内の次の単語境界のインデックスを返します。
		 
		 <p>指定された位置より先をスキャンして、テキスト内の次の単語開始位置または単語終了位置を検出します。 </p>
		 
		 </apiDesc><example conref="examples\ParagraphElement_findNextWordBoundary.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:findPreviousAtomBoundary"><apiName>findPreviousAtomBoundary</apiName><shortdesc> 
		 指定された位置より手前をスキャンして、テキスト内の前のアトムの位置を検出してインデックスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>テキスト内の前のアトムのインデックス
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> テキスト内の開始位置で、0 から数えられます
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定された位置より手前をスキャンして、テキスト内の前のアトムの位置を検出してインデックスを返します。アトムとは、グラフィックエレメントと文字（結合された文字のグループを含む）の両方、テキスト行を構成する分割できないエンティティを指す用語です。
		 
		 </apiDesc><example conref="examples\ParagraphElement_findPreviousAtomBoundary.as"/></apiOperationDetail><related-links><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:findPreviousWordBoundary"><apiName>findPreviousWordBoundary</apiName><shortdesc> 
		 テキスト内の前の単語境界のインデックスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>テキスト内の前の単語境界のインデックス
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc> テキスト内の開始位置で、0 から数えられます
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 テキスト内の前の単語境界のインデックスを返します。
		 
		 <p>指定された位置より手前をスキャンして、テキスト内の前の単語開始位置または単語終了位置を検出します。 </p>
		 
		 </apiDesc><example conref="examples\ParagraphElement_findPreviousWordBoundary.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:getNextParagraph"><apiName>getNextParagraph</apiName><shortdesc> この段落に続く段落を返すか、または先に段落がない場合は null を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>次の段落、または先に段落がない場合は null。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> この段落に続く段落を返すか、または先に段落がない場合は null を返します。 
		 
		 </apiDesc><example conref="examples\ParagraphElement_getNextParagraph.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement/getPreviousParagraph"><linktext>getPreviousParagraph</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:ParagraphElement:getPreviousParagraph"><apiName>getPreviousParagraph</apiName><shortdesc> この段落の手前にある段落を返すか、またはこれが TextFlow の最初の段落の場合は null を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> この段落の手前にある段落を返すか、またはこれが TextFlow の最初の段落の場合は null を返します。 
		 
		 </apiDesc><example conref="examples\ParagraphElement_getPreviousParagraph.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement/getNextParagraph"><linktext>getNextParagraph</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="flashx.textLayout.elements:TextRange"><apiName>TextRange</apiName><shortdesc>
	 隣接するテキストの範囲を表す読み取り専用クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 隣接するテキストの範囲を表す読み取り専用クラスです。テキストのセクションを選択した場合に、このような範囲が発生します。範囲は、選択範囲のアンカーポイント、<codeph>anchorPosition</codeph> および <codeph>activePosition</codeph>（アクションにより変更されるポイント）により構成されます。ブロックの選択範囲が変更および拡張されると、<codeph>anchorPosition</codeph> は固定されたままで、<codeph>activePosition</codeph> は変更されます。アンカー位置は、アクティブ位置の前または後のテキスト内に配置される場合があります。
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.edit.xml#SelectionState"><linktext>SelectionState</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:TextRange:TextRange"><apiName>TextRange</apiName><shortdesc> コンストラクター - 新しい TextRange インスタンスを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>root</apiItemName><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier><apiDesc>選択範囲に関連付けられている TextFlow です。
		 </apiDesc></apiParam><apiParam><apiItemName>anchorIndex</apiItemName><apiType value="int"/><apiDesc>選択範囲内のアンカーのインデックス位置です。テキスト内の最初の位置は、位置 0 となります。
		 </apiDesc></apiParam><apiParam><apiItemName>activeIndex</apiItemName><apiType value="int"/><apiDesc>選択範囲内のアクティブ位置のインデックス位置です。テキスト内の最初の位置は、位置 0 となります。 
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc> コンストラクター - 新しい TextRange インスタンスを作成します。TextRange は範囲なしを意味する (-1,-1)、または 0 から <codeph>TextFlow.textLength</codeph> までの対の値を指定できます。
		
		</apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>FlowElement.textLength</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.elements:TextRange:updateRange"><apiName>updateRange</apiName><shortdesc> 新しいアンカー位置またはアクティブ位置の値により範囲を更新します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>選択範囲が変更された場合 true です。
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>newAnchorPosition</apiItemName><apiType value="int"/><apiDesc>選択範囲のアンカーインデックスです。
		  </apiDesc></apiParam><apiParam><apiItemName>newActivePosition</apiItemName><apiType value="int"/><apiDesc>選択範囲のアクティブインデックスです。
		  </apiDesc></apiParam></apiOperationDef><apiDesc> 新しいアンカー位置またはアクティブ位置の値により範囲を更新します。
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:TextRange:absoluteEnd:get"><apiName>absoluteEnd</apiName><shortdesc> TextFlow 内の絶対位置としての、選択範囲の末尾です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> TextFlow 内の絶対位置としての、選択範囲の末尾です。
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:absoluteStart:get"><apiName>absoluteStart</apiName><shortdesc> TextFlow 内の絶対位置としての、選択範囲の先頭です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> TextFlow 内の絶対位置としての、選択範囲の先頭です。
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:activePosition:get"><apiName>activePosition</apiName><shortdesc> TextFlow 内の絶対位置としての、選択範囲のアクティブ位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> TextFlow 内の絶対位置としての、選択範囲のアクティブ位置です。
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:anchorPosition:get"><apiName>anchorPosition</apiName><shortdesc> TextFlow 内の絶対位置としての、選択範囲のアンカー位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc> TextFlow 内の絶対位置としての、選択範囲のアンカー位置です。
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:TextRange:textFlow:get"><apiName>textFlow</apiName><shortdesc> 選択範囲に関連付けられている TextFlow を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.elements:TextFlow</apiValueClassifier></apiValueDef><apiDesc> 選択範囲に関連付けられている TextFlow を返します。
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:SubParagraphGroupElement"><apiName>SubParagraphGroupElement</apiName><shortdesc> 
	 SubParagraphGroupElement クラスは、複数の FlowLeafElement を 1 つのグループにグループ化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 SubParagraphGroupElement クラスは、複数の FlowLeafElement を 1 つのグループにグループ化します。SubParagraphGroupElement は ParagraphElement オブジェクトの子であり、1 つ以上の FlowLeafElement オブジェクトを子として含むことができます。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowLeafElement"><linktext>FlowLeafElement</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TCYElement"><linktext>TCYElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:SubParagraphGroupElement:SubParagraphGroupElement"><apiName>SubParagraphGroupElement</apiName><shortdesc> コンストラクター - 新しい SubParagraphGroupElement インスタンスを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - 新しい SubParagraphGroupElement インスタンスを作成します。
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:SpanElement"><apiName>SpanElement</apiName><shortdesc> 
	SpanElement クラスは、適用される単一のフォーマット属性セットを含むテキストの実行を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowLeafElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	SpanElement クラスは、適用される単一のフォーマット属性セットを含むテキストの実行を表します。SpanElement オブジェクトには段落内のテキストが含まれます。単一の段落（ParagraphElement）には、1 つ以上の SpanElement オブジェクトが含まれます。 
	
	<p>段落内のすべてのテキストが同じ属性セットを共有する場合、ParagraphElement には単一の SpanElement オブジェクトが含まれます。段落内に複数のフォーマットが存在する場合、ParagraphElement には複数の SpanElement オブジェクトが含まれます。</p>
	
	</apiDesc><example conref="SpanElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement"><linktext>FlowElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:SpanElement:SpanElement"><apiName>SpanElement</apiName><shortdesc> コンストラクター - SpanElement オブジェクトを作成して段落内のテキストの実行を保持します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - SpanElement オブジェクトを作成して段落内のテキストの実行を保持します。
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:SpanElement:getText"><apiName>getText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>paragraphSeparator</apiItemName><apiType value="String"/><apiData> </apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:SpanElement:tlf_internal:normalizeRange"><apiName>normalizeRange</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="tlf_internal"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>normalizeStart</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>normalizeEnd</apiItemName><apiType value="uint"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:SpanElement:replaceText"><apiName>replaceText</apiName><shortdesc> 
		 指定された開始位置と終了位置に基づくテキスト範囲内のテキストを更新します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>指定された<codeph>relativeStartPosition</codeph> または <codeph>relativeEndPosition</codeph> は範囲外であるか、またはサロゲートペアは置き換えの結果として分割されています。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>relativeStartPosition</apiItemName><apiType value="int"/><apiDesc>範囲の先頭に対して相対的な、置き換えられるテキストの先頭のインデックス位置です。範囲内の最初の文字は、位置 0 となります。
		  </apiDesc></apiParam><apiParam><apiItemName>relativeEndPosition</apiItemName><apiType value="int"/><apiDesc>範囲の先頭に対して相対的な、置き換えられるテキストの最後の文字より 1 つ後の位置のインデックスです。挿入の場合は、この値を <codeph>relativeStartPos</codeph> と同じ値に設定します。 
		  </apiDesc></apiParam><apiParam><apiItemName>textValue</apiItemName><apiType value="String"/><apiDesc>場合に応じて、置換テキストまたは追加するテキストです。
		 
		  </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定された開始位置と終了位置に基づくテキスト範囲内のテキストを更新します。挿入の場合は、終了位置を開始位置と同じ値に設定します。範囲内の既存のテキストにテキストを追加する場合、開始位置と終了位置は、既存のテキストの長さに等しくします。
		 
		 <p>置き換えられるテキストには、最初の文字から最後の文字まで（ただし、最後の文字は含まない）が含まれます。</p>
		 
		  </apiDesc><example conref="SpanElement_replaceTextExample.as"/></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:SpanElement:mxmlChildren:get"><apiName>mxmlChildren</apiName><shortdesc> 
		 範囲タグ内のコンテンツに基づいてテキストを設定します。既存の子は常に削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiException><apiDesc>配列エレメントが SpecialCharacterElement または String でない場合に発生します。
		 </apiDesc><apiItemName>TypeError</apiItemName><apiOperationClassifier>TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> 
		 範囲タグ内のコンテンツに基づいてテキストを設定します。既存の子は常に削除します。このプロパティは、MXML コンパイル済みのインポート時に使用されます。TLF マークアップエレメントが他の TLF マークアップエレメントを子として持つ場合、子にはこのプロパティが割り当てられます。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:SpanElement:text:set"><apiName>text</apiName><shortdesc> 
		 この SpanElement オブジェクトが保持するテキストの String を受け入れます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc> 
		 この SpanElement オブジェクトが保持するテキストの String を受け入れます。
		 
		 <p>範囲のテキストでは段落の最後に復帰文字（CR）を含みません。ただし、これは、<codeph>textLength</codeph> の値に含められます。</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:ParagraphFormattedElement"><apiName>ParagraphFormattedElement</apiName><shortdesc> ParagraphFormattedElement クラスは、段落プロパティを持つ FlowElement クラスの抽象基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> ParagraphFormattedElement クラスは、段落プロパティを持つ FlowElement クラスの抽象基本クラスです。
	
	<p>ParagraphFormattedElement オブジェクトを直接作成することはできません。<codeph>new ParagraphFormattedElement()</codeph> を呼び出すと、エラー例外がスローされます。</p> 
	
	</apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#ContainerFormattedElement"><linktext>ContainerFormattedElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link></related-links></apiClassifier><apiClassifier id="flashx.textLayout.elements:DivElement"><apiName>DivElement</apiName><shortdesc> 
	 DivElement クラスは、段落（ParagraphElement オブジェクト）をグループ化するエレメントを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:ContainerFormattedElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 DivElement クラスは、段落（ParagraphElement オブジェクト）をグループ化するエレメントを定義します。段落のグループで同じフォーマット属性を共有する場合は、段落を DivElement オブジェクトにグループ化し、これに属性を適用します。段落は、DivElement オブジェクトから属性を継承します。
	 
	 </apiDesc><example conref="examples\DivElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:DivElement:DivElement"><apiName>DivElement</apiName><shortdesc> コンストラクター - 新しい DivElement オブジェクトを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - 新しい DivElement オブジェクトを作成します。
			
		</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:Configuration"><apiName>Configuration</apiName><shortdesc> 
	Configuration クラスは、Text Layout Framework とアプリケーション間の統合のプライマリーポイントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.elements:IConfiguration</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> 
	Configuration クラスは、Text Layout Framework とアプリケーション間の統合のプライマリーポイントです。TextFlow インスタンスの新規作成時、<codeph>TextFlow()</codeph> のコンストラクターに Configuration オブジェクトをパラメーターとして含めることができます。これにより、アプリケーションでは Text Layout Framework の動作方法を最初に制御できます。
	
	<p>Configuration クラスにより、<codeph>textFlowInitialFormat</codeph> プロパティを介してテキストフローの段落フォーマットおよびコンテナのフォーマットの初期値を指定できます。また、これにより、リンク、選択範囲、スクロールの初期フォーマット属性、および Tab キーと Enter キーを処理するための初期フォーマット属性を指定できます。</p>
	
	</apiDesc><example conref="examples\ConfigurationExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>TextDecoration</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:Configuration:Configuration"><apiName>Configuration</apiName><shortdesc> コンストラクター - デフォルトの構成を作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initializeWithDefaults</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>デフォルト値により構成を初期化するかどうかを指定します。デフォルト値は <codeph>true</codeph> です。<codeph>false</codeph> に設定すると、デフォルト値を使用せずに初期化し、したがっていくつかのオブジェクトが保存されます。<codeph>clone()</codeph> メソッドは、これを <codeph>false</codeph> に設定して元のオブジェクトからプロパティをコピーします。
		
		</apiDesc></apiParam></apiConstructorDef><apiDesc> コンストラクター - デフォルトの構成を作成します。 
		
		</apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.elements:Configuration:clone"><apiName>clone</apiName><shortdesc> Configuration オブジェクトのクローンを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>flashx.textLayout.elements:Configuration</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> Configuration オブジェクトのクローンを作成します。
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:Configuration:defaultLinkActiveFormat:get"><apiName>defaultLinkActiveFormat</apiName><shortdesc conref="IConfiguration#defaultLinkActiveFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#defaultLinkActiveFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkActiveFormat"><linktext>FlowElement.linkActiveFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:defaultLinkHoverFormat:get"><apiName>defaultLinkHoverFormat</apiName><shortdesc conref="IConfiguration#defaultLinkHoverFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#defaultLinkHoverFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkHoverFormat"><linktext>FlowElement.linkHoverFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:defaultLinkNormalFormat:get"><apiName>defaultLinkNormalFormat</apiName><shortdesc conref="IConfiguration#defaultLinkNormalFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#defaultLinkNormalFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/linkNormalFormat"><linktext>FlowElement.linkNormalFormat</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:enableAccessibility:get"><apiName>enableAccessibility</apiName><shortdesc conref="IConfiguration#enableAccessibility"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#enableAccessibility"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:flowComposerClass:get"><apiName>flowComposerClass</apiName><shortdesc conref="IConfiguration#flowComposerClass"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Class"/></apiValueDef><apiDesc conref="IConfiguration#flowComposerClass"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:focusedSelectionFormat:get"><apiName>focusedSelectionFormat</apiName><shortdesc conref="IConfiguration#focusedSelectionFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#focusedSelectionFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/focusedSelectionFormat"><linktext>SelectionManager.focusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:inactiveSelectionFormat:get"><apiName>inactiveSelectionFormat</apiName><shortdesc conref="IConfiguration#inactiveSelectionFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#inactiveSelectionFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/inactiveSelectionFormat"><linktext>SelectionManager.inactiveSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:inlineGraphicResolverFunction:get"><apiName>inlineGraphicResolverFunction</apiName><shortdesc conref="IConfiguration#inlineGraphicResolver"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc conref="IConfiguration#inlineGraphicResolver"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:manageEnterKey:get"><apiName>manageEnterKey</apiName><shortdesc conref="IConfiguration#manageEnterKey"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#manageEnterKey"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:manageTabKey:get"><apiName>manageTabKey</apiName><shortdesc conref="IConfiguration#manageTabKey"> </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#manageTabKey"> </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:overflowPolicy:get"><apiName>overflowPolicy</apiName><shortdesc conref="IConfiguration#overflowPolicy"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="IConfiguration#overflowPolicy"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#OverflowPolicy"><linktext>OverflowPolicy</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:releaseLineCreationData:get"><apiName>releaseLineCreationData</apiName><shortdesc conref="IConfiguration#releaseLineCreationData"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="IConfiguration#releaseLineCreationData"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#StandardFlowComposer"><linktext>StandardFlowComposer</linktext></link><link href="" invalidHref="flash.text.engine.xml#TextBlock/releaseLineCreationData"><linktext>TextBlock.releaseLineCreationData</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollDragDelay:get"><apiName>scrollDragDelay</apiName><shortdesc conref="IConfiguration#scrollDragDelay"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollDragDelay"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollDragPixels:get"><apiName>scrollDragPixels</apiName><shortdesc conref="IConfiguration#scrollDragPixels"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollDragPixels"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollMouseWheelMultiplier:get"><apiName>scrollMouseWheelMultiplier</apiName><shortdesc conref="IConfiguration#scrollMouseWheelMultiplier"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollMouseWheelMultiplier"> 
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:scrollPagePercentage:get"><apiName>scrollPagePercentage</apiName><shortdesc conref="IConfiguration#scrollPagePercentage">
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="IConfiguration#scrollPagePercentage">
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:Configuration:textFlowInitialFormat:get"><apiName>textFlowInitialFormat</apiName><shortdesc conref="IConfiguration#textFlowInitialFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#textFlowInitialFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:Configuration:unfocusedSelectionFormat:get"><apiName>unfocusedSelectionFormat</apiName><shortdesc conref="IConfiguration#unfocusedSelectionFormat"> 
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.edit:SelectionFormat</apiValueClassifier></apiValueDef><apiDesc conref="IConfiguration#unfocusedSelectionFormat"> 
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.edit.xml#SelectionFormat"><linktext>SelectionFormat</linktext></link><link href="flashx.textLayout.edit.xml#SelectionManager/unfocusedSelectionFormat"><linktext>SelectionManager.unfocusedSelectionFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:FlowElement"><apiName>FlowElement</apiName><shortdesc>
 フロー内のテキストは、テキスト内の論理的分割を表すツリーのエレメントとともにツリーフォームに保存されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.formats:ITextLayoutFormat</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 フロー内のテキストは、テキスト内の論理的分割を表すツリーのエレメントとともにツリーフォームに保存されます。FlowElement クラスは、このツリー内のすべてのオブジェクトの抽象基本クラスです。FlowElement オブジェクトは、段落、段落内のテキスト範囲および段落のグループを表します。
 
 <p>構成可能な FlowElement ツリーのルートは、常に、TextFlow オブジェクトです。ツリーのリーフエレメントは、常に、FlowLeafElement クラスのサブクラスです。構成可能な TextFlow に配置されているすべてのリーフには、上位の ParagraphElement があります。
 </p> 
 
 <p>FlowElement オブジェクトを直接作成することはできません。<codeph>new FlowElement()</codeph> を呼び出すと、エラー例外がスローされます。</p>
 
 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowGroupElement"><linktext>FlowGroupElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowLeafElement"><linktext>FlowLeafElement</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement"><linktext>InlineGraphicElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:FlowElement:FlowElement"><apiName>FlowElement</apiName><shortdesc> 基本クラス - new FlowElement() を呼び出すと、エラー例外がスローされます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> 基本クラス - <codeph>new FlowElement()</codeph> を呼び出すと、エラー例外がスローされます。
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:FlowElement:clearStyle"><apiName>clearStyle</apiName><shortdesc> styleProp パラメーターにより指定されたスタイルを、この FlowElement オブジェクトからクリアします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>クリアするスタイルの名前です。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> <codeph>styleProp</codeph> パラメーターにより指定されたスタイルを、この FlowElement オブジェクトからクリアします。値を <codeph>undefined</codeph> に設定します。
		 
		 </apiDesc><example conref="examples\FlowElement_clearStyleExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getStyle()"><linktext>getStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/setStyle()"><linktext>setStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:deepCopy"><apiName>deepCopy</apiName><shortdesc>
		 この FlowElement オブジェクトのディープコピー（すべての子を含む）を作成し、指定された 2 つの文字位置間のコンテンツをコピーし、そのコピーを FlowElement オブジェクトとして返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>ディープコピー操作により作成されたオブジェクトです。
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>コピー対象の最初の文字の相対テキスト位置です。最初の位置は 0 です。
		 </apiDesc></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>コピー対象の最後の文字の相対テキスト位置です。値 -1 は、コピーの終了位置を示します。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 この FlowElement オブジェクトのディープコピー（すべての子を含む）を作成し、指定された 2 つの文字位置間のコンテンツをコピーし、そのコピーを FlowElement オブジェクトとして返します。
		 
		 <p>引数なしの場合、<codeph>deepCopy()</codeph> はエレメント全体をコピーするようデフォルト設定されます。</p>
		 
		 </apiDesc><example conref="examples\FlowElement_deepCopyExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/shallowCopy()"><linktext>shallowCopy()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:equalUserStyles"><apiName>equalUserStyles</apiName><shortdesc> これの userStyles を elem と比較します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>ユーザースタイルが等しい場合は true、そうでない場合は false です。
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>otherElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>ユーザースタイルを比較する FlowElement オブジェクト
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> これの userStyles を elem と比較します。 
		 
		 </apiDesc><example conref="examples\FlowElement_equalUserStylesExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getStyle()"><linktext>getStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/setStyle()"><linktext>setStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getAbsoluteStart"><apiName>getAbsoluteStart</apiName><shortdesc>
		 テキストフロー内のエレメントの開始位置を絶対インデックスとして返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>TextFlow オブジェクトの先頭からの、エレメントの先頭のインデックスです。
 		 
 		 </apiDesc><apiType value="int"/></apiReturn></apiOperationDef><apiDesc>
		 テキストフロー内のエレメントの開始位置を絶対インデックスとして返します。フロー内の最初の文字は、位置 0 となります。
		 
		 </apiDesc><example conref="examples\FlowElement_getAbsoluteStartExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/parentRelativeStart"><linktext>parentRelativeStart</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/TextFlow"><linktext>TextFlow</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getCharAtPosition"><apiName>getCharAtPosition</apiName><shortdesc> 
		この FlowElement オブジェクトに対して相対的な、指定された位置の文字を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>この文字を含むストリングです。
		
		</apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>この文字の、この FlowElement オブジェクト内の相対位置です。
		</apiDesc></apiParam></apiOperationDef><apiDesc> 
		この FlowElement オブジェクトに対して相対的な、指定された位置の文字を返します。最初の文字は、相対位置 0 となります。
		
		</apiDesc><example conref="examples\FlowElement_getCharAtPositionExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getCharCodeAtPosition()"><linktext>getCharCodeAtPosition()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getCharCodeAtPosition"><apiName>getCharCodeAtPosition</apiName><shortdesc> この FlowElement に対して相対的な、指定された位置の文字コードを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定された位置の文字の Unicode 値です。
		
		</apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>	この文字の、この FlowElement オブジェクト内の相対位置です。
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> この FlowElement に対して相対的な、指定された位置の文字コードを返します。最初の文字は、相対位置 0 となります。
		
		</apiDesc><example conref="examples\FlowElement_getCharCodeAtPositionExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getCharAtPosition()"><linktext>getCharAtPosition()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getElementRelativeStart"><apiName>getElementRelativeStart</apiName><shortdesc>
		 上位エレメントに対して相対的な、このエレメントの先頭を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>このエレメントのオフセットです。
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>ancestorElement</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>このエレメントの先頭の相対位置の基準となるエレメントです。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 上位エレメントに対して相対的な、このエレメントの先頭を返します。上位エレメントが親チェーン内に存在すると想定します。上位エレメントが親である場合、これは <codeph>this.parentRelativeStart</codeph> と同じになります。上位エレメントが親の親である場合、これは、<codeph>parentRelativeStart</codeph> や <codeph>parent.parentRelativeStart</codeph> などと同じになります。
		 
		 </apiDesc><example conref="examples\FlowElement_getElementRelativeStartExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getAbsoluteStart()"><linktext>getAbsoluteStart()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getNextSibling"><apiName>getNextSibling</apiName><shortdesc> テキストフロー階層内の次の FlowElement 兄弟を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>同じタイプの次の FlowElement オブジェクト、または兄弟がない場合は null です。
		
		</apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> テキストフロー階層内の次の FlowElement 兄弟を返します。 
		
		</apiDesc><example conref="examples\FlowElement_getNextSiblingExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getPreviousSibling()"><linktext>getPreviousSibling()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getParagraph"><apiName>getParagraph</apiName><shortdesc>
		 このエレメントに関連付けられている ParagraphElement オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>この FlowElement オブジェクトに関連付けられている ParagraphElement オブジェクトです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:ParagraphElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 このエレメントに関連付けられている ParagraphElement オブジェクトを返します。テキストフロー階層を検索し、最初の ParagraphElement オブジェクトを返します。
		 
		 </apiDesc><example conref="examples\FlowElement_getParagraphExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getTextFlow()"><linktext>getTextFlow()</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getPreviousSibling"><apiName>getPreviousSibling</apiName><shortdesc> テキストフロー階層内の前の FlowElement 兄弟を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>同じタイプの前の FlowElement オブジェクト、または兄弟がない場合は null です。
		
		</apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc> テキストフロー階層内の前の FlowElement 兄弟を返します。 
		
		</apiDesc><example conref="examples\FlowElement_getPreviousSiblingExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/getNextSibling()"><linktext>getNextSibling()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getStyle"><apiName>getStyle</apiName><shortdesc> styleProp パラメーターによって指定されたスタイルの値を返します。これは、スタイル名を指定するもので、任意のユーザースタイル名を含むことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定したスタイルの値です。 タイプは、アクセス中のスタイルのタイプによって異なります。スタイルが設定されていない場合、<codeph>undefined</codeph> を返します。
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>その値を取得するスタイルの名前です。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> <codeph>styleProp</codeph> パラメーターにより指定されたスタイルの値を返します。これは、スタイル名を指定するもので、任意のユーザースタイル名を含むことができます。既存の範囲、段落、テキストフローまたはコンテナのスタイルにアクセスします。特定のエレメントでスタイルの値が <codeph>undefined</codeph> の場合は、親ツリーを検索します。
		 
		 </apiDesc><example conref="examples\FlowElement_getStyleExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/clearStyle()"><linktext>clearStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/setStyle()"><linktext>setStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getTextFlow"><apiName>getTextFlow</apiName><shortdesc>
		 テキストフロー階層を遡って、エレメントのルート TextFlow オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>この FlowElement オブジェクトのルート TextFlow オブジェクトです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:TextFlow</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 テキストフロー階層を遡って、エレメントのルート TextFlow オブジェクトを返します。
		 
		 </apiDesc><example conref="examples\FlowElement_getTextFlowExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:getText"><apiName>getText</apiName><shortdesc> 
		 フローエレメント内の指定されたテキスト範囲を取得します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>要求されたテキスト。
		 
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>FlowElement の開始位置に対して相対的な、取得されるテキスト範囲の開始位置です。
		 </apiDesc></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>FlowElement の開始位置に対して相対的な、取得されるテキスト範囲の終了位置です。-1 は、エレメントの終わりです。
		 </apiDesc></apiParam><apiParam><apiItemName>paragraphSeparator</apiItemName><apiType value="String"/><apiData> </apiData><apiDesc>段落間に挿入される文字。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 フローエレメント内の指定されたテキスト範囲を取得します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:initialized"><apiName>initialized</apiName><shortdesc> </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>
		 </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>ドキュメントがこのオブジェクトを参照するために使用する識別子です。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:setStyle"><apiName>setStyle</apiName><shortdesc> styleProp パラメーターにより指定されたスタイルの値を、newValue パラメーターで指定する値に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>設定するスタイルの名前です。
		</apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="any"/><apiDesc>スタイルに設定する値です。
		
		</apiDesc></apiParam></apiOperationDef><apiDesc> <codeph>styleProp</codeph> パラメーターにより指定されたスタイルの値を、<codeph>newValue</codeph> パラメーターで指定する値に設定します。範囲、段落、テキストフローまたはコンテナスタイルを設定でき、任意のユーザーの名前と値のペアを含めることができます。
		
		<p><b>注意：</b>カスタムスタイルを割り当てた場合、Text Layout Framework はそれをインポートおよびエクスポートすることはできますが、コンパイルされた MXML はそれをサポートできません。</p>
		
		</apiDesc><example conref="examples\FlowElement_setStyleExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/clearStyle()"><linktext>clearStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/getStyle()"><linktext>getStyle()</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/userStyles"><linktext>userStyles</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:shallowCopy"><apiName>shallowCopy</apiName><shortdesc>
		 この FlowElement オブジェクトのコピーを作成し、指定された 2 つの文字位置間のコンテンツをコピーします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>コピー操作により作成されるオブジェクトです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>コピー対象の最初の文字の相対テキスト位置です。最初の位置は 0 です。
		 </apiDesc></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>コピー対象の最後の文字の相対テキスト位置です。値 -1 は、コピーの終了位置を示します。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 この FlowElement オブジェクトのコピーを作成し、指定された 2 つの文字位置間のコンテンツをコピーします。新しい FlowElement オブジェクトとしてコピーを返します。<codeph>deepCopy()</codeph> とは異なり、<codeph>shallowCopy()</codeph> は、この FlowElement オブジェクトの子をコピーしません。 
		 
		 <p>引数なしの場合、<codeph>shallowCopy()</codeph> はコンテンツ全体をコピーするようデフォルト設定されます。</p>
		 
		 </apiDesc><example conref="examples\FlowElement_shallowCopyExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/deepCopy()"><linktext>deepCopy()</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.elements:FlowElement:splitAtPosition"><apiName>splitAtPosition</apiName><shortdesc> 
		 relativePosition パラメーターで指定された位置（このエレメントのテキストの相対位置）で、この FlowElement オブジェクトを分割します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc><codeph>relativePosition</codeph> が <codeph>textLength</codeph> より大きい場合、または 0 より小さい場合に発生します。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>指定された位置で開始する、元のオブジェクトのコンテンツを含む新規オブジェクトです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>元のオブジェクトのコンテンツを分割する位置で、最初の位置は 0 です。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 <codeph>relativePosition</codeph> パラメーターで指定された位置（このエレメントのテキストの相対位置）で、この FlowElement オブジェクトを分割します。このメソッドは、SpanElement オブジェクトと FlowGroupElement オブジェクトのみを分割します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:FlowElement:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 TextLayoutFormat：行の基準を揃えるベースラインを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：行の基準を揃えるベースラインを指定します。例えば、<codeph>dominantBaseline</codeph> を ASCENT に設定し、<codeph>alignmentBaseline</codeph> を DESCENT に設定すると、テキスト上部が DESCENT ベースライン上またはラインの下に揃えられます。一般に、ベースラインは行内の最大エレメントにより決定されます。<p><adobeimage alt="baselines" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>有効な値は、flash.text.engine.TextBaseline.ROMAN、flash.text.engine.TextBaseline.ASCENT、flash.text.engine.TextBaseline.DESCENT、flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP、flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER、flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM、flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は USE_DOMINANT_BASELINE になります。</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 TextLayoutFormat：背景のアルファ（透明）値です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：背景のアルファ（透明）値です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。値 0 は完全に透明、値 1 は完全に不透明です。alpha が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
		 <p>有効な値は、0 ～ 1 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 1 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 TextLayoutFormat：テキストの背景色です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの背景色です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。<codeph>BackgroundColor.TRANSPARENT</codeph> の定数値、または 3 つの 8 ビットの RGB（赤、緑、青）値を指定する 16 進値のいずれかを指定できます。例えば、0xFF0000 は赤、0x00FF00 は緑です。
		 <p>有効な値は、flashx.textLayout.formats.BackgroundColor.TRANSPARENT、flashx.textLayout.formats.FormatValue.INHERIT の文字列、および 0x0 から 0xffffffff の uint です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TRANSPARENT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 TextLayoutFormat：ベースラインを dominantBaseline 値から移動させる量です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：ベースラインを <codeph>dominantBaseline</codeph> 値から移動させる量です。単位は、ピクセルまたは <codeph>fontSize</codeph> のパーセント値（この場合は 140％のように文字列値を入力）です。正の値を指定すると、行は横書きの場合は上に（縦書きの場合は右に）移動し、負の値を指定すると、行は横書きの場合は下に（縦書きの場合は左に）移動します。 
		 <p>有効な値は、flashx.textLayout.formats.BaselineShift.SUPERSCRIPT、flashx.textLayout.formats.BaselineShift.SUBSCRIPT および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0.0 になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 TextLayoutFormat：垂直方向または並行方向の行配置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：垂直方向または並行方向の行配置を指定します。行は、上から下（横書用の <codeph>BlockProgression.TB</codeph>）または右から左（縦書用の <codeph>BlockProgression.RL</codeph>）に配置されます。
		 <p>有効な値は、flashx.textLayout.formats.BlockProgression.RL、flashx.textLayout.formats.BlockProgression.TB および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は TB になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 TextLayoutFormat：折り返しのあるテキストを複数行に分割する際の、改行可能位置を制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：折り返しのあるテキストを複数行に分割する際の、改行可能位置を制御します。テキストを標準的に改行する場合は、<codeph>BreakOpportunity.AUTO</codeph> に設定します。テキストがサイズを超過し、改行する場所が他にない場合<i>以外</i>は改行しない場合は、<codeph>BreakOpportunity.NONE</codeph> に設定します。単語間のみでなく、どの位置でも改行を許可する場合は、<codeph>BreakOpportunity.ANY</codeph> に設定します。タイポグラフィッククラスタごとに改行する場合は、<codeph>BreakOpportunity.ALL</codeph> に設定します（パス上のテキストに有効）。
		 <p>有効な値は、flash.text.engine.BreakOpportunity.ALL、flash.text.engine.BreakOpportunity.ANY、flash.text.engine.BreakOpportunity.AUTO、flash.text.engine.BreakOpportunity.NONE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 TextLayoutFormat：このテキストに使用される CFF ヒンティングのタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：このテキストに使用される CFF ヒンティングのタイプです。CFF ヒンティングによって、Flash ランタイムで太い水平線がサブピクセルグリッドに合わされるか合わされないかが決定されます。このプロパティは、<codeph>renderingMode</codeph> プロパティが <codeph>RenderingMode.CFF</codeph> に設定されていて、フォントが埋め込まれている（<codeph>fontLookup</codeph> プロパティが <codeph>FontLookup.EMBEDDED_CFF</codeph> に設定されている）場合にのみ適用されます。スクリーンサイズが小さい場合は、ヒンティングによって、鮮明で読みやすいテキストの表示が可能になります。
		 <p>有効な値は、flash.text.engine.CFFHinting.NONE、flash.text.engine.CFFHinting.HORIZONTAL_STEM および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は HORIZONTAL_STEM になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:color:get"><apiName>color</apiName><shortdesc>
		 TextLayoutFormat：テキストの色です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの色です。3 つの 8 ビットの RGB（赤、緑、青）値を指定する 16 進値を指定できます。例えば、0xFF0000 は赤、0x00FF00 は緑です。 
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 TextLayoutFormat：テキスト列の数です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキスト列の数です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。列数は、列の他の設定をオーバーライドします。値は整数か、指定されない場合は <codeph>FormatValue.AUTO</codeph> になります。<codeph>columnCount</codeph> が指定されない場合は、<codeph>columnWidth</codeph> により、コンテナに収まる最大数の列が作成されます。
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 1 ～ 50 の int です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 TextLayoutFormat：列間のふち取り領域をピクセル単位で指定します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：列間のふち取り領域をピクセル単位で指定します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 20 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 TextLayoutFormat：列幅（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：列幅（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。列の幅を指定して列の数を指定しない場合、TextLayout により、コンテナ幅と <codeph>columnGap</codeph> の設定に基づき、その幅の列が可能な限り最大数作成されます。余りのスペースがある場合は、最後の列の後に置かれます。値は数値で指定します。
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 0 ～ 8000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:computedFormat:get"><apiName>computedFormat</apiName><shortdesc> 
		 このエレメントに有効な計算済みのフォーマット属性を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> 
		 このエレメントに有効な計算済みのフォーマット属性を返します。親エレメントからの属性の継承を考慮します。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:coreStyles:get"><apiName>coreStyles</apiName><shortdesc> FlowElement インスタンスのコアスタイルを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc> FlowElement インスタンスのコアスタイルを返します。コアスタイルのコピーを返します。 
		  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 TextLayoutFormat：このテキストに使用される数字の大文字小文字区別のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：このテキストに使用される数字の大文字小文字区別のタイプです。値を <codeph>DigitCase.OLD_STYLE</codeph> に設定すると、様々なアセンダとディセンダを持つ小文字の書体に近づきます。その文字幅は形状によって設定されます。このスタイルは、選択した書体（最も一般的には Supplemental フォントまたは Expert フォント）でのみ有効です。<codeph>DigitCase.LINING</codeph> に設定すると、大文字全体の高さとなり、一般にグラフで整列させる場合に文字幅が等幅になります。<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>有効な値は、flash.text.engine.DigitCase.DEFAULT、flash.text.engine.DigitCase.LINING、flash.text.engine.DigitCase.OLD_STYLE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 TextLayoutFormat：このテキストに使用される数字の幅のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：このテキストに使用される数字の幅のタイプです。値は、個々の数字を表示する場合に最適な <codeph>DigitWidth.PROPORTIONAL</codeph> と、表、グラフおよび縦の列に数字を表示する場合に最適な <codeph>DigitWidth.TABULAR</codeph> があります。<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>有効な値は、flash.text.engine.DigitWidth.DEFAULT、flash.text.engine.DigitWidth.PROPORTIONAL、flash.text.engine.DigitWidth.TABULAR および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:direction:get"><apiName>direction</apiName><shortdesc>
		 TextLayoutFormat：テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。ラテン文字などでは左から右の読み順、アラビア文字やヘブライ文字などでは右から左の読み順となります。このプロパティは、コンテナレベルで適用された場合、列の方向にも影響します。列もテキストと同様、左から右、または右から左のいずれかに設定できます。以下に例を示します。<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>有効な値は、flashx.textLayout.formats.Direction.LTR、flashx.textLayout.formats.Direction.RTL および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は LTR になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 TextLayoutFormat：行のエレメントの垂直座標を決定するために alignmentBaseline に吸着させるエレメントのベースラインを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：行のエレメントの垂直座標を決定するために <codeph>alignmentBaseline</codeph> に吸着させるエレメントのベースラインを指定します。<codeph>TextBaseline.AUTO</codeph> を指定した場合、親段落の <codeph>locale</codeph> プロパティに基づいて、行の基準が選択されます。日本語と中国語の場合、選択されるベースラインの値は <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph> で、他のすべての言語では <codeph>TextBaseline.ROMAN</codeph> となります。ベースラインに関するこれらの選択は、フォントおよびフォントサイズの選択によって決定されます。<p><adobeimage alt="baselines" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flash.text.engine.TextBaseline.ROMAN、flash.text.engine.TextBaseline.ASCENT、flash.text.engine.TextBaseline.DESCENT、flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP、flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER、flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 TextLayoutFormat：コンテナ内の最初の行のベースライン位置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：コンテナ内の最初の行のベースライン位置を指定します。このプロパティがどのベースラインを参照するかは、コンテナレベルのロケールにより異なります。これは、日本語と中国語で <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>、他のすべての言語で <codeph>TextBaseline.ROMAN</codeph> となります。コンテナの上部のインセット（<codeph>blockProgression</codeph> が RL の場合は右側のインセット）から 1 行目のベースラインへのオフセットの値には、<codeph>BaselineOffset.ASCENT</codeph>（行のアセント）、<codeph>BaselineOffset.LINE_HEIGHT</codeph>（1 行目の高さ）、または絶対距離を指定する任意の固定数値を指定できます。<codeph>BaselineOffset.AUTO</codeph> に指定すると、行のアセントとコンテナの上部のインセットが揃えられます。<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.BaselineOffset.AUTO、flashx.textLayout.formats.BaselineOffset.ASCENT、flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 0 ～ 1000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		 TextLayoutFormat：使用するフォント名またはフォント名のカンマ区切りリストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：使用するフォント名またはフォント名のカンマ区切りリストです。リスト内の使用できる先頭のフォントを使用してエレメントをレンダリングします。例えば、「Arial」、「Helvetica」、「_sans」の場合は、「Arial」が検索され、Arial が見つからないときは「Helvetica」が、それらがいずれも見つからないときは「_sans」が検索されます。
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は Arial になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 TextLayoutFormat：使用するフォント参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：使用するフォント参照です。<codeph>FontLookup.DEVICE</codeph> に指定すると、SWF ファイルが実行されるシステムにインストールされているフォントが使用されます。デバイスフォントを使用するとムービーサイズが小さくなりますが、異なるシステムおよびプラットフォームで、テキストが必ずしも同じようにレンダリングされる訳ではありません。<codeph>FontLookup.EMBEDDED_CFF</codeph> に指定すると、パブリッシュされた SWF ファイルに埋め込まれたフォントのアウトラインが使用されます。埋め込みフォントを使用すると、SWF ファイルのサイズが（ときには大幅に）大きくなりますが、テキストは常に選択されたフォントで表示されます。
		 <p>有効な値は、flash.text.engine.FontLookup.DEVICE、flash.text.engine.FontLookup.EMBEDDED_CFF および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEVICE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 TextLayoutFormat：テキストのサイズ（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストのサイズ（ピクセル単位）です。
		 <p>有効な値は、1 ～ 720 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 12 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 TextLayoutFormat：テキストのスタイルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストのスタイルです。プレーンテキストには <codeph>FontPosture.NORMAL</codeph>、イタリックには <codeph>FontPosture.ITALIC</codeph> を使用します。このプロパティは、デバイスフォント（<codeph>fontLookup</codeph> プロパティが flash.text.engine.FontLookup.DEVICE に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.FontPosture.NORMAL、flash.text.engine.FontPosture.ITALIC および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NORMAL になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 TextLayoutFormat：テキストの太さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの太さです。プレーンテキスト用の <codeph>FontWeight.NORMAL</codeph>、または <codeph>FontWeight.BOLD</codeph> を使用します。デバイスフォント（<codeph>fontLookup</codeph> プロパティが flash.text.engine.FontLookup.DEVICE に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.FontWeight.NORMAL、flash.text.engine.FontWeight.BOLD および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NORMAL になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:format:get"><apiName>format</apiName><shortdesc> このエレメントに直接適用される TextLayoutFormat プロパティです。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc> このエレメントに直接適用される TextLayoutFormat プロパティです。
		 <p>各エレメントには、そのフォーマットの一部としてプロパティが適用されている場合があります。このエレメントに適用されるプロパティは、親から継承されるプロパティをオーバーライドします。また、このエレメントに適用されるプロパティは、このエレメントの子に継承されます（ただし、子でオーバーライドされない場合）。エレメントにプロパティが適用されていない場合、これは null になります。</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 TextLayoutFormat：段落のテキストの均等配置に使用するルールです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落のテキストの均等配置に使用するルールです。デフォルト値は <codeph>FormatValue.AUTO</codeph> で、段落の <codeph>locale</codeph> プロパティに基づいてテキストの均等配置が行われます。日本語と中国語以外のすべての言語では、<codeph>FormatValue.AUTO</codeph> は <codeph>JustificationRule.SPACE</codeph> になり、空白文字に追加のスペースが追加されます。日本語と中国語の場合、<codeph>FormatValue.AUTO</codeph> は <codeph>JustficationRule.EAST_ASIAN</codeph> になります。均等配置によって、句読点のスペース設定の一部が変更されます。ローマンテキストの場合、カンマと日本語の句点には 1 文字分の幅を使用しますが、日中韓のテキストでは半文字分しか使用しません。また、従来の日中韓の活字規則に従って、連続する句読点間のスペースは狭くなります。次の例の、段落の 2 行目に適用された行送りにも注目してください。日中韓では、最後の 2 行が左に寄せられます。ローマンでは、2 行目以降が左に寄せられます。<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.JustificationRule.EAST_ASIAN、flashx.textLayout.formats.JustificationRule.SPACE、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 TextLayoutFormat：段落の均等配置に使用するスタイルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落の均等配置に使用するスタイルです。<codeph>JustificationRule.EAST_ASIAN</codeph> の <codeph>justificationRule</codeph> 設定との連携でのみ使用します。デフォルト値の <codeph>FormatValue.AUTO</codeph> は、すべてのロケールで <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> に解決されます。JustificationStyle クラスで定義される定数値は、禁則文字の取扱いオプションを指定します。禁則文字とは日本語の文字で、行の最初や最後にすることのできない文字です。テキストの文字間隔を狭くしたくない場合は、<codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> を指定します。<codeph>JustificationRule.SPACE</codeph> の <codeph>justificationRule</codeph> のような効果を得たい場合は、<codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph> を使用します。
		 <p>有効な値は、flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT、flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU、flash.text.engine.JustificationStyle.PUSH_OUT_ONLY、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:kerning:get"><apiName>kerning</apiName><shortdesc>
		 TextLayoutFormat：カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。カーニングは、カーニングテーブルを持つすべてのフォントに対してサポートされています。
		 <p>有効な値は、flash.text.engine.Kerning.ON、flash.text.engine.Kerning.OFF、flash.text.engine.Kerning.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 TextLayoutFormat：行送りの基準と行送り方向の組み合わせである、行送りモデルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：行送りの基準と行送り方向の組み合わせである、行送りモデルを指定します。行送り基準は、<codeph>lineHeight</codeph> プロパティが参照するベースラインです。行送り方向は、<codeph>lineHeight</codeph> プロパティが参照する特定の行までの距離が、その行の前の行のベースラインを基点とするのか、それともその行の後の行のベースラインを基点とするのかを決定します。デフォルト値の <codeph>FormatValue.AUTO</codeph> は、段落の <codeph>locale</codeph> プロパティに基づいて解決されます。これは、日本語と中国語で <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>、他のすべての言語で <codeph>LeadingModel.ROMAN_UP_UP</codeph> となります。<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.LeadingModel.ROMAN_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN、flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD、flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP、flashx.textLayout.formats.LeadingModel.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 TextLayoutFormat：フォントで定義された合字のうち、どの合字がテキストで使用されるかを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：フォントで定義された合字のうち、どの合字がテキストで使用されるかを制御します。これらの各設定に出現する合字は、フォントによって異なります。2 つ以上の letter-form が 1 つの文字に結合された場合には、合字が起こります。合字は通常、「fi」、「fl」、「ae」などの文字の組の用に共通のコンポーネントを共有する連続した文字を置き換えます。合字は、ラテン語およびラテン語以外の文字セットの両方で使用されます。LigatureLevel クラス（<codeph>MINIMUM</codeph>、<codeph>COMMON</codeph>、<codeph>UNCOMMON</codeph>、<codeph>EXOTIC</codeph>）の値で有効化された合字は、追加的なものです。各値によって新しい合字が有効になりますが、以前からの型も含まれます。<p><b>メモ：</b>アラビア語またはシリア語フォントを使用する場合は、<codeph>ligatureLevel</codeph> を MINIMUM 以上に設定する必要があります。</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>有効な値は、flash.text.engine.LigatureLevel.MINIMUM、flash.text.engine.LigatureLevel.COMMON、flash.text.engine.LigatureLevel.UNCOMMON、flash.text.engine.LigatureLevel.EXOTIC および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は COMMON になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 TextLayoutFormat：コンテナ内のテキスト折り返しを制御します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：コンテナ内のテキスト折り返しを制御します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナ内のテキストを、コンテナの幅に収まるよう設定（<codeph>LineBreak.TO_FIT</codeph>）するか、明示的な復帰またはラインフィード文字の箇所でのみ改行するよう設定（<codeph>LineBreak.EXPLICIT</codeph>）できます。
		 <p>有効な値は、flashx.textLayout.formats.LineBreak.EXPLICIT、flashx.textLayout.formats.LineBreak.TO_FIT および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TO_FIT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 TextLayoutFormat：テキストの行送りを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの行送りを制御します。<codeph>LeadingModel</codeph> に基づいた、前または次の行のベースラインから現在の行のベースラインまでの距離は、行内の任意の文字に適用される最大行送り値と等しくなります。これは、数値またはパーセントのいずれかで指定します。パーセントで指定する場合、140％などのように文字列値を入力します。<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>有効な数値は、-720 ～ 720 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 120％になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 TextLayoutFormat：true の場合、打ち消し線が適用されます。打ち消し線はテキストの中央に描画される線です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：<codeph>true</codeph> の場合、打ち消し線が適用されます。打ち消し線はテキストの中央に描画される線です。
		 <p>有効な値は、true、false および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は false になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:linkActiveFormat:set"><apiName>linkActiveFormat</apiName><shortdesc> setStyle(linkActiveFormat,value) と同等です。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc> setStyle(linkActiveFormat,value) と同等です。プロパティのディクショナリを必要とします。メンバーとしてのキーおよび値により、オブジェクトの配列をディクショナリに変換します。 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:linkHoverFormat:set"><apiName>linkHoverFormat</apiName><shortdesc> setStyle(linkHoverFormat,value) と同等です。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc> setStyle(linkHoverFormat,value) と同等です。プロパティのディクショナリを必要とします。メンバーとしてのキーおよび値により、オブジェクトの配列をディクショナリに変換します。 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:linkNormalFormat:set"><apiName>linkNormalFormat</apiName><shortdesc> setStyle(linkNormalFormat,value) と同等です。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc> setStyle(linkNormalFormat,value) と同等です。プロパティのディクショナリを必要とします。メンバーとしてのキーおよび値により、オブジェクトの配列をディクショナリに変換します。 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:locale:get"><apiName>locale</apiName><shortdesc>
		 TextLayoutFormat：テキストのロケールです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストのロケールです。大文字小文字変換およびシェイピングを制御します。Unicode Technical Standard #35 に記述されている標準ロケール識別子が使用されます。例えば、「en」、「en_US」および「en-US」はすべて英語で、「ja」は日本語です。 
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は en になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 TextLayoutFormat：下部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：下部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの下端とテキストの間のスペースです。 値は数値で指定します。 <p> 複数列を含むスクロール可能なコンテナ内の横書きの場合、1 列目とそれに続く列にはコンテナの最下部に空白スペースとしてパディングが表示されますが、最後の列にテキストがすべて収まらない場合、パディングを表示するにはスクロールする必要があります。</p>
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 TextLayoutFormat：左側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：左側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの左端とテキストの間のスペースです。 値は数値で指定します。<p> 複数列を含むスクロール可能なコンテナ内の縦書きの場合、1 列目とそれに続く列にはコンテナの末尾に空白スペースとしてパディングが表示されますが、最後の列にテキストがすべて収まらない場合、パディングを表示するにはスクロールする必要があります。</p>
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 TextLayoutFormat：右側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：右側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの右端とテキストの間のスペースです。 値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 TextLayoutFormat：上部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：上部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの上端とテキストの間のスペースです。 値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 TextLayoutFormat：段落の終端をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落の終端をどれだけインデントするかを指定する数値（ピクセル単位）です。左から右のテキストでは右端、右から左のテキストでは左端です。 
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 TextLayoutFormat：段落の後に空けるスペースを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落の後に空けるスペースを指定する数値（ピクセル単位）です。<codeph>paragraphSpaceBefore</codeph> と連動して折りたたみを行います。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 TextLayoutFormat：段落の前に空けるスペースを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落の前に空けるスペースを指定する数値（ピクセル単位）です。<codeph>paragraphSpaceAfter</codeph> と連動して折りたたみを行います。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 TextLayoutFormat：段落の始端をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落の始端をどれだけインデントするかを指定する数値（ピクセル単位）です。左から右のテキストでは左端、右から左のテキストでは右端です。 
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:parentRelativeEnd:get"><apiName>parentRelativeEnd</apiName><shortdesc> 親に含まれるこの FlowElement オブジェクトの相対的な末尾を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 親に含まれるこの FlowElement オブジェクトの相対的な末尾を返します。親が null の場合、これは常に <codeph>textLength</codeph> に等しくなります。親が null でない場合、値はこのオブジェクトとすべての前の兄弟のテキスト長の合計になります。これは、実際は、次のオブジェクトの最初の文字です。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowGroupElement"><linktext>FlowGroupElement</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>textLength</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:parentRelativeStart:get"><apiName>parentRelativeStart</apiName><shortdesc> 親に含まれるこの FlowElement オブジェクトの相対的な先頭を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 親に含まれるこの FlowElement オブジェクトの相対的な先頭を返します。親が null の場合、この値は常にゼロです。親が null でない場合、値はすべての前の兄弟のテキスト長の合計になります。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>textLength</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:parent:get"><apiName>parent</apiName><shortdesc> この FlowElement オブジェクトの親を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.elements:FlowGroupElement</apiValueClassifier></apiValueDef><apiDesc> この FlowElement オブジェクトの親を返します。すべての FlowElement には、最大で 1 つの親があります。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 TextLayoutFormat：このテキストに使用されるレンダリングモードです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：このテキストに使用されるレンダリングモードです。埋め込みフォント（<codeph>fontLookup</codeph> プロパティが <codeph>FontLookup.EMBEDDED_CFF</codeph> に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.RenderingMode.NORMAL、flash.text.engine.RenderingMode.CFF および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は CFF になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:styleName:get"><apiName>styleName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 TextLayoutFormat：段落に関連付けるタブストップを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落に関連付けるタブストップを指定します。Setter は、flashx.textLayout.formats.TabStopFormat の配列、圧縮されたストリング表現、未定義、または <codeph>FormatValue.INHERIT</codeph> を受け入れることができます。圧縮されたストリング表現は、常に flashx.textLayout.formats.TabStopFormat の配列に変換されます。 <p>文字列ベースのフォーマットはタブストップのリストです。リスト内で各タブストップは 1 つ以上のスペースにより区切られます。</p><p>タブストップの形式は、&lt;整列タイプ>&lt;整列位置>|&lt;整列トークン> です。</p><p>整列タイプは単一文字で、S、E、C または D（またはそれぞれの小文字）を指定できます。S または s で先頭、E または e で最後尾、C または c で中心、D または d で 10 進法に対応します。整列タイプはオプションで、指定しない場合は S にデフォルト設定されます。</p><p>整列位置は数値で、数値用の FXG スペック（10 進数表記または科学的表記）に従って指定します。整列位置は必須です。</p><p>垂直バーは、整列位置と整列トークンを区切るために使用され、整列トークンが存在する場合にのみ表示されます。</p><p> 整列トークンは、整列タイプが D の場合はオプションで、整列タイプが D 以外の場合は指定できません。整列トークンは、タブストップを終了させるスペースで終了する任意の一連の文字で指定できます（最後のタブストップでは、終了のためのスペースはオプションとなります。つまり整列トークンの終了が示唆されます）。スペースがバックスラッシュ（¥）によりエスケープされている場合、スペースは整列トークンの一部である可能性があります。バックスラッシュが他のバックスラッシュ（¥¥）によりエスケープされる場合、バックスラッシュは整列トークンの一部である可能性があります。整列タイプが D で、整列トークンが指定されない場合、null のデフォルト値が適用されます。</p><p>タブストップが指定されない場合、タブ操作は、行の最後にデフォルト設定されます。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は null になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 TextLayoutFormat：均等配置テキストの、コンテナを基準とした段落内の最後（単一）の行の行揃えです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：均等配置テキストの、コンテナを基準とした段落内の最後（単一）の行の行揃えです。<codeph>textAlign</codeph> が <codeph>TextAlign.JUSTIFY</codeph> に設定されている場合、<codeph>textAlignLast</codeph> は、最後の行（または単一行ブロックの場合は単一行）をどのように行揃えするかを指定します。値は、<codeph>textAlign</codeph> と同じです。
		 <p>有効な値は、flashx.textLayout.formats.TextAlign.LEFT、flashx.textLayout.formats.TextAlign.RIGHT、flashx.textLayout.formats.TextAlign.CENTER、flashx.textLayout.formats.TextAlign.JUSTIFY、flashx.textLayout.formats.TextAlign.START、flashx.textLayout.formats.TextAlign.END および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は START になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 TextLayoutFormat：コンテナを基準とした段落内の行揃えです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：コンテナを基準とした段落内の行揃えです。<codeph>TextAlign.LEFT</codeph> に設定すると、コンテナの左端に沿って行揃えされます。<codeph>TextAlign.RIGHT</codeph> に設定すると、右端に行揃えされます。<codeph>TextAlign.CENTER</codeph> に設定すると、右端と左端から等距離になるよう行が配置されます。<codeph>TextAlign.JUSTIFY</codeph> に設定すると、行はスペースを埋めるよう拡がります。<codeph>TextAlign.START</codeph> は、左から右のテキストでの LEFT の指定、または右から左のテキストでの RIGHT の指定と同様です。<codeph>TextAlign.END</codeph> は、左から右のテキストでの RIGHT の指定、または右から左のテキストでの LEFT の指定と同様です。
		 <p>有効な値は、flashx.textLayout.formats.TextAlign.LEFT、flashx.textLayout.formats.TextAlign.RIGHT、flashx.textLayout.formats.TextAlign.CENTER、flashx.textLayout.formats.TextAlign.JUSTIFY、flashx.textLayout.formats.TextAlign.START、flashx.textLayout.formats.TextAlign.END および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は START になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 TextLayoutFormat：テキストのアルファ（透明）値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストのアルファ（透明）値です。値 0 は完全に透明、値 1 は完全に不透明です。<codeph>textAlpha</codeph> が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
		 <p>有効な値は、0 ～ 1 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 1 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 TextLayoutFormat：テキストの装飾です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの装飾です。アンダーラインを適用する場合に使用します。デフォルトは、なしです。
		 <p>有効な値は、flashx.textLayout.formats.TextDecoration.NONE、flashx.textLayout.formats.TextDecoration.UNDERLINE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NONE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 TextLayoutFormat：段落の一行目をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：段落の一行目をどれだけインデントするかを指定する数値（ピクセル単位）です。一行目インデントをマイナスに指定すると、行はインデント内に寄せられ、コンテナより外に押し出される場合もあります。
		 <p>有効な値は、-1000 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 TextLayoutFormat：テキストの均等配置オプションを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの均等配置オプションを指定します。デフォルト値は <codeph>TextJustify.INTER_WORD</codeph> で、空白文字に追加のスペースが追加されます。<codeph>TextJustify.DISTRIBUTE</codeph> は、空白文字や個々の文字間に追加のスペースを追加します。<codeph>JustificationRule.SPACE</codeph> の <codeph>justificationRule</codeph> 値との連携でのみ使用します。
		 <p>有効な値は、flashx.textLayout.formats.TextJustify.INTER_WORD、flashx.textLayout.formats.TextJustify.DISTRIBUTE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は INTER_WORD になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textLength:get"><apiName>textLength</apiName><shortdesc>
		 この FlowElement オブジェクトとその子が所有するテキストの長さの合計を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 この FlowElement オブジェクトとその子が所有するテキストの長さの合計を返します。エレメントにテキストがない場合、<codeph>textLength</codeph> の値は通常ゼロです。 
		 
		 <p>ParagraphElement オブジェクトには、最終範囲と、最後の SpanElement オブジェクトの段落終了文字が含まれます。段落終了文字は、その SpanElement オブジェクトとすべてのその親の <codeph>textLength</codeph> の値に含めれれます。これは、SpanElement オブジェクトの <codeph>text</codeph> プロパティには含められません。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/textLength"><linktext>textLength</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 TextLayoutFormat：テキストの回転角度を決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストの回転角度を決定します。
		 <p>有効な値は、flash.text.engine.TextRotation.ROTATE_0、flash.text.engine.TextRotation.ROTATE_180、flash.text.engine.TextRotation.ROTATE_270、flash.text.engine.TextRotation.ROTATE_90、flash.text.engine.TextRotation.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 TextLayoutFormat：各文字の左側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または fontSize のパーセント（120％など））です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：各文字の左側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または <codeph>fontSize</codeph> のパーセント（120％など））です。kerning が有効にされている場合、フォントのカーニングテーブルの値に <codeph>trackingLeft</codeph> 値が追加されます。kerning が無効にされている場合、<codeph>trackingLeft</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。 
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 TextLayoutFormat：各文字の右側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または fontSize のパーセント（120％など））です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：各文字の右側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または <codeph>fontSize</codeph> のパーセント（120％など））です。kerning が有効にされている場合、フォントのカーニングテーブルの値に <codeph>trackingRight</codeph> 値が追加されます。kerning が無効にされている場合、<codeph>trackingRight</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。 
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 TextLayoutFormat：このテキストに使用される文字の大文字小文字区別のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：このテキストに使用される文字の大文字小文字区別のタイプです。次に例を示します。<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.TLFTypographicCase.DEFAULT、flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS、flashx.textLayout.formats.TLFTypographicCase.UPPERCASE、flashx.textLayout.formats.TLFTypographicCase.LOWERCASE、flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:userStyles:get"><apiName>userStyles</apiName><shortdesc> FlowElement オブジェクトでのユーザースタイルの読み取りおよび書き込みを可能にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc> FlowElement オブジェクトでのユーザースタイルの読み取りおよび書き込みを可能にします。このプロパティの読み取りは、ユーザースタイルのディクショナリのコピーを作成することに注意してください。 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 TextLayoutFormat：垂直方向の行揃えまたは均等配置です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：垂直方向の行揃えまたは均等配置です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナ内で TextFlow エレメントを整列させる方法を決定します。
		 <p>有効な値は、flashx.textLayout.formats.VerticalAlign.TOP、flashx.textLayout.formats.VerticalAlign.MIDDLE、flashx.textLayout.formats.VerticalAlign.BOTTOM、flashx.textLayout.formats.VerticalAlign.JUSTIFY および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TOP になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 TextLayoutFormat：テキストを TextFlow にインポートする際、空白を圧縮または保持します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 TextLayoutFormat：テキストを TextFlow にインポートする際、空白を圧縮または保持します。<codeph>WhiteSpaceCollapse.PRESERVE</codeph> では、すべての空白文字が保持されます。<codeph>WhiteSpaceCollapse.COLLAPSE</codeph> では、インポートしたテキストブロック内で、改行、タブ、行送りまたは行末の空白が削除されます。改行タグ () および Unicode の行区切り文字は保持されます。
		 <p>有効な値は、flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE、flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は COLLAPSE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:tlf_internal:impliedElement:set"><apiName>impliedElement</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="tlf_internal"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:FlowElement:tracking:set"><apiName>tracking</apiName><shortdesc>
		 追跡を設定します。trackingRight プロパティと同義です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
		 追跡を設定します。<codeph>trackingRight</codeph> プロパティと同義です。<codeph>fontSize</codeph> のピクセル数またはパーセント値を指定します。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/trackingRight"><linktext>trackingRight</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:LinkElement"><apiName>LinkElement</apiName><shortdesc> LinkElement クラスは、URI（Universal Resource Identifier）へのリンクを定義します。これは、ユーザーがリンクをクリックすると実行されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>flashx.textLayout.elements:SubParagraphGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> LinkElement クラスは、URI（Universal Resource Identifier）へのリンクを定義します。これは、ユーザーがリンクをクリックすると実行されます。LinkElement クラスは、SubParagraphGroupElement クラスのサブクラスで、これに、リンクテキストを保存する SpanElement オブジェクトなどの 1 つ以上の FlowElement オブジェクトを含めることができます。FlowElement オブジェクトを 1 つも含まない空の LinkElement は無視されます。
	 <p>ターゲットを指定する場合、それは次の値のいずれかである必要があります。
	 <adobetable class="innertable">
	 
	 
	 
	 
	 
	 <tgroup cols="2"><thead><row><entry>ターゲット値</entry><entry>説明</entry></row></thead><tbody><row>
	   <entry>_self</entry>
	   <entry>現在の HTML ページを置き換えます。ページがフレームまたはフレームセットの場合、そのフレーム内に読み込みます。フルブラウザーの場合、フルブラウザーが開いてその元のページを置き換えます。</entry>
	 </row><row>
	   <entry>_blank</entry>
	   <entry>名前のない新しいブラウザーを開きます。</entry>
	 </row><row>
	   <entry>_parent</entry>
	   <entry>元の HTML ページを置き換えます。</entry>
	 </row><row>
	   <entry>_top</entry>
	   <entry>現在のブラウザーに、その内部にあるすべて（フレームセットなど）を置き換えて読み込みます。</entry>
	 </row></tbody></tgroup></adobetable>
	 </p>
	 
	 </apiDesc><example conref="examples\LinkElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#LinkState"><linktext>LinkState</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/linkActiveFormat"><linktext>FlowElement.linkActiveFormat</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/linkHoverFormat"><linktext>FlowElement.linkHoverFormat</linktext></link><link href="flashx.textLayout.elements.xml#FlowElement/linkNormalFormat"><linktext>FlowElement.linkNormalFormat</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.CLICK_click"><apiName>click</apiName><shortdesc> 
	 リンクがクリックされると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.CLICK</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 リンクがクリックされると送出されます。クライアントは、自身でイベントを処理し、preventDefault() を呼び出すことにより、リンクでイベントを処理する方法をオーバーライドできます。
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.ROLL_OUT_rollOut"><apiName>rollOut</apiName><shortdesc> 
	 マウスがリンクの領域から離れると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.ROLL_OUT</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 マウスがリンクの領域から離れると送出されます。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.ROLL_OVER_rollOver"><apiName>rollOver</apiName><shortdesc>
	 マウスがリンクの領域に入ると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.ROLL_OVER</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 マウスがリンクの領域に入ると送出されます。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.MOUSE_MOVE_mouseMove"><apiName>mouseMove</apiName><shortdesc> 
	 マウスがリンクの上を通過すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.MOUSE_MOVE</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 マウスがリンクの上を通過すると送出されます。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.MOUSE_UP_mouseUp"><apiName>mouseUp</apiName><shortdesc> 
	 マウスボタンがリンク上で離されると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.MOUSE_UP</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 マウスボタンがリンク上で離されると送出されます。 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flashx.textLayout.elements:LinkElement_flashx.textLayout.events.FlowElementMouseEvent.MOUSE_DOWN_mouseDown"><apiName>mouseDown</apiName><shortdesc> 
	 マウスボタンがリンク上で押されると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flashx.textLayout.events.FlowElementMouseEvent.MOUSE_DOWN</apiEventType><adobeApiEventClassifier>flashx.textLayout.events.FlowElementMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 マウスボタンがリンク上で押されると送出されます。
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flashx.textLayout.elements:LinkElement:LinkElement"><apiName>LinkElement</apiName><shortdesc> コンストラクター - 新しい LinkElement インスタンスを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - 新しい LinkElement インスタンスを作成します。
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:LinkElement:addEventListener"><apiName>addEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#addEventListener()">
		</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントのタイプです。
		</apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>イベントを処理するリスナー関数です。次の例のように、この関数は、Event オブジェクトを唯一のパラメーターとして受け取り、何も返さないようにします。
		<p><codeph>function(evt:Event):void</codeph></p>
		関数の名前は任意に付けられます。
		</apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>リスナーが、キャプチャ段階、またはターゲットおよびバブリング段階で動作するかどうかを判断します。<codeph>useCapture</codeph> を <codeph>true</codeph> に設定すると、リスナーはキャプチャ段階のみでイベントを処理し、ターゲット段階またはバブリング段階では処理しません。<codeph>useCapture</codeph> を <codeph>false</codeph> に設定すると、リスナーはターゲット段階またはバブリング段階のみでイベントを処理します。3 つの段階すべてでイベントを受け取るには、<codeph>addEventListener()</codeph> を 2 回呼び出します。<codeph>useCapture</codeph> を <codeph>true</codeph> に設定して 1 度呼び出し、<codeph>useCapture</codeph> を <codeph>false</codeph> に設定してもう一度呼び出します。
		</apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>イベントリスナーの優先度レベルです。優先度は、32 ビット整数で指定します。数値が大きくなるほど優先度が高くなります。優先度が <i>n</i> のすべてのリスナーは、優先度が <i>n-1</i> のリスナーよりも前に処理されます。 複数のリスナーに対して同じ優先度が設定されている場合、それらは追加された順番に処理されます。 デフォルトの優先度は 0 です。 
		</apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>リスナーへの参照が強参照と弱参照のいずれであるかを判断します。デフォルトである強参照の場合は、リスナーのガベージコレクションが回避されます。弱参照では回避されません。 <p>クラスレベルメンバー関数はガベージコレクションの対象外であるため、クラスレベルメンバー関数の <codeph>useWeakReference</codeph> は、ガベージコレクションの制限とは無関係に <codeph>true</codeph> に設定できます。inner 関数がネストしているリスナーの <codeph>useWeakReference</codeph> を <codeph>true</codeph> に設定すると、この関数はガベージコレクションの対象となり、永続化されなくなります。inner 関数に対する参照を作成（別の変数に保存）した場合、その関数はガベージコレクションされず、永続化された状態のままになります。</p>
		
		</apiDesc></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#addEventListener()">
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>evt</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#dispatchEvent()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:hasEventListener"><apiName>hasEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#hasEventListener()">
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:removeEventListener"><apiName>removeEventListener</apiName><shortdesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントのタイプです。
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>削除するリスナーオブジェクトです。
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>リスナーが、キャプチャ段階、またはターゲットおよびバブリング段階に対して登録されたかどうかを示します。リスナーがキャプチャ段階だけでなくターゲット段階とバブリング段階にも登録されている場合は、<codeph>removeEventListener()</codeph> を 2 回呼び出して両方のリスナーを削除する必要があります。1 回は <codeph>useCapture</codeph> を <codeph>true</codeph> に設定し、もう 1 回は <codeph>useCapture</codeph> を <codeph>false</codeph> に設定する必要があります。 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#removeEventListener().">
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:LinkElement:willTrigger"><apiName>willTrigger</apiName><shortdesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="flash.events.IEventDispatcher#willTrigger()">
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:LinkElement:href:get"><apiName>href</apiName><shortdesc>
		 LinkElement オブジェクトに関連付けられている Uniform Resource Identifier（URI）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 LinkElement オブジェクトに関連付けられている Uniform Resource Identifier（URI）です。この URI は、<codeph>flash.net.navigateToURL()</codeph> メソッドによりサポートされている任意の URI にできます。このプロパティは、このメソッドの <codeph>request</codeph> パラメーターにマッピングされます。
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.xml#net/navigateToURL()"><linktext>flash.net.navigateToURL()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:LinkElement:linkState:get"><apiName>linkState</apiName><shortdesc>
		 リンクの現在の状態です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 リンクの現在の状態です。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#LinkState"><linktext>LinkState</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:LinkElement:target:get"><apiName>target</apiName><shortdesc>
		 LinkElement に関連付けられたターゲット値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 LinkElement に関連付けられたターゲット値です。有効な値は、"_self"、"_blank"、"_parent" および "_top" です。この値は、<codeph>flash.net.navigateToURL()</codeph> メソッドの <codeph>window</codeph> パラメーターにマッピングされます。
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.xml#net/navigateToURL()"><linktext>flash.net.navigateToURL()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:TCYElement"><apiName>TCYElement</apiName><shortdesc> 
	 TCYElement（Tatechuuyoko - 縦中横）クラスは、SubParagraphGroupElement のサブクラスであり、縦書きの行の中でテキストを横書きさせます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:SubParagraphGroupElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 TCYElement（Tatechuuyoko - 縦中横）クラスは、SubParagraphGroupElement のサブクラスであり、縦書きの行の中でテキストを横書きさせます。伝統的にこれは、日本語以外のテキストや数値（日付など）の小さいブロックを読みやすくするために使用されています。TCY を横書きに適用することは可能ですが、縦書きに変更しない限り、その表示されるスタイルへの影響はまったくありません。テキストを含まない TCY ブロックは、正規化プロセス時にテキストフローから削除されます。
	 <p>
	 下記の例で、右側の図では数字の 57 に TCY が適用され、左側の図には TCY のフォーマット設定がありません。</p>
	 <p><adobeimage alt="TCYElement" border="0" href="../../../images/textLayout_TCYElement.png"/>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:TCYElement:TCYElement"><apiName>TCYElement</apiName><shortdesc> コンストラクター - 新しい TCYElement インスタンスを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - 新しい TCYElement インスタンスを作成します。
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:OverflowPolicy"><apiName>OverflowPolicy</apiName><shortdesc>
	  OverflowPolicy クラスは、IConfiguration クラスの overflowPolicy プロパティの一連の定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  OverflowPolicy クラスは、IConfiguration クラスの <codeph>overflowPolicy</codeph> プロパティの一連の定数を定義します。これにより、構成領域の底部でコンポーザーが行をどのように処理するかを定義します。
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.elements:OverflowPolicy:FIT_ANY"><apiName>FIT_ANY</apiName><shortdesc> 
	 行の一部が納まる場合、その行を構成領域に納めます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fitAny</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 行の一部が納まる場合、その行を構成領域に納めます。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:OverflowPolicy:FIT_DESCENDERS"><apiName>FIT_DESCENDERS</apiName><shortdesc> 
	 行の頂点からベースラインまでが収まる場合、その行を構成領域に納めます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fitDescenders</apiData><apiType value="String"/></apiValueDef><apiDesc> 
	 行の頂点からベースラインまでが収まる場合、その行を構成領域に納めます。
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:GlobalSettings"><apiName>GlobalSettings</apiName><shortdesc> すべての TextFlow オブジェクトに適用される設定。</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> すべての TextFlow オブジェクトに適用される設定。
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.elements:GlobalSettings:tlf_internal:enableDefaultTabStops:get"><apiName>enableDefaultTabStops</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="tlf_internal"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:enableSearch:get"><apiName>enableSearch</apiName><shortdesc> 検索エンジンインデクサーに対してテキストが表示されるかどうかを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> 検索エンジンインデクサーに対してテキストが表示されるかどうかを制御します。デフォルトは <codeph>true</codeph> です。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:fontMapperFunction:get"><apiName>fontMapperFunction</apiName><shortdesc> 
		フォントマッピングに使用するコールバックを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
		フォントマッピングに使用するコールバックを指定します。コールバックは <codeph>flash.text.engine.FontDescription</codeph> オブジェクトを受け取り、必要に応じてオブジェクトを更新します。新しいフォントマッピングコールバックの設定後、または既存のフォントマッピングコールバック動作の変更後、影響を受ける各テキストフローに対して、クライアントから明示的に <codeph>flashx.textLayout.elements.TextFlow.invalidateAllFormats</codeph> を呼び出す必要があります。これにより、テキストフロー内のリーフエレメントが次に再構成されるときに、エレメントに適用されている FontDescription が再計算され、コールバックが呼び出されるようになります。 
		
		</apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontDescription.xml"><linktext>FontDescription</linktext></link><link href="" invalidHref="flashx.textLayout.elements.TextFlow.invalidateAllFormats.xml"><linktext>invalidateAllFormats</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:resolveFontLookupFunction:get"><apiName>resolveFontLookupFunction</apiName><shortdesc> 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
		 
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.compose.xml#ISWFContext"><linktext>flashx.textLayout.compose.ISWFContext</linktext></link><link href="flashx.textLayout.formats.xml#ITextLayoutFormat"><linktext>flashx.textLayout.formats.ITextLayoutFormat</linktext></link><link href="" invalidHref="flash.text.engine.ElementFormat.xml"><linktext/></link><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:GlobalSettings:resourceStringFunction:get"><apiName>resourceStringFunction</apiName><shortdesc> 2 個のパラメーター（リソース ID と、ストリングに代入されるオプションのパラメーター配列）をとる関数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 2 個のパラメーター（リソース ID と、ストリングに代入されるオプションのパラメーター配列）をとる関数。ストリングの形式は "Content {0} more content {1}" です。パラメーターはオプションの配列から読み取られます。また、TLF によって提供される角括弧（[ ]）で囲まれたサブストリングを、
デフォルトストリングが設定されたデフォルト実装で置き換えます。クライアントによっては、ローカライズ目的で、この関数を独自の実装に置き換えることもあります。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:BreakElement"><apiName>BreakElement</apiName><shortdesc> 
	BreakElement クラスは、改行を定義して、新しい段落を作成せずにテキスト内で改行を作成できるようにします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:SpecialCharacterElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	BreakElement クラスは、改行を定義して、新しい段落を作成せずにテキスト内で改行を作成できるようにします。これには、段落のテキスト内に U+2028 の文字を入力します。
	
	<p><b>注意：</b>このクラスは、主に、MXML マークアップの改行タグをサポートするために存在します。改行を作成するために、次のように、テキスト内に改行文字（¥n）を直接追加することができます。</p>
	
	<codeblock rev="3.0">
	spanElement1.text += '\n';
	</codeblock>
	
	</apiDesc><example conref="examples\BreakElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#SpanElement"><linktext>SpanElement</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:BreakElement:BreakElement"><apiName>BreakElement</apiName><shortdesc> コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクターです。 
		
		</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="flashx.textLayout.elements:InlineGraphicElement"><apiName>InlineGraphicElement</apiName><shortdesc> InlineGraphicElement クラスは、テキスト内にインラインを表示するグラフィックオブジェクトを処理します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flashx.textLayout.elements:FlowLeafElement</apiBaseClassifier></apiClassifierDef><apiDesc> InlineGraphicElement クラスは、テキスト内にインラインを表示するグラフィックオブジェクトを処理します。 
	 
	 <p>グラフィックまたは任意の DisplayObject を埋め込むか、またはグラフィックの位置を表す URl を指定します。InlineGraphicElement の <codeph>height</codeph> プロパティおよび <codeph>width</codeph> プロパティは、表示するグラフィックの実際のサイズを制御します。また、これらの値は、グラフィックを含む TextLine オブジェクトのグラフィックに割り当てるスペースも制御します。 <codeph>height</codeph> プロパティおよび <codeph>width</codeph> プロパティは、それぞれ、次のいずれかで指定できます。</p>
	 <ol>
	 <li>ピクセル数</li>
	 <li>イメージの測定サイズのパーセント値</li>
	 <li>サイズ計算をする定数の auto（デフォルト値）</li>
	 </ol>
	 グラフィックの幅と高さに関連する次の 3 つのプロパティ（またはアクセッサー）があります。
	 <ul>
	 <li><codeph>width</codeph> プロパティと <codeph>height</codeph> プロパティ。</li>
	 <li><codeph>measuredWidth</codeph> プロパティと <codeph>measuredHeight</codeph> プロパティ。読み込み時のグラフィックの幅または高さです。</li>
	 <li><codeph>actualWidth</codeph> プロパティおよび <codeph>actualHeight</codeph> プロパティ。これは、実際の表示および構成時のグラフィックの幅および高さで、<codeph>width</codeph> または <codeph>height</codeph> および <codeph>measuredWidth</codeph> または <codeph>measuredHeight</codeph> により計算されます。</li>
	 </ul>
	 <p><codeph>actualWidth</codeph> プロパティと <codeph>actualHeight</codeph> プロパティの値は、グラフィックがロードされるまで、常にゼロです。</p>
	 
	 <p><codeph>source</codeph> が URI として指定されている場合、グラフィックは非同期的にロードされます。これが DisplayObject の場合は、グラフィックが <codeph>measuredHeight</codeph> および <codeph>measuredWidth</codeph> として InlineGraphicElement オブジェクトに設定されると、TextLayout は、<codeph>width</codeph> および <codeph>height</codeph> を使用します（その幅と高さは、すぐに読み取られます）。</p>
	 <p><b>注意</b>：非同期的にロードされるグラフィックの場合、ユーザーは、TextFlow の StatusChangeEvent.INLINE_GRAPHIC_STATUS_CHANGE イベントをリッスンし、<codeph>IFlowComposer.updateAllControllers()</codeph> を呼び出して、グラフィックを表示させる必要があります。ロード中のグラフィックの <codeph>measuredWidth</codeph> および <codeph>measuredHeight</codeph> の値はゼロです。</p>
	 
	 <p>インライングラフィックの中には、オーディオを含むアニメーションまたはビデオがあります。これらは、ロードが終了して最初に構成されると、実行を開始します。TextFlow の flowComposer が null に設定されるまで、これらは実行を停止しません。null に設定されると、それらは停止して、アンロードされます。</p>
	 
	 
	 <ol>
	 	<li/>.
	 <li/>
	 	<li/>
	 </ol>
	 </apiDesc><example conref="examples\InlineGraphicElementExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualHeight"><linktext>actualHeight</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualWidth"><linktext>actualWidth</linktext></link><link href="" invalidHref="flash.display.DisplayObject.xml"><linktext>DisplayObject</linktext></link><link href="flashx.textLayout.compose.xml#IFlowComposer/updateAllControllers()"><linktext>flashx.textLayout.compose.IFlowComposer.updateAllControllers()</linktext></link><link href="flashx.textLayout.events.xml#StatusChangeEvent"><linktext>StatusChangeEvent</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:InlineGraphicElement:InlineGraphicElement"><apiName>InlineGraphicElement</apiName><shortdesc> コンストラクター - 新しい InlineGraphicElement オブジェクトを作成します。
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> コンストラクター - 新しい InlineGraphicElement オブジェクトを作成します。
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.elements:InlineGraphicElement:actualHeight:get"><apiName>actualHeight</apiName><shortdesc> 有効な実際の高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 有効な実際の高さです。これは、<codeph>height</codeph> プロパティと <codeph>measuredHeight</codeph> プロパティから計算される表示および構成時の高さです。
		
		<p><codeph>actualHeight</codeph> プロパティの値は、次のテーブルに従って構成されます。</p>
		<adobetable class="innertable">
		
		
		
		
		<tgroup cols="2"><thead><row><entry>height プロパティ</entry><entry>actualHeight</entry></row></thead><tbody><row>
		  <entry>auto</entry>
		  <entry>measuredheight</entry>
		</row><row>
		  <entry>h a Percent</entry>
		  <entry>measuredheight の h パーセント</entry>
		</row><row>
		  <entry>h a Number</entry>
		  <entry>h</entry>
		</row></tbody></tgroup></adobetable>
		<p><b>注意</b>：インライングラフィックが DisplayObject の場合、その幅と高さは即座に読み取られます。<codeph>measuredWidth</codeph> または <codeph>measuredHeight</codeph> がゼロの場合、いずれの自動計算もゼロで割られるため、結果はゼロになります。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/height"><linktext>height</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredHeight"><linktext>measuredHeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:actualWidth:get"><apiName>actualWidth</apiName><shortdesc> 有効な実際の幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 有効な実際の幅です。これは、<codeph>width</codeph> プロパティと <codeph>measuredWidth</codeph> プロパティから計算される表示および構成時の幅です。
		
		<p><codeph>actualWidth</codeph> プロパティの値は、次のテーブルに従って構成されます。</p>
		<adobetable class="innertable">
		
		
		
		
		<tgroup cols="2"><thead><row><entry>width プロパティ</entry><entry>actualWidth</entry></row></thead><tbody><row>
		  <entry>auto</entry>
		  <entry>measuredWidth</entry>
		</row><row>
		  <entry>w a Percent</entry>
		  <entry>measuredWidth の w パーセント</entry>
		</row><row>
		  <entry>w a Number</entry>
		  <entry>w</entry>
		</row></tbody></tgroup></adobetable>
		
		<p><b>注意</b>：インライングラフィックが DisplayObject の場合、その幅と高さは即座に読み取られます。<codeph>measuredWidth</codeph> または <codeph>measuredHeight</codeph> がゼロの場合、いずれの自動計算もゼロで割られるため、結果はゼロになります。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredWidth"><linktext>measuredWidth</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/width"><linktext>width</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:graphic:get"><apiName>graphic</apiName><shortdesc> 埋め込まれたグラフィックです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc> 埋め込まれたグラフィックです。 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:height:get"><apiName>height</apiName><shortdesc> イメージの高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		  </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> イメージの高さです。auto、ピクセル数、または測定された高さのパーセント値で指定できます。 
		 
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>有効な数値は、0 ～ 32000 です。</p>
		 <p>有効なパーセント値は、0 ～ 1000000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>定義されていない場合または "inherit" の場合には、InlineGraphicElement はデフォルト値の "auto" を使用します。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualHeight"><linktext>actualHeight</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredHeight"><linktext>measuredHeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:measuredHeight:get"><apiName>measuredHeight</apiName><shortdesc> グラフィックの元の高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> グラフィックの元の高さです。これは、読み込み時のグラフィックの高さです。
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualHeight"><linktext>actualHeight</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/height"><linktext>height</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:measuredWidth:get"><apiName>measuredWidth</apiName><shortdesc> グラフィックの元の幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> グラフィックの元の幅です。これは、読み込み時のグラフィックの幅です。
		
		</apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualWidth"><linktext>actualWidth</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/width"><linktext>width</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:source:get"><apiName>source</apiName><shortdesc> グラフィックのソースを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc> グラフィックのソースを設定します。値は、URI として解釈されるストリング、埋め込まれた DisplayObject のクラスとして解釈されるクラス、DisplayObject インスタンス、または URLRequest のいずれかで指定できます。DisplayObject を作成します。TextFlow オブジェクト内の ParagraphElement に InlineGraphicElement オブジェクトを追加すると、テキストにインラインが表示されます。
		 
		 </apiDesc><example conref="examples\InlineGraphicElement_sourceExample.as"/></apiValueDetail></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:status:get"><apiName>status</apiName><shortdesc> イメージの現在のステータスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> イメージの現在のステータスです。ステータスが変更されるたびに、所有する TextFlow が StatusChangeEvent を送信します。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElementStatus"><linktext>flashx.textLayout.elements.InlineGraphicElementStatus</linktext></link><link href="flashx.textLayout.events.xml#StatusChangeEvent"><linktext>flashx.textLayout.events.StatusChangeEvent</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:InlineGraphicElement:width:get"><apiName>width</apiName><shortdesc> グラフィックの幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> グラフィックの幅です。値は、auto、ピクセル数、または測定されたイメージ幅のパーセント値で指定できます。
		 
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>有効な数値は、0 ～ 32000 です。</p>
		 <p>有効なパーセント値は、0 ～ 1000000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>定義されていない場合または "inherit" の場合には、InlineGraphicElement はデフォルト値の "auto" を使用します。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#InlineGraphicElement/actualWidth"><linktext>actualWidth</linktext></link><link href="flashx.textLayout.elements.xml#InlineGraphicElement/measuredWidth"><linktext>measuredWidth</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.elements:FlowGroupElement"><apiName>FlowGroupElement</apiName><shortdesc> 
	 FlowGroupElement クラスは、子の配列を持つことができる FlowElement オブジェクトの基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion><DefaultProperty name="mxmlChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flashx.textLayout.elements:FlowElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
	 FlowGroupElement クラスは、子の配列を持つことができる FlowElement オブジェクトの基本クラスです。これらのクラスには、TextFlow、ParagraphElement、DivElement および LinkElement が含まれます。
	 
	 <p>FlowGroupElement オブジェクトを直接作成することはできません。<codeph>new FlowGroupElement()</codeph> を呼び出すと、エラー例外がスローされます。</p>
 	 
 	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#DivElement"><linktext>DivElement</linktext></link><link href="flashx.textLayout.elements.xml#LinkElement"><linktext>LinkElement</linktext></link><link href="flashx.textLayout.elements.xml#ParagraphElement"><linktext>ParagraphElement</linktext></link><link href="flashx.textLayout.elements.xml#TextFlow"><linktext>TextFlow</linktext></link></related-links><apiConstructor id="flashx.textLayout.elements:FlowGroupElement:FlowGroupElement"><apiName>FlowGroupElement</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="flashx.textLayout.elements:FlowGroupElement:addChildAt"><apiName>addChildAt</apiName><shortdesc> 
		 指定したインデックス位置に子 FlowElement オブジェクトを追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc><codeph>index</codeph> は範囲外です。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>追加された子 FlowElement 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="uint"/><apiDesc>子エレメントを追加する位置のインデックスで、最初の位置は 0 です。
		 </apiDesc></apiParam><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>追加する子エレメントです。
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定したインデックス位置に子 FlowElement オブジェクトを追加します。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_addChildAtExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:addChild"><apiName>addChild</apiName><shortdesc> 
		 子 FlowElement オブジェクトを追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>追加された子 FlowElement 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>追加する子エレメントです。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 子 FlowElement オブジェクトを追加します。子リストの最後に新しい子が追加されます。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_addChildExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:findChildIndexAtPosition"><apiName>findChildIndexAtPosition</apiName><shortdesc>
		 テキストの相対位置が指定されると、相対位置を含む最初の子 FlowElement のインデックスを検出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>relativePosition</codeph> を含む最初の子エレメントのインデックス
		 
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>	このエレメントに対する相対位置
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 テキストの相対位置が指定されると、相対位置を含む最初の子 FlowElement のインデックスを検出します。長さがゼロの FlowElements があるため、複数の子に相対位置を含めることができます。
		  
		 <p>子を検証して、相対位置を含む FlowElement を検出します。指定された相対位置は、この FlowElement に対して相対的です。</p>
		 
		 </apiDesc><example conref="examples\FlowGroupElement_findChildIndexAtPositionExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:findLeaf"><apiName>findLeaf</apiName><shortdesc>
		 テキストの相対位置が指定されると、位置を含むリーフエレメントを検出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>相対位置を含むリーフエレメントです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativePosition</apiItemName><apiType value="int"/><apiDesc>検索対象の相対的なテキストインデックスです。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 テキストの相対位置が指定されると、位置を含むリーフエレメントを検出します。 
		 
		 <p>指定された位置を含む FlowLeafElement を検出するために、フローエレメントの階層を確認します。指定された位置は、この FlowElement オブジェクトに対して相対的です。</p>
		 
		 </apiDesc><example conref="examples\FlowGroupElement_findLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getChildAt"><apiName>getChildAt</apiName><shortdesc> 
		 指定されたインデックス位置にある子 FlowElement を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定された位置にある子 FlowElement オブジェクトです。
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>FlowElement オブジェクトを検出する位置です。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定されたインデックス位置にある子 FlowElement を返します。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_getChildAtExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getChildIndex"><apiName>getChildIndex</apiName><shortdesc> 
		 指定された FlowElement オブジェクトの子の中を検索し、そのインデックス位置を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定された子のインデックス位置です。<codeph>child</codeph> が検出されない場合、-1 を返します。
		  
		 </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>子の間に配置する必要がある FlowElement オブジェクト項目です。
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定された FlowElement オブジェクトの子の中を検索し、そのインデックス位置を返します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getFirstLeaf"><apiName>getFirstLeaf</apiName><shortdesc>
		 このグループの最初の FlowLeafElement 子孫を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>最初の FlowLeafElement オブジェクトです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 このグループの最初の FlowLeafElement 子孫を返します。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_getFirstLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getLastLeaf"><apiName>getLastLeaf</apiName><shortdesc>
		 このグループの最後の FlowLeafElement 子孫を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>最後の FlowLeafElement オブジェクトです。
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowLeafElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 このグループの最後の FlowLeafElement 子孫を返します。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_getLastLeafExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:getText"><apiName>getText</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>relativeStart</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>relativeEnd</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>paragraphSeparator</apiItemName><apiType value="String"/><apiData> </apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:removeChildAt"><apiName>removeChildAt</apiName><shortdesc> 
		 指定されたインデックス位置にある子 FlowElement オブジェクトを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc><codeph>index</codeph> は範囲外です。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>指定した位置から削除された子 FlowElement オブジェクト
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="uint"/><apiDesc>この位置にある子エレメントを削除します。
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定されたインデックス位置にある子 FlowElement オブジェクトを削除します。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_removeChildAtExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:removeChild"><apiName>removeChild</apiName><shortdesc> 
		 このグループから指定された子 FlowElement オブジェクトを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc><codeph>child</codeph> が見つかりません。
		 
		 </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiReturn><apiDesc>削除された子 FlowElement オブジェクト 
		 
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>child</apiItemName><apiOperationClassifier>flashx.textLayout.elements:FlowElement</apiOperationClassifier><apiDesc>削除する子エレメントです。
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 このグループから指定された子 FlowElement オブジェクトを削除します。
		 
		 </apiDesc><example conref="examples\FlowGroupElement_removeChildExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:replaceChildren"><apiName>replaceChildren</apiName><shortdesc>
		 グループ内の子エレメントを指定された新規エレメントに置き換えます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>指定された <codeph>beginChildIndex</codeph> または <codeph>endChildIndex</codeph> は範囲外です。
	     
	     </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginChildIndex</apiItemName><apiType value="int"/><apiDesc>子配列の置換範囲の開始位置を表すインデックス値です。
		 </apiDesc></apiParam><apiParam><apiItemName>endChildIndex</apiItemName><apiType value="int"/><apiDesc>子配列の置換範囲の終了位置の次のインデックス値です。
		 </apiDesc></apiParam><apiParam><apiItemName>rest</apiItemName><apiType value="restParam"/><apiDesc>指定された範囲のエレメントを置き換えるエレメントです。フローエレメントまたはそれらの配列かベクトルを含むシーケンスにできます。
		  
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
		 グループ内の子エレメントを指定された新規エレメントに置き換えます。<codeph>beginChildIndex</codeph> および <codeph>endChildIndex</codeph> パラメーターを使用して、次のように操作を管理します。
		 <p><ul>
		 <li>エレメントを削除する場合、置換エレメントを渡しません。</li>
		 <li>エレメントを挿入する場合は、<codeph>beginChildIndex</codeph> と <codeph>endChildIndex</codeph> に同じ値を渡します。新しいエレメントは、指定されたインデックスの前に挿入されます。</li>
		 <li>エレメントを追加する場合は、<codeph>beginChildIndex</codeph> と <codeph>endChildIndex</codeph> に <codeph>numChildren</codeph> を渡します。</li>
		 </ul></p>
		 <p>他に、このメソッドは、指定されたエレメント、つまり<codeph>beginChildIndex</codeph> から始まり <codeph>endChildIndex</codeph> の手前までのエレメントを置き換えます。</p>
		 
		 </apiDesc><example conref="examples\FlowGroupElement_replaceChildrenExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.elements:FlowGroupElement:splitAtIndex"><apiName>splitAtIndex</apiName><shortdesc> 
		 childIndex パラメーターにより指定された位置でこのオブジェクトを分割します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc><codeph>childIndex</codeph> が子の長さより大きい値の場合に発生します。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException><apiReturn><apiDesc>新しい FlowGroupElement オブジェクトです。
		 </apiDesc><apiOperationClassifier>flashx.textLayout.elements:FlowGroupElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>childIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> 
		 <codeph>childIndex</codeph> パラメーターにより指定された位置でこのオブジェクトを分割します。このグループエレメントに親がある場合は、このオブジェクトのシャローコピーを作成して、そのすべての子をこのインデックスまでのエレメントで置き換えます。<codeph>childIndex</codeph> の後のエレメントをコピーに移します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.elements:FlowGroupElement:mxmlChildren:get"><apiName>mxmlChildren</apiName><shortdesc> 
		 子の配列をこのオブジェクトに追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiException><apiDesc>配列要素が FlowElement または String でない場合
		 </apiDesc><apiItemName>TypeError</apiItemName><apiOperationClassifier>TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc> 
		 子の配列をこのオブジェクトに追加します。<codeph>replaceChildren()</codeph> メソッドを使用して、配列内の各エレメントを追加します。MXML コンパイル済みのインポート時に使用されます。
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.elements.xml#FlowGroupElement/replaceChildren()"><linktext>FlowGroupElement.replaceChildren()</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.elements:FlowGroupElement:numChildren:get"><apiName>numChildren</apiName><shortdesc> 
		この FlowGroupElement オブジェクトに含まれる子 FlowElement の数を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> 
		この FlowGroupElement オブジェクトに含まれる子 FlowElement の数を返します。
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>