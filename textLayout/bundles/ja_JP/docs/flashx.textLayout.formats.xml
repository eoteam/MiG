<?xml version="1.0"?>
<apiPackage id="flashx.textLayout.formats"><apiName>flashx.textLayout.formats</apiName><apiDetail/><apiClassifier id="flashx.textLayout.formats:ITabStopFormat"><apiName>ITabStopFormat</apiName><shortdesc>
	 このインターフェイスは、タブストップ関連のプロパティに対する読み取りアクセス権を付与します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 このインターフェイスは、タブストップ関連のプロパティに対する読み取りアクセス権を付与します。
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.formats:ITabStopFormat:flashx.textLayout.formats:ITabStopFormat:alignment:get"><apiName>alignment</apiName><shortdesc>
		 このタブストップのタブの整列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このタブストップのタブの整列です。 
		 <p>有効な値は、flash.text.engine.TabAlignment.START、flash.text.engine.TabAlignment.CENTER、flash.text.engine.TabAlignment.END、flash.text.engine.TabAlignment.DECIMAL、flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は START になります。</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link><link href="" invalidHref="flash.text.engine.TabAlignment.xml"><linktext>flash.text.engine.TabAlignment</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITabStopFormat:flashx.textLayout.formats:ITabStopFormat:decimalAlignmentToken:get"><apiName>decimalAlignmentToken</apiName><shortdesc>
		 整列が DECIMAL の場合、整列トークンが使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 整列が DECIMAL の場合、整列トークンが使用されます。
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は null になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITabStopFormat:flashx.textLayout.formats:ITabStopFormat:position:get"><apiName>position</apiName><shortdesc>
		 行の先頭を基準としたタブストップの位置です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行の先頭を基準としたタブストップの位置です（ピクセル単位）。
		 <p>有効な値は、0 ～ 10000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:Direction"><apiName>Direction</apiName><shortdesc>
	  TextLayoutFormat クラスの direction プロパティを設定する値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayoutFormat</codeph> クラスの <codeph>direction</codeph> プロパティを設定する値を定義します。左から右の読み取り順は、ラテン文字形式のスクリプトで使用されます。右から左への読み取り順は、アラビア語またはヘブライ語などのスクリプトで使用されます。 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/direction"><linktext>TextLayoutFormat.direction</linktext></link></related-links><apiValue id="flashx.textLayout.formats:Direction:LTR"><apiName>LTR</apiName><shortdesc> テキストに対して、左から右への向きを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ltr</apiData><apiType value="String"/></apiValueDef><apiDesc> テキストに対して、左から右への向きを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:Direction:RTL"><apiName>RTL</apiName><shortdesc> テキストに対して、右から左への向きを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rtl</apiData><apiType value="String"/></apiValueDef><apiDesc> テキストに対して、右から左への向きを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:VerticalAlign"><apiName>VerticalAlign</apiName><shortdesc>
	  TextLayoutFormat クラスの verticalAlign プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  TextLayoutFormat クラスの <codeph>verticalAlign</codeph> プロパティの値を定義します。TextFlow エレメントをコンテナに整列させる方法を指定します。  
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/verticalAlign"><linktext>TextLayoutFormat.verticalAlign</linktext></link></related-links><apiValue id="flashx.textLayout.formats:VerticalAlign:BOTTOM"><apiName>BOTTOM</apiName><shortdesc> フレームの下端に揃えることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc> フレームの下端に揃えることを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:VerticalAlign:JUSTIFY"><apiName>JUSTIFY</apiName><shortdesc> フレーム内での垂直方向の行の均等配置を指定します。 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>justify</apiData><apiType value="String"/></apiValueDef><apiDesc> フレーム内での垂直方向の行の均等配置を指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:VerticalAlign:MIDDLE"><apiName>MIDDLE</apiName><shortdesc> フレームの中央に揃えることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>middle</apiData><apiType value="String"/></apiValueDef><apiDesc> フレームの中央に揃えることを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:VerticalAlign:TOP"><apiName>TOP</apiName><shortdesc> フレームの上端に揃えることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc> フレームの上端に揃えることを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextDecoration"><apiName>TextDecoration</apiName><shortdesc>
	  TextLayoutFormat クラスの textDecoration プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  TextLayoutFormat クラスの <codeph>textDecoration</codeph> プロパティの値を定義します。これらの値は、文字飾りなしの標準テキストまたは下線を指定します。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textDecoration"><linktext>TextLayoutFormat.textDecoration</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TextDecoration:NONE"><apiName>NONE</apiName><shortdesc> 標準テキストを指定します - 文字飾りは適用されません 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef><apiDesc> 標準テキストを指定します - 文字飾りは適用されません 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextDecoration:UNDERLINE"><apiName>UNDERLINE</apiName><shortdesc> テキストに下線が引かれることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>underline</apiData><apiType value="String"/></apiValueDef><apiDesc> テキストに下線が引かれることを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:JustificationRule"><apiName>JustificationRule</apiName><shortdesc>
	  TextLayoutFormat クラスの justificationRule プロパティを設定する値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  TextLayoutFormat クラスの <codeph>justificationRule</codeph> プロパティを設定する値を定義します。デフォルト値は SPACE で、空白文字に追加のスペースを追加して均等配置が行われます。EAST_ASIAN を使用すると日本語スタイルの行送りが採用されます。この行送りは、ローマンテキストで使用される top-up とは逆の bottom-down です。句読点のスペースも異なります。ローマンでは、カンマと日本語の句点には 1 文字分の幅を使用しますが、日中韓では半文字分しか使用しません。また、従来の日中韓の活字規則に従って、連続する句読点間のスペースは狭くなります。次の例の、段落の 2 行目に適用された行送りにも注目してください。日中韓では、最後の 2 行が左に寄せられます。ローマンでは、2 行目以降が左に寄せられます。
	  <p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/justificationRule"><linktext>TextLayoutFormat.justificationRule</linktext></link></related-links><apiValue id="flashx.textLayout.formats:JustificationRule:EAST_ASIAN"><apiName>EAST_ASIAN</apiName><shortdesc> 日中韓の均等配置ルールを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>eastAsian</apiData><apiType value="String"/></apiValueDef><apiDesc> 日中韓の均等配置ルールを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:JustificationRule:SPACE"><apiName>SPACE</apiName><shortdesc> スペースを使用して単語を分割する、ラテン語などの横書きスクリプトの均等配置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>space</apiData><apiType value="String"/></apiValueDef><apiDesc> スペースを使用して単語を分割する、ラテン語などの横書きスクリプトの均等配置を指定します。この値を、日中韓以外のすべてのテキストに使用します。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextJustify"><apiName>TextJustify</apiName><shortdesc>
	  TextLayoutFormat クラスの textJustify プロパティを設定する値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  TextLayoutFormat クラスの <codeph>textJustify</codeph> プロパティを設定する値を定義します。デフォルト値は INTER_WORD で、均等配置の際に、空白文字に追加スペースが加えられます。DISTRIBUTE は、空白文字と個々の文字間の両方に追加スペースが加えられることを指定します。これらの値は、<codeph>justificationRule</codeph> を SPACE に設定する場合にのみ使用します。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textJustify"><linktext>TextLayoutFormat.textJustify</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/justificationRule"><linktext>TextLayoutFormat.justificationRule</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TextJustify:DISTRIBUTE"><apiName>DISTRIBUTE</apiName><shortdesc> 空白文字と個々の文字間の両方にスペースを追加して均等配置を実行することを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>distribute</apiData><apiType value="String"/></apiValueDef><apiDesc> 空白文字と個々の文字間の両方にスペースを追加して均等配置を実行することを指定します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextJustify:INTER_WORD"><apiName>INTER_WORD</apiName><shortdesc> 空白文字にスペースを追加して均等配置を実行することを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>interWord</apiData><apiType value="String"/></apiValueDef><apiDesc> 空白文字にスペースを追加して均等配置を実行することを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TLFTypographicCase"><apiName>TLFTypographicCase</apiName><shortdesc>
	  TextLayoutFormat クラスの typographicCase プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  TextLayoutFormat クラスの <codeph>typographicCase</codeph> プロパティの値を定義します。 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/typographicCase"><linktext>TextLayoutFormat.typographicCase</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TLFTypographicCase:CAPS_TO_SMALL_CAPS"><apiName>CAPS_TO_SMALL_CAPS</apiName><shortdesc> 出力時に大文字でスモールキャップ文字を使用するよう指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>capsToSmallCaps</apiData><apiType value="String"/></apiValueDef><apiDesc> 出力時に大文字でスモールキャップ文字を使用するよう指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:DEFAULT"><apiName>DEFAULT</apiName><shortdesc> デフォルトの大文字と小文字の区別を指定します。特別な機能は適用されません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>default</apiData><apiType value="String"/></apiValueDef><apiDesc> デフォルトの大文字と小文字の区別を指定します。特別な機能は適用されません。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:LOWERCASE_TO_SMALL_CAPS"><apiName>LOWERCASE_TO_SMALL_CAPS</apiName><shortdesc> すべての小文字を大文字に変換し、変換で変更された文字にのみスモールキャップスを適用します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lowercaseToSmallCaps</apiData><apiType value="String"/></apiValueDef><apiDesc> すべての小文字を大文字に変換し、変換で変更された文字にのみスモールキャップスを適用します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:LOWERCASE"><apiName>LOWERCASE</apiName><shortdesc> 出力時にすべての文字で小文字を使用するよう指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lowercase</apiData><apiType value="String"/></apiValueDef><apiDesc> 出力時にすべての文字で小文字を使用するよう指定します。 
  	 	 
  	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TLFTypographicCase:UPPERCASE"><apiName>UPPERCASE</apiName><shortdesc> 出力時にすべての文字で大文字を使用するよう指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>uppercase</apiData><apiType value="String"/></apiValueDef><apiDesc> 出力時にすべての文字で大文字を使用するよう指定します。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BaselineShift"><apiName>BaselineShift</apiName><shortdesc>
	  TextLayoutFormat クラスの baselineShift プロパティのサブスクリプトまたはスーパースクリプトを指定する定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayoutFormat</codeph> クラスの <codeph>baselineShift</codeph> プロパティのサブスクリプトまたはスーパースクリプトを指定する定数を定義します。ベースラインシフトは、絶対ピクセルオフセット、現在のポイントサイズのパーセント、または定数 SUPERSCRIPT または SUBSCRIPT として指定できます。正の値を指定すると、行は横書きの場合は上に（縦書きの場合は右に）移動し、負の値を指定すると、行は横書きの場合は下に（縦書きの場合は左に）移動します。 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/baselineShift"><linktext>TextLayoutFormat.baselineShift</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BaselineShift:SUBSCRIPT"><apiName>SUBSCRIPT</apiName><shortdesc> ベースラインを現在のサブスクリプトの位置に移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscript</apiData><apiType value="String"/></apiValueDef><apiDesc> ベースラインを現在のサブスクリプトの位置に移動します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BaselineShift:SUPERSCRIPT"><apiName>SUPERSCRIPT</apiName><shortdesc> ベースラインを現在のスーパースクリプトの位置に移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>superscript</apiData><apiType value="String"/></apiValueDef><apiDesc> ベースラインを現在のスーパースクリプトの位置に移動します。
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TabStopFormat"><apiName>TabStopFormat</apiName><shortdesc>
	 TabStopFormat クラスは、段落内のタブストップのプロパティを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.formats:ITabStopFormat</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 TabStopFormat クラスは、段落内のタブストップのプロパティを表します。<codeph>TextLayoutFormat.tabstops</codeph> プロパティを、TabStopFormat オブジェクトの配列に設定できます。
	 </apiDesc><example conref="examples\TabStopFormat_example.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#TabElement"><linktext>flashx.textLayout.elements.TabElement</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/tabStops"><linktext>flashx.textLayout.formats.TextLayoutFormat.tabStops</linktext></link></related-links><apiConstructor id="flashx.textLayout.formats:TabStopFormat:TabStopFormat"><apiName>TabStopFormat</apiName><shortdesc>
		 新しい TabStopFormat オブジェクトを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initialValues</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiData>null</apiData><apiDesc>初期値のコピー元のオプションインスタンス。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 新しい TabStopFormat オブジェクトを作成します。すべての設定は空か、またはオプションで、用意されている <codeph>initialValues</codeph> オブジェクトから初期化されます。
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.formats.xml#TabStopFormat/defaultFormat"><linktext>defaultFormat</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.formats:TabStopFormat:apply"><apiName>apply</apiName><shortdesc>
		 この TabStopFormat オブジェクトのプロパティ値を、ITabStopFormat インスタンスである incoming に設定されているプロパティ値に置き換えます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>プロパティ値をこの TabStopFormat オブジェクトに適用するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 この TabStopFormat オブジェクトのプロパティ値を、ITabStopFormat インスタンスである <codeph>incoming</codeph> に設定されているプロパティ値に置き換えます。ITabStopFormat インスタンスである <codeph>incoming</codeph> で <codeph>undefined</codeph> のプロパティは、このオブジェクトで変更されません。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:concatInheritOnly"><apiName>concatInheritOnly</apiName><shortdesc>
		 ITabStopFormat インスタンスである incoming のプロパティ値を、この TabStopFormat オブジェクトの値に連結します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>値の連結元のインスタンス。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITabStopFormat インスタンスである <codeph>incoming</codeph> のプロパティ値を、この TabStopFormat オブジェクトの値に連結します。この（受信側）TabStopFormat オブジェクトでは、値が <codeph>FormatValue.INHERIT</codeph> のプロパティと、値が <codeph>undefined</codeph> の継承プロパティには、<codeph>incoming</codeph> オブジェクトからの新しい値が設定されます。その他のすべてのプロパティ値は、変更されません。
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:concat"><apiName>concat</apiName><shortdesc>
		 ITabStopFormat インスタンスである incoming のプロパティ値を、この TabStopFormat オブジェクトの値に連結します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>値の連結元のインスタンス。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITabStopFormat インスタンスである <codeph>incoming</codeph> のプロパティ値を、この TabStopFormat オブジェクトの値に連結します。この（受信側）TabStopFormat オブジェクトでは、値が <codeph>FormatValue.INHERIT</codeph> のプロパティと、値が <codeph>undefined</codeph> の継承プロパティには、<codeph>incoming</codeph> オブジェクトからの新しい値が設定されます。値が <codeph>undefined</codeph> の非継承プロパティにはデフォルト値が設定されます。その他のすべてのプロパティ値は、変更されません。
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:copy"><apiName>copy</apiName><shortdesc>
		 TabStopFormat 設定を ITabStopFormat インスタンスである values からこの TabStopFormat オブジェクトにコピーします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>値のコピー元のオプションインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 TabStopFormat 設定を  ITabStopFormat インスタンスである <codeph>values </codeph> からこの TabStopFormat オブジェクトにコピーします。<codeph>values</codeph> が <codeph>null</codeph> の場合、この TabStopFormat オブジェクトは、すべてのプロパティの値が未定義の状態で初期化されます。
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:isEqual"><apiName>isEqual</apiName><shortdesc>
		 ITabStopFormat インスタンス p1 のプロパティと ITabStopFormat インスタンス p2 のプロパティを比較し、すべてのプロパティが一致する場合は true を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>すべてのプロパティが一致する場合は true、それ以外の場合は false。
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>p1</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc><codeph>p2</codeph> と比較するインスタンス。
		 </apiDesc></apiParam><apiParam><apiItemName>p2</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc><codeph>p1</codeph> と比較するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITabStopFormat インスタンス <codeph>p1</codeph> のプロパティと ITabStopFormat インスタンス <codeph>p2</codeph> のプロパティを比較し、すべてのプロパティが一致する場合は <codeph>true</codeph> を返します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:removeClashing"><apiName>removeClashing</apiName><shortdesc>
		 ITabStopFormat インスタンスである incoming のプロパティと一致しない場合は、この TabStopFormat オブジェクトのプロパティを undefined に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>この TabStopFormat オブジェクトのプロパティ値と比較するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITabStopFormat インスタンスである <codeph>incoming</codeph> のプロパティと一致しない場合は、この TabStopFormat オブジェクトのプロパティを <codeph>undefined</codeph> に設定します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TabStopFormat:removeMatching"><apiName>removeMatching</apiName><shortdesc>
		 ITabStopFormat インスタンスである incoming のプロパティと一致する場合は、この TabStopFormat オブジェクトのプロパティを undefined に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITabStopFormat</apiOperationClassifier><apiDesc>この TabStopFormat オブジェクトのプロパティ値と比較するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITabStopFormat インスタンスである <codeph>incoming</codeph> のプロパティと一致する場合は、この TabStopFormat オブジェクトのプロパティを <codeph>undefined</codeph> に設定します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.formats:TabStopFormat:alignment:get"><apiName>alignment</apiName><shortdesc>
		 このタブストップのタブの整列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このタブストップのタブの整列です。 
		 <p>有効な値は、flash.text.engine.TabAlignment.START、flash.text.engine.TabAlignment.CENTER、flash.text.engine.TabAlignment.END、flash.text.engine.TabAlignment.DECIMAL、flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は START になります。</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link><link href="" invalidHref="flash.text.engine.TabAlignment.xml"><linktext>flash.text.engine.TabAlignment</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TabStopFormat:decimalAlignmentToken:get"><apiName>decimalAlignmentToken</apiName><shortdesc>
		 整列が DECIMAL の場合、整列トークンが使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 整列が DECIMAL の場合、整列トークンが使用されます。
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は null になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TabStopFormat:defaultFormat:get"><apiName>defaultFormat</apiName><shortdesc>
		 デフォルト設定の TabStopFormat オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITabStopFormat</apiValueClassifier></apiValueDef><apiDesc>
		 デフォルト設定の TabStopFormat オブジェクトを返します。この関数は、常に同じオブジェクトを返します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TabStopFormat:position:get"><apiName>position</apiName><shortdesc>
		 行の先頭を基準としたタブストップの位置です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行の先頭を基準としたタブストップの位置です（ピクセル単位）。
		 <p>有効な値は、0 ～ 10000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>FormatValue.INHERIT</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:FormatValue"><apiName>FormatValue</apiName><shortdesc>
	  フォーマットプロパティを親の値から継承するのか、値を自動的に生成するのかを決定する値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  フォーマットプロパティを親の値から継承するのか、値を自動的に生成するのかを決定する値を定義します。<codeph>INHERIT</codeph> 定数は、プロパティが親の値を継承することを指定します。これに対し、<codeph>AUTO</codeph> 定数は、内部アルゴリズムによってプロパティ値が自動的に決定されることを指定します。例えば、これらの値を使用して <codeph>TextLayoutFormat.columnWidth</codeph> を設定できます。一般に、プロパティの記述は、これらの定数を受け入れるかどうかを示します。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat"><linktext>TextLayoutFormat</linktext></link></related-links><apiValue id="flashx.textLayout.formats:FormatValue:AUTO"><apiName>AUTO</apiName><shortdesc> プロパティ値が自動的に生成されることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> プロパティ値が自動的に生成されることを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:FormatValue:INHERIT"><apiName>INHERIT</apiName><shortdesc> プロパティが親の値を継承することを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>inherit</apiData><apiType value="String"/></apiValueDef><apiDesc> プロパティが親の値を継承することを指定します。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextAlign"><apiName>TextAlign</apiName><shortdesc>
	  TextLayoutFormat クラスの textAlign および textAlignLast プロパティを設定する値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  TextLayoutFormat クラスの <codeph>textAlign</codeph> および <codeph> textAlignLast </codeph> プロパティを設定する値を定義します。これらの値は、コンテナを基準にした段落内の行揃えを示します。
	 
	 </apiDesc><example conref="examples\TextAlignExample.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textAlign"><linktext>TextLayoutFormat.textAlign</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/textAlignLast"><linktext>TextLayoutFormat.textAlignLast</linktext></link></related-links><apiValue id="flashx.textLayout.formats:TextAlign:CENTER"><apiName>CENTER</apiName><shortdesc> コンテナ内での中央揃えを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc> コンテナ内での中央揃えを指定します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:END"><apiName>END</apiName><shortdesc> 終端揃えを指定します。テキストは書き込み順とは反対から揃えられます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>end</apiData><apiType value="String"/></apiValueDef><apiDesc> 終端揃えを指定します。テキストは書き込み順とは反対から揃えられます。左から右のテキストで右、または右から左のテキストで左を指定することに相当します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:JUSTIFY"><apiName>JUSTIFY</apiName><shortdesc> コンテナスペースを埋めるように、テキストを行内に均等配置することを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>justify</apiData><apiType value="String"/></apiValueDef><apiDesc> コンテナスペースを埋めるように、テキストを行内に均等配置することを指定します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:LEFT"><apiName>LEFT</apiName><shortdesc> 左端揃えを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc> 左端揃えを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:RIGHT"><apiName>RIGHT</apiName><shortdesc> 右端揃えを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc> 右端揃えを指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextAlign:START"><apiName>START</apiName><shortdesc> 始端揃えを指定します - テキストは、書き込み順と一致するように揃えられます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>start</apiData><apiType value="String"/></apiValueDef><apiDesc> 始端揃えを指定します - テキストは、書き込み順と一致するように揃えられます。左から右のテキストで左、または右から左のテキストで右を設定することに相当します。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:TextLayoutFormat"><apiName>TextLayoutFormat</apiName><shortdesc>
	 TextLayoutFormat クラスは、すべてのテキストレイアウトプロパティを保持します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flashx.textLayout.formats:ITextLayoutFormat</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 TextLayoutFormat クラスは、すべてのテキストレイアウトプロパティを保持します。これらのプロパティは、コンテナレベル、段落レベルおよびテキストレベルでテキストフローのフォーマットおよびスタイルに影響を与えます。ContainerController クラスと FlowElement 基本クラスには <codeph>format</codeph> プロパティがあり、これによってクラスに TextLayoutFormat インスタンスを割り当てることができます。TextLayoutFormat オブジェクトをコンテナに割り当てると、コンテナのすべてのコンテンツのフォーマットに影響を与えます。TextLayoutFormat オブジェクトを FlowElement の子孫に割り当てると、その特定のエレメント（TextFlow、ParagraphElement、DivElement、SpanElement、InlineGraphicElement、LinkElement および TCYElement）のフォーマットが指定されます。<codeph>format</codeph> プロパティのほかに、これらのクラスでも個々の TextLayoutFormat プロパティが定義されます。これにより、必要に応じて、そのエレメントの特定のスタイルプロパティの設定を上書きできます。 <p>複数レベルで任意のスタイルを設定できるため、競合が発生する可能性があります。例えば、TextFlow レベルでテキストの色が黒に設定され、SpanElement オブジェクトでは青に設定されることがあります。一般的なルールでは、テキストフローツリーの最下位レベルでの設定が優先されます。このため、合字レベルが TextFlow インスタンスに設定され、DivElement にも設定された場合、DivElement の設定が優先されます。 </p><p>カスケードスタイルは、下位レベルでスタイル値が未定義の場合、テキストフローの上位レベルからスタイルを採用するプロセスを指します。レンダリングされる時点においてエレメントでスタイルが未定義の場合、デフォルト値が使用されるか、親エレメント値から値がカスケードまたは派生されます。例えば、テキストの透明度（<codeph>textAlpha</codeph> プロパティ）が SpanElement オブジェクトでは未定義だが、TextFlow では設定されている場合、<codeph>TextFlow.textAlpha</codeph> プロパティの値が SpanElement オブジェクトにカスケードされ、その範囲のテキストに適用されます。カスケード結果（エレメントに適用されたスタイルの合計）は、エレメントの <codeph>computedFormat</codeph> プロパティに格納されます。</p><p>同様に、ContainerController および FlowElement クラスの <codeph>userStyles</codeph> プロパティを使用して、ユーザースタイルを適用できます。このプロパティでは、ユーザースタイルのディクショナリの読み取りまたは書き込みを行い、その設定をコンテナまたはテキストフローエレメントに適用できます。ユーザースタイルディクショナリは、<i>stylename-value</i> のペアで構成されるオブジェクトです。<codeph>userStyles</codeph> プロパティで指定されたスタイルは、他のすべてに優先されます。</p><p>未定義のスタイルのほとんどは、カスケード時に直接の親から値を継承します。一部のスタイルは、親から値を継承せず、自身のデフォルト値を採用します。</p><p><b>未定義のときに自身のデフォルト値を採用するスタイルプロパティには、</b><codeph>backgroundAlpha</codeph>、<codeph>backgroundColor</codeph>、<codeph>columnCount</codeph>、<codeph>columnGap</codeph>、<codeph>columnWidth</codeph>、<codeph>lineBreak</codeph>、<codeph>paddingBottom</codeph>、<codeph>paddingLeft</codeph>、<codeph>paddingRight</codeph>、<codeph>paddingTop</codeph>、<codeph>verticalAlign</codeph> などがあります</p>。
	 </apiDesc><example conref="examples\TextLayoutFormatExample.as"/><example conref="examples\TextLayoutFormatExample2.as"/></apiClassifierDetail><related-links><link href="flashx.textLayout.elements.xml#FlowElement/format"><linktext>flashx.textLayout.elements.FlowElement.format</linktext></link><link href="flashx.textLayout.factory.xml#TextFlowTextLineFactory"><linktext>flashx.textLayout.factory.TextFlowTextLineFactory</linktext></link></related-links><apiConstructor id="flashx.textLayout.formats:TextLayoutFormat:TextLayoutFormat"><apiName>TextLayoutFormat</apiName><shortdesc>
		 新しい TextLayoutFormat オブジェクトを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initialValues</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiData>null</apiData><apiDesc>初期値のコピー元のオプションインスタンス。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 新しい TextLayoutFormat オブジェクトを作成します。すべての設定は空か、またはオプションで、用意されている <codeph>initialValues</codeph> オブジェクトから初期化されます。
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/defaultFormat"><linktext>defaultFormat</linktext></link></related-links></apiConstructor><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:apply"><apiName>apply</apiName><shortdesc>
		 この TextLayoutFormat オブジェクトのプロパティ値を、ITextLayoutFormat インスタンスである incoming で設定されているプロパティ値に置き換えます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>プロパティ値をこの TextLayoutFormat オブジェクトに適用するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 この TextLayoutFormat オブジェクトのプロパティ値を、ITextLayoutFormat インスタンスである <codeph>incoming</codeph> で設定されているプロパティ値に置き換えます。ITextLayoutFormat インスタンスである <codeph>incoming</codeph> で <codeph>undefined</codeph> のプロパティは、このオブジェクトで変更されません。
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_applyExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:concatInheritOnly"><apiName>concatInheritOnly</apiName><shortdesc>
		 ITextLayoutFormat インスタンスである incoming のプロパティ値を、この TextLayoutFormat オブジェクトの値に連結します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>値の連結元のインスタンス。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITextLayoutFormat インスタンスである <codeph>incoming</codeph> のプロパティ値を、この TextLayoutFormat オブジェクトの値に連結します。この（受信側）TextLayoutFormat オブジェクトでは、値が <codeph>FormatValue.INHERIT</codeph> のプロパティと、値が <codeph>undefined</codeph> の継承プロパティには、<codeph>incoming</codeph> オブジェクトからの新しい値が設定されます。その他のすべてのプロパティ値は、変更されません。
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_concatInheritOnlyExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:concat"><apiName>concat</apiName><shortdesc>
		 ITextLayoutFormat インスタンスである incoming のプロパティ値を、この TextLayoutFormat オブジェクトの値に連結します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>値の連結元のインスタンス。
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITextLayoutFormat インスタンスである <codeph>incoming</codeph> のプロパティ値を、この TextLayoutFormat オブジェクトの値に連結します。この（受信側）TextLayoutFormat オブジェクトでは、値が <codeph>FormatValue.INHERIT</codeph> のプロパティと、値が <codeph>undefined</codeph> の継承プロパティには、<codeph>incoming</codeph> オブジェクトからの新しい値が設定されます。値が <codeph>undefined</codeph> の非継承プロパティにはデフォルト値が設定されます。その他のすべてのプロパティ値は、変更されません。
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_concatExample.as"/></apiOperationDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue/INHERIT"><linktext>flashx.textLayout.formats.FormatValue.INHERIT</linktext></link></related-links></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:copy"><apiName>copy</apiName><shortdesc>
		 TextLayoutFormat 設定を ITextLayoutFormat インスタンスである values からこの TextLayoutFormat オブジェクトにコピーします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>値のコピー元のオプションインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 TextLayoutFormat 設定を ITextLayoutFormat インスタンスである <codeph>values</codeph> からこの TextLayoutFormat オブジェクトにコピーします。<codeph>values</codeph> が <codeph>null</codeph> の場合、この TextLayoutFormat オブジェクトは、すべてのプロパティの値が未定義の状態で初期化されます。
		 </apiDesc><example conref="examples\TextLayoutFormat_copyExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:isEqual"><apiName>isEqual</apiName><shortdesc>
		 ITextLayoutFormat インスタンス p1 のプロパティと ITextLayoutFormat インスタンス p2 のプロパティを比較し、すべてのプロパティが一致する場合は true を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>すべてのプロパティが一致する場合は true、それ以外の場合は false。
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>p1</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc><codeph>p2</codeph> と比較するインスタンス。
		 </apiDesc></apiParam><apiParam><apiItemName>p2</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc><codeph>p1</codeph> と比較するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 ITextLayoutFormat インスタンス <codeph>p1</codeph>のプロパティと ITextLayoutFormat インスタンス <codeph>p2</codeph> のプロパティを比較し、すべてのプロパティが一致する場合は <codeph>true</codeph> を返します。
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:removeClashing"><apiName>removeClashing</apiName><shortdesc>
		 この TextLayoutFormat オブジェクトのプロパティが ITextLayoutFormat インスタンスである incoming のプロパティと一致しない場合は、undefined に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>この TextLayoutFormat オブジェクトのプロパティ値と比較するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 この TextLayoutFormat オブジェクトのプロパティが ITextLayoutFormat インスタンスである <codeph>incoming</codeph> のプロパティと一致しない場合は、<codeph>undefined</codeph> に設定します。
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_removeClashingExample.as"/></apiOperationDetail></apiOperation><apiOperation id="flashx.textLayout.formats:TextLayoutFormat:removeMatching"><apiName>removeMatching</apiName><shortdesc>
		 この TextLayoutFormat オブジェクトのプロパティが ITextLayoutFormat インスタンスである incoming のプロパティと一致する場合は、undefined に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>incoming</apiItemName><apiOperationClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiOperationClassifier><apiDesc>この TextLayoutFormat オブジェクトのプロパティ値と比較するインスタンス。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 この TextLayoutFormat オブジェクトのプロパティが ITextLayoutFormat インスタンスである <codeph>incoming</codeph> のプロパティと一致する場合は、<codeph>undefined</codeph> に設定します。
		 
		 </apiDesc><example conref="examples\TextLayoutFormat_removeMatchingExample.as"/></apiOperationDetail></apiOperation><apiValue id="flashx.textLayout.formats:TextLayoutFormat:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 行の基準を揃えるベースラインを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行の基準を揃えるベースラインを指定します。例えば、<codeph>dominantBaseline</codeph> を ASCENT に設定し、<codeph>alignmentBaseline</codeph> を DESCENT に設定すると、テキスト上部が DESCENT ベースライン上またはラインの下に揃えられます。一般に、ベースラインは行内の最大エレメントにより決定されます。<p><adobeimage alt="baselines" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>有効な値は、flash.text.engine.TextBaseline.ROMAN、flash.text.engine.TextBaseline.ASCENT、flash.text.engine.TextBaseline.DESCENT、flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP、flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER、flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM、flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は USE_DOMINANT_BASELINE になります。</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 背景のアルファ（透明）値です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 背景のアルファ（透明）値です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。値 0 は完全に透明、値 1 は完全に不透明です。alpha が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
		 <p>有効な値は、0 ～ 1 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 1 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 テキストの背景色です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの背景色です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。<codeph>BackgroundColor.TRANSPARENT</codeph> の定数値、または 3 つの 8 ビットの RGB（赤、緑、青）値を指定する 16 進値のいずれかを指定できます。例えば、0xFF0000 は赤、0x00FF00 は緑です。
		 <p>有効な値は、flashx.textLayout.formats.BackgroundColor.TRANSPARENT、flashx.textLayout.formats.FormatValue.INHERIT の文字列、および 0x0 から 0xffffffff の uint です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TRANSPARENT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 ベースラインを dominantBaseline 値から移動させる量です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 ベースラインを <codeph>dominantBaseline</codeph> 値から移動させる量です。単位は、ピクセルまたは <codeph>fontSize</codeph> のパーセント値（この場合は 140％のように文字列値を入力）です。正の値を指定すると、行は横書きの場合は上に（縦書きの場合は右に）移動し、負の値を指定すると、行は横書きの場合は下に（縦書きの場合は左に）移動します。 
		 <p>有効な値は、flashx.textLayout.formats.BaselineShift.SUPERSCRIPT、flashx.textLayout.formats.BaselineShift.SUBSCRIPT および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0.0 になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 垂直方向または並行方向の行配置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 垂直方向または並行方向の行配置を指定します。行は、上から下（横書用の <codeph>BlockProgression.TB</codeph>）または右から左（縦書用の <codeph>BlockProgression.RL</codeph>）に配置されます。
		 <p>有効な値は、flashx.textLayout.formats.BlockProgression.RL、flashx.textLayout.formats.BlockProgression.TB および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は TB になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 折り返しのあるテキストを複数行に分割する際の、改行可能位置を制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 折り返しのあるテキストを複数行に分割する際の、改行可能位置を制御します。テキストを標準的に改行する場合は、<codeph>BreakOpportunity.AUTO</codeph> に設定します。テキストがサイズを超過し、改行する場所が他にない場合<i>以外</i>は改行しない場合は、<codeph>BreakOpportunity.NONE</codeph> に設定します。単語間のみでなく、どの位置でも改行を許可する場合は、<codeph>BreakOpportunity.ANY</codeph> に設定します。タイポグラフィッククラスタごとに改行する場合は、<codeph>BreakOpportunity.ALL</codeph> に設定します（パス上のテキストに有効）。
		 <p>有効な値は、flash.text.engine.BreakOpportunity.ALL、flash.text.engine.BreakOpportunity.ANY、flash.text.engine.BreakOpportunity.AUTO、flash.text.engine.BreakOpportunity.NONE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 このテキストに使用される CFF ヒンティングのタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される CFF ヒンティングのタイプです。CFF ヒンティングによって、Flash ランタイムで太い水平線がサブピクセルグリッドに合わされるか合わされないかが決定されます。このプロパティは、<codeph>renderingMode</codeph> プロパティが <codeph>RenderingMode.CFF</codeph> に設定されていて、フォントが埋め込まれている（<codeph>fontLookup</codeph> プロパティが <codeph>FontLookup.EMBEDDED_CFF</codeph> に設定されている）場合にのみ適用されます。スクリーンサイズが小さい場合は、ヒンティングによって、鮮明で読みやすいテキストの表示が可能になります。
		 <p>有効な値は、flash.text.engine.CFFHinting.NONE、flash.text.engine.CFFHinting.HORIZONTAL_STEM および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は HORIZONTAL_STEM になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:color:get"><apiName>color</apiName><shortdesc>
		 テキストの色です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの色です。3 つの 8 ビットの RGB（赤、緑、青）値を指定する 16 進値を指定できます。例えば、0xFF0000 は赤、0x00FF00 は緑です。 
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 テキスト列の数です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキスト列の数です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。列数は、列の他の設定をオーバーライドします。値は整数か、指定されない場合は <codeph>FormatValue.AUTO</codeph> になります。<codeph>columnCount</codeph> が指定されない場合は、<codeph>columnWidth</codeph> により、コンテナに収まる最大数の列が作成されます。
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 1 ～ 50 の int です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 列間のふち取り領域をピクセル単位で指定します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 列間のふち取り領域をピクセル単位で指定します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 20 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 列幅（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 列幅（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。列の幅を指定して列の数を指定しない場合、TextLayout により、コンテナ幅と <codeph>columnGap</codeph> の設定に基づき、その幅の列が可能な限り最大数作成されます。余りのスペースがある場合は、最後の列の後に置かれます。値は数値で指定します。
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 0 ～ 8000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:defaultFormat:get"><apiName>defaultFormat</apiName><shortdesc>
		 デフォルト設定の TextLayoutFormat オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>flashx.textLayout.formats:ITextLayoutFormat</apiValueClassifier></apiValueDef><apiDesc>
		 デフォルト設定の TextLayoutFormat オブジェクトを返します。この関数は、常に同じオブジェクトを返します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 このテキストに使用される数字の大文字小文字区別のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される数字の大文字小文字区別のタイプです。値を <codeph>DigitCase.OLD_STYLE</codeph> に設定すると、様々なアセンダとディセンダを持つ小文字の書体に近づきます。その文字幅は形状によって設定されます。このスタイルは、選択した書体（最も一般的には Supplemental フォントまたは Expert フォント）でのみ有効です。<codeph>DigitCase.LINING</codeph> に設定すると、大文字全体の高さとなり、一般にグラフで整列させる場合に文字幅が等幅になります。<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>有効な値は、flash.text.engine.DigitCase.DEFAULT、flash.text.engine.DigitCase.LINING、flash.text.engine.DigitCase.OLD_STYLE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 このテキストに使用される数字の幅のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される数字の幅のタイプです。値は、個々の数字を表示する場合に最適な <codeph>DigitWidth.PROPORTIONAL</codeph> と、表、グラフおよび縦の列に数字を表示する場合に最適な <codeph>DigitWidth.TABULAR</codeph> があります。<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>有効な値は、flash.text.engine.DigitWidth.DEFAULT、flash.text.engine.DigitWidth.PROPORTIONAL、flash.text.engine.DigitWidth.TABULAR および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:direction:get"><apiName>direction</apiName><shortdesc>
		 テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。ラテン文字などでは左から右の読み順、アラビア文字やヘブライ文字などでは右から左の読み順となります。このプロパティは、コンテナレベルで適用された場合、列の方向にも影響します。列もテキストと同様、左から右、または右から左のいずれかに設定できます。以下に例を示します。<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>有効な値は、flashx.textLayout.formats.Direction.LTR、flashx.textLayout.formats.Direction.RTL および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は LTR になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 行のエレメントの垂直座標を決定するために alignmentBaseline に吸着させるエレメントのベースラインを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行のエレメントの垂直座標を決定するために <codeph>alignmentBaseline</codeph> に吸着させるエレメントのベースラインを指定します。<codeph>TextBaseline.AUTO</codeph> を指定した場合、親段落の <codeph>locale</codeph> プロパティに基づいて、行の基準が選択されます。日本語と中国語の場合、選択されるベースラインの値は <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph> で、他のすべての言語では <codeph>TextBaseline.ROMAN</codeph> となります。ベースラインに関するこれらの選択は、フォントおよびフォントサイズの選択によって決定されます。<p><adobeimage alt="baselines" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flash.text.engine.TextBaseline.ROMAN、flash.text.engine.TextBaseline.ASCENT、flash.text.engine.TextBaseline.DESCENT、flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP、flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER、flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 コンテナ内の最初の行のベースライン位置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 コンテナ内の最初の行のベースライン位置を指定します。このプロパティがどのベースラインを参照するかは、コンテナレベルのロケールにより異なります。これは、日本語と中国語で <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>、他のすべての言語で <codeph>TextBaseline.ROMAN</codeph> となります。コンテナの上部のインセット（<codeph>blockProgression</codeph> が RL の場合は右側のインセット）から 1 行目のベースラインへのオフセットの値には、<codeph>BaselineOffset.ASCENT</codeph>（行のアセント）、<codeph>BaselineOffset.LINE_HEIGHT</codeph>（1 行目の高さ）、または絶対距離を指定する任意の固定数値を指定できます。<codeph>BaselineOffset.AUTO</codeph> に指定すると、行のアセントとコンテナの上部のインセットが揃えられます。<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.BaselineOffset.AUTO、flashx.textLayout.formats.BaselineOffset.ASCENT、flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 0 ～ 1000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		  使用するフォント名またはフォント名のカンマ区切りリストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		  使用するフォント名またはフォント名のカンマ区切りリストです。リスト内の使用できる先頭のフォントを使用してエレメントをレンダリングします。例えば、「Arial」、「Helvetica」、「_sans」の場合は、「Arial」が検索され、Arial が見つからないときは「Helvetica」が、それらがいずれも見つからないときは「_sans」が検索されます。
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は Arial になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 使用するフォント参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 使用するフォント参照です。<codeph>FontLookup.DEVICE</codeph> に指定すると、SWF ファイルが実行されるシステムにインストールされているフォントが使用されます。デバイスフォントを使用するとムービーサイズが小さくなりますが、異なるシステムおよびプラットフォームで、テキストが必ずしも同じようにレンダリングされる訳ではありません。<codeph>FontLookup.EMBEDDED_CFF</codeph> に指定すると、パブリッシュされた SWF ファイルに埋め込まれたフォントのアウトラインが使用されます。埋め込みフォントを使用すると、SWF ファイルのサイズが（ときには大幅に）大きくなりますが、テキストは常に選択されたフォントで表示されます。
		 <p>有効な値は、flash.text.engine.FontLookup.DEVICE、flash.text.engine.FontLookup.EMBEDDED_CFF および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEVICE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 テキストのサイズ（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのサイズ（ピクセル単位）です。
		 <p>有効な値は、1 ～ 720 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 12 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 テキストのスタイルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのスタイルです。プレーンテキストには <codeph>FontPosture.NORMAL</codeph>、イタリックには <codeph>FontPosture.ITALIC</codeph> を使用します。このプロパティは、デバイスフォント（<codeph>fontLookup</codeph> プロパティが flash.text.engine.FontLookup.DEVICE に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.FontPosture.NORMAL、flash.text.engine.FontPosture.ITALIC および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NORMAL になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 テキストの太さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの太さです。プレーンテキスト用の <codeph>FontWeight.NORMAL</codeph>、または <codeph>FontWeight.BOLD</codeph> を使用します。デバイスフォント（<codeph>fontLookup</codeph> プロパティが flash.text.engine.FontLookup.DEVICE に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.FontWeight.NORMAL、flash.text.engine.FontWeight.BOLD および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NORMAL になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 段落のテキストの均等配置に使用するルールです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落のテキストの均等配置に使用するルールです。デフォルト値は <codeph>FormatValue.AUTO</codeph> で、段落の <codeph>locale</codeph> プロパティに基づいてテキストの均等配置が行われます。日本語と中国語以外のすべての言語では、<codeph>FormatValue.AUTO</codeph> は <codeph>JustificationRule.SPACE</codeph> になり、空白文字に追加のスペースが追加されます。日本語と中国語の場合、<codeph>FormatValue.AUTO</codeph> は <codeph>JustficationRule.EAST_ASIAN</codeph> になります。均等配置によって、句読点のスペース設定の一部が変更されます。ローマンテキストの場合、カンマと日本語の句点には 1 文字分の幅を使用しますが、日中韓のテキストでは半文字分しか使用しません。また、従来の日中韓の活字規則に従って、連続する句読点間のスペースは狭くなります。次の例の、段落の 2 行目に適用された行送りにも注目してください。日中韓では、最後の 2 行が左に寄せられます。ローマンでは、2 行目以降が左に寄せられます。<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.JustificationRule.EAST_ASIAN、flashx.textLayout.formats.JustificationRule.SPACE、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 段落の均等配置に使用するスタイルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の均等配置に使用するスタイルです。<codeph>JustificationRule.EAST_ASIAN</codeph> の <codeph>justificationRule</codeph> 設定との連携でのみ使用します。デフォルト値の <codeph>FormatValue.AUTO</codeph> は、すべてのロケールで <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> に解決されます。JustificationStyle クラスで定義される定数値は、禁則文字の取扱いオプションを指定します。禁則文字とは日本語の文字で、行の最初や最後にすることのできない文字です。テキストの文字間隔を狭くしたくない場合は、<codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> を指定します。<codeph>JustificationRule.SPACE</codeph> の <codeph>justificationRule</codeph> のような効果を得たい場合は、<codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph> を使用します。
		 <p>有効な値は、flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT、flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU、flash.text.engine.JustificationStyle.PUSH_OUT_ONLY、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:kerning:get"><apiName>kerning</apiName><shortdesc>
		 カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。カーニングは、カーニングテーブルを持つすべてのフォントに対してサポートされています。
		 <p>有効な値は、flash.text.engine.Kerning.ON、flash.text.engine.Kerning.OFF、flash.text.engine.Kerning.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 行送りの基準と行送り方向の組み合わせである、行送りモデルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行送りの基準と行送り方向の組み合わせである、行送りモデルを指定します。行送り基準は、<codeph>lineHeight</codeph> プロパティが参照するベースラインです。行送り方向は、<codeph>lineHeight</codeph> プロパティが参照する特定の行までの距離が、その行の前の行のベースラインを基点とするのか、それともその行の後の行のベースラインを基点とするのかを決定します。デフォルト値の <codeph>FormatValue.AUTO</codeph> は、段落の <codeph>locale</codeph> プロパティに基づいて解決されます。これは、日本語と中国語で <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>、他のすべての言語で <codeph>LeadingModel.ROMAN_UP_UP</codeph> となります。<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.LeadingModel.ROMAN_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN、flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD、flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP、flashx.textLayout.formats.LeadingModel.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 フォントで定義された合字のうち、どの合字がテキストで使用されるかを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 フォントで定義された合字のうち、どの合字がテキストで使用されるかを制御します。これらの各設定に出現する合字は、フォントによって異なります。2 つ以上の letter-form が 1 つの文字に結合された場合には、合字が起こります。合字は通常、「fi」、「fl」、「ae」などの文字の組の用に共通のコンポーネントを共有する連続した文字を置き換えます。合字は、ラテン語およびラテン語以外の文字セットの両方で使用されます。LigatureLevel クラス（<codeph>MINIMUM</codeph>、<codeph>COMMON</codeph>、<codeph>UNCOMMON</codeph>、<codeph>EXOTIC</codeph>）の値で有効化された合字は、追加的なものです。各値によって新しい合字が有効になりますが、以前からの型も含まれます。<p><b>メモ：</b>アラビア語またはシリア語フォントを使用する場合は、<codeph>ligatureLevel</codeph> を MINIMUM 以上に設定する必要があります。</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>有効な値は、flash.text.engine.LigatureLevel.MINIMUM、flash.text.engine.LigatureLevel.COMMON、flash.text.engine.LigatureLevel.UNCOMMON、flash.text.engine.LigatureLevel.EXOTIC および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は COMMON になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 コンテナ内のテキスト折り返しを制御します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 コンテナ内のテキスト折り返しを制御します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナ内のテキストを、コンテナの幅に収まるよう設定（<codeph>LineBreak.TO_FIT</codeph>）するか、明示的な復帰またはラインフィード文字の箇所でのみ改行するよう設定（<codeph>LineBreak.EXPLICIT</codeph>）できます。
		 <p>有効な値は、flashx.textLayout.formats.LineBreak.EXPLICIT、flashx.textLayout.formats.LineBreak.TO_FIT および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TO_FIT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 テキストの行送りを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの行送りを制御します。<codeph>LeadingModel</codeph> に基づいた、前または次の行のベースラインから現在の行のベースラインまでの距離は、行内の任意の文字に適用される最大行送り値と等しくなります。これは、数値またはパーセントのいずれかで指定します。パーセントで指定する場合、140％などのように文字列値を入力します。<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>有効な数値は、-720 ～ 720 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 120％になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 true の場合、打ち消し線が適用されます。打ち消し線はテキストの中央に描画される線です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 <codeph>true</codeph> の場合、打ち消し線が適用されます。打ち消し線はテキストの中央に描画される線です。
		 <p>有効な値は、true、false および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は false になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:locale:get"><apiName>locale</apiName><shortdesc>
		 テキストのロケールです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのロケールです。大文字小文字変換およびシェイピングを制御します。Unicode Technical Standard #35 に記述されている標準ロケール識別子が使用されます。例えば、「en」、「en_US」および「en-US」はすべて英語で、「ja」は日本語です。 
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は en になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 下部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 下部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの下端とテキストの間のスペースです。 値は数値で指定します。 <p> 複数列を含むスクロール可能なコンテナ内の横書きの場合、1 列目とそれに続く列にはコンテナの最下部に空白スペースとしてパディングが表示されますが、最後の列にテキストがすべて収まらない場合、パディングを表示するにはスクロールする必要があります。</p>
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 左側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 左側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの左端とテキストの間のスペースです。 値は数値で指定します。<p> 複数列を含むスクロール可能なコンテナ内の縦書きの場合、1 列目とそれに続く列にはコンテナの末尾に空白スペースとしてパディングが表示されますが、最後の列にテキストがすべて収まらない場合、パディングを表示するにはスクロールする必要があります。</p>
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 右側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 右側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの右端とテキストの間のスペースです。 値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 上部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 上部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの上端とテキストの間のスペースです。 値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 段落の終端をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の終端をどれだけインデントするかを指定する数値（ピクセル単位）です。左から右のテキストでは右端、右から左のテキストでは左端です。 
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 段落の後に空けるスペースを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の後に空けるスペースを指定する数値（ピクセル単位）です。<codeph>paragraphSpaceBefore</codeph> と連動して折りたたみを行います。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 段落の前に空けるスペースを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の前に空けるスペースを指定する数値（ピクセル単位）です。<codeph>paragraphSpaceAfter</codeph> と連動して折りたたみを行います。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 段落の始端をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の始端をどれだけインデントするかを指定する数値（ピクセル単位）です。左から右のテキストでは左端、右から左のテキストでは右端です。 
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 このテキストに使用されるレンダリングモードです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用されるレンダリングモードです。埋め込みフォント（<codeph>fontLookup</codeph> プロパティが <codeph>FontLookup.EMBEDDED_CFF</codeph> に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.RenderingMode.NORMAL、flash.text.engine.RenderingMode.CFF および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は CFF になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 段落に関連付けるタブストップを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落に関連付けるタブストップを指定します。Setter は、flashx.textLayout.formats.TabStopFormat の配列、圧縮されたストリング表現、未定義、または <codeph>FormatValue.INHERIT</codeph> を受け入れることができます。圧縮されたストリング表現は、常に flashx.textLayout.formats.TabStopFormat の配列に変換されます。 <p>文字列ベースのフォーマットはタブストップのリストです。リスト内で各タブストップは 1 つ以上のスペースにより区切られます。</p><p>タブストップの形式は、&lt;整列タイプ>&lt;整列位置>|&lt;整列トークン> です。</p><p>整列タイプは単一文字で、S、E、C または D（またはそれぞれの小文字）を指定できます。S または s で先頭、E または e で最後尾、C または c で中心、D または d で 10 進法に対応します。整列タイプはオプションで、指定しない場合は S にデフォルト設定されます。</p><p>整列位置は数値で、数値用の FXG スペック（10 進数表記または科学的表記）に従って指定します。整列位置は必須です。</p><p>垂直バーは、整列位置と整列トークンを区切るために使用され、整列トークンが存在する場合にのみ表示されます。</p><p> 整列トークンは、整列タイプが D の場合はオプションで、整列タイプが D 以外の場合は指定できません。整列トークンは、タブストップを終了させるスペースで終了する任意の一連の文字で指定できます（最後のタブストップでは、終了のためのスペースはオプションとなります。つまり整列トークンの終了が示唆されます）。スペースがバックスラッシュ（¥）によりエスケープされている場合、スペースは整列トークンの一部である可能性があります。バックスラッシュが他のバックスラッシュ（¥¥）によりエスケープされる場合、バックスラッシュは整列トークンの一部である可能性があります。整列タイプが D で、整列トークンが指定されない場合、null のデフォルト値が適用されます。</p><p>タブストップが指定されない場合、タブ操作は、行の最後にデフォルト設定されます。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は null になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 均等配置テキストの、コンテナを基準とした段落内の最後（単一）の行の行揃えです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 均等配置テキストの、コンテナを基準とした段落内の最後（単一）の行の行揃えです。<codeph>textAlign</codeph> が <codeph>TextAlign.JUSTIFY</codeph> に設定されている場合、<codeph>textAlignLast</codeph> は、最後の行（または単一行ブロックの場合は単一行）をどのように揃えるかを指定します。値は、<codeph>textAlign</codeph> と同じです。
		 <p>有効な値は、flashx.textLayout.formats.TextAlign.LEFT、flashx.textLayout.formats.TextAlign.RIGHT、flashx.textLayout.formats.TextAlign.CENTER、flashx.textLayout.formats.TextAlign.JUSTIFY、flashx.textLayout.formats.TextAlign.START、flashx.textLayout.formats.TextAlign.END および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は START になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 コンテナを基準とした段落内の行揃えです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 コンテナを基準とした段落内の行揃えです。<codeph>TextAlign.LEFT</codeph> に設定すると、コンテナの左端に沿って行揃えされます。<codeph>TextAlign.RIGHT</codeph> に設定すると、右端に行揃えされます。<codeph>TextAlign.CENTER</codeph> に設定すると、右端と左端から等距離になるよう行が配置されます。<codeph>TextAlign.JUSTIFY</codeph> に設定すると、行はスペースを埋めるよう拡がります。<codeph>TextAlign.START</codeph> は、左から右のテキストでの LEFT の指定、または右から左のテキストでの RIGHT の指定と同様です。<codeph>TextAlign.END</codeph> は、左から右のテキストでの RIGHT の指定、または右から左のテキストでの LEFT の指定と同様です。
		 <p>有効な値は、flashx.textLayout.formats.TextAlign.LEFT、flashx.textLayout.formats.TextAlign.RIGHT、flashx.textLayout.formats.TextAlign.CENTER、flashx.textLayout.formats.TextAlign.JUSTIFY、flashx.textLayout.formats.TextAlign.START、flashx.textLayout.formats.TextAlign.END および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は START になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 テキストのアルファ（透明）値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのアルファ（透明）値です。値 0 は完全に透明、値 1 は完全に不透明です。<codeph>textAlpha</codeph> が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
		 <p>有効な値は、0 ～ 1 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 1 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 テキストの装飾です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの装飾です。アンダーラインを適用する場合に使用します。デフォルトは、なしです。
		 <p>有効な値は、flashx.textLayout.formats.TextDecoration.NONE、flashx.textLayout.formats.TextDecoration.UNDERLINE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NONE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 段落の一行目をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の一行目をどれだけインデントするかを指定する数値（ピクセル単位）です。一行目インデントをマイナスに指定すると、行はインデント内に寄せられ、コンテナより外に押し出される場合もあります。
		 <p>有効な値は、-1000 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 テキストの均等配置オプションを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの均等配置オプションを指定します。デフォルト値は <codeph>TextJustify.INTER_WORD</codeph> で、空白文字に追加のスペースが追加されます。<codeph>TextJustify.DISTRIBUTE</codeph> は、空白文字や個々の文字間に追加のスペースを追加します。<codeph>JustificationRule.SPACE</codeph> の <codeph>justificationRule</codeph> 値との連携でのみ使用します。
		 <p>有効な値は、flashx.textLayout.formats.TextJustify.INTER_WORD、flashx.textLayout.formats.TextJustify.DISTRIBUTE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は INTER_WORD になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 テキストの回転角度を決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの回転角度を決定します。
		 <p>有効な値は、flash.text.engine.TextRotation.ROTATE_0、flash.text.engine.TextRotation.ROTATE_180、flash.text.engine.TextRotation.ROTATE_270、flash.text.engine.TextRotation.ROTATE_90、flash.text.engine.TextRotation.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 各文字の左側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または fontSize のパーセント（120％など））です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 各文字の左側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または <codeph>fontSize</codeph> のパーセント（120％など））です。kerning が有効にされている場合、フォントのカーニングテーブルの値に <codeph>trackingLeft</codeph> 値が追加されます。kerning が無効にされている場合、<codeph>trackingLeft</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。 
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 各文字の右側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または fontSize のパーセント（120％など））です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 各文字の右側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または <codeph>fontSize</codeph> のパーセント（120％など））です。kerning が有効にされている場合、フォントのカーニングテーブルの値に <codeph>trackingRight</codeph> 値が追加されます。kerning が無効にされている場合、<codeph>trackingRight</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。 
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 このテキストに使用される文字の大文字小文字区別のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される文字の大文字小文字区別のタイプです。次に例を示します。<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.TLFTypographicCase.DEFAULT、flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS、flashx.textLayout.formats.TLFTypographicCase.UPPERCASE、flashx.textLayout.formats.TLFTypographicCase.LOWERCASE、flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 垂直方向の行揃えまたは均等配置です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 垂直方向の行揃えまたは均等配置です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナ内で TextFlow エレメントを整列させる方法を決定します。
		 <p>有効な値は、flashx.textLayout.formats.VerticalAlign.TOP、flashx.textLayout.formats.VerticalAlign.MIDDLE、flashx.textLayout.formats.VerticalAlign.BOTTOM、flashx.textLayout.formats.VerticalAlign.JUSTIFY および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TOP になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:TextLayoutFormat:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 テキストを TextFlow にインポートする際、空白を圧縮または保持します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストを TextFlow にインポートする際、空白を圧縮または保持します。<codeph>WhiteSpaceCollapse.PRESERVE</codeph> では、すべての空白文字が保持されます。<codeph>WhiteSpaceCollapse.COLLAPSE</codeph> では、インポートしたテキストブロック内で、改行、タブ、行送りまたは行末の空白が削除されます。改行タグ () および Unicode の行区切り文字は保持されます。
		 <p>有効な値は、flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE、flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は COLLAPSE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BackgroundColor"><apiName>BackgroundColor</apiName><shortdesc>
	  TextLayoutFormat クラスの backgroundColor プロパティの値が「透明」であることを指定する定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayoutFormat</codeph> クラスの <codeph>backgroundColor</codeph> プロパティの値が「透明」であることを指定する定数を定義します。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/backgroundColor"><linktext>TextLayoutFormat.backgroundColor</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BackgroundColor:TRANSPARENT"><apiName>TRANSPARENT</apiName><shortdesc> 透明 - 背景色は適用されません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transparent</apiData><apiType value="String"/></apiValueDef><apiDesc> 透明 - 背景色は適用されません。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:LineBreak"><apiName>LineBreak</apiName><shortdesc> TextLayoutFormat の lineBreak プロパティを設定する値を定義し、折り返しテキスト内で改行する方法を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> <codeph>TextLayoutFormat</codeph> の <codeph>lineBreak</codeph> プロパティを設定する値を定義し、折り返しテキスト内で改行する方法を指定します。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/linebreak"><linktext>TextLayoutFormat.linebreak</linktext></link></related-links><apiValue id="flashx.textLayout.formats:LineBreak:EXPLICIT"><apiName>EXPLICIT</apiName><shortdesc> 明示的な改行文字またはラインフィード文字でのみ改行するよう指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>explicit</apiData><apiType value="String"/></apiValueDef><apiDesc> 明示的な改行文字またはラインフィード文字でのみ改行するよう指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LineBreak:TO_FIT"><apiName>TO_FIT</apiName><shortdesc> コンテナ幅に合わせて行を折り返すように指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toFit</apiData><apiType value="String"/></apiValueDef><apiDesc> コンテナ幅に合わせて行を折り返すように指定します。 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BlockProgression"><apiName>BlockProgression</apiName><shortdesc>
	  TextLayouFormat クラスの blockProgression プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayouFormat</codeph> クラスの <codeph>blockProgression</codeph> プロパティの値を定義します。BlockProgression は、コンテナ内に行を配置する方向を指定します。
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/blockProgression"><linktext>TextLayoutFormat.blockProgression</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BlockProgression:RL"><apiName>RL</apiName><shortdesc> 
		  右から左へのブロック進行方向を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rl</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		  右から左へのブロック進行方向を指定します。行は、コンテナの右端から左へ縦方向にレイアウトされます。縦書きの中国語または日本語テキストなど、縦書きテキストに使用します。 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BlockProgression:TB"><apiName>TB</apiName><shortdesc> 
		  上から下へのブロック進行方向を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tb</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		  上から下へのブロック進行方向を指定します。行は、コンテナの上部から下部へ横方向にレイアウトされます。横書きテキストに使用します。 
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:ITextLayoutFormat"><apiName>ITextLayoutFormat</apiName><shortdesc>
	 このインターフェイスは、FlowElements 関連プロパティに対する読み取りアクセス権を付与します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 このインターフェイスは、FlowElements 関連プロパティに対する読み取りアクセス権を付与します。
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:alignmentBaseline:get"><apiName>alignmentBaseline</apiName><shortdesc>
		 行の基準を揃えるベースラインを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行の基準を揃えるベースラインを指定します。例えば、<codeph>dominantBaseline</codeph> を ASCENT に設定し、<codeph>alignmentBaseline</codeph> を DESCENT に設定すると、テキスト上部が DESCENT ベースライン上またはラインの下に揃えられます。一般に、ベースラインは行内の最大エレメントにより決定されます。<p><adobeimage alt="baselines" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>有効な値は、flash.text.engine.TextBaseline.ROMAN、flash.text.engine.TextBaseline.ASCENT、flash.text.engine.TextBaseline.DESCENT、flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP、flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER、flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM、flash.text.engine.TextBaseline.USE_DOMINANT_BASELINE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は USE_DOMINANT_BASELINE になります。</p>
		 </apiDesc><example conref="examples\TextLayoutFormat_alignmentBaselineExample.as"/></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:backgroundAlpha:get"><apiName>backgroundAlpha</apiName><shortdesc>
		 背景のアルファ（透明）値です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 背景のアルファ（透明）値です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。値 0 は完全に透明、値 1 は完全に不透明です。alpha が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
		 <p>有効な値は、0 ～ 1 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 1 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 テキストの背景色です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの背景色です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。<codeph>BackgroundColor.TRANSPARENT</codeph> の定数値、または 3 つの 8 ビットの RGB（赤、緑、青）値を指定する 16 進値のいずれかを指定できます。例えば、0xFF0000 は赤、0x00FF00 は緑です。
		 <p>有効な値は、flashx.textLayout.formats.BackgroundColor.TRANSPARENT、flashx.textLayout.formats.FormatValue.INHERIT の文字列、および 0x0 から 0xffffffff の uint です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TRANSPARENT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BackgroundColor"><linktext>flashx.textLayout.formats.BackgroundColor</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:baselineShift:get"><apiName>baselineShift</apiName><shortdesc>
		 ベースラインを dominantBaseline 値から移動させる量です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 ベースラインを <codeph>dominantBaseline</codeph> 値から移動させる量です。単位は、ピクセルまたは <codeph>fontSize</codeph> のパーセント値（この場合は 140％のように文字列値を入力）です。正の値を指定すると、行は横書きの場合は上に（縦書きの場合は右に）移動し、負の値を指定すると、行は横書きの場合は下に（縦書きの場合は左に）移動します。 
		 <p>有効な値は、flashx.textLayout.formats.BaselineShift.SUPERSCRIPT、flashx.textLayout.formats.BaselineShift.SUBSCRIPT および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0.0 になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineShift"><linktext>flashx.textLayout.formats.BaselineShift</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:blockProgression:get"><apiName>blockProgression</apiName><shortdesc>
		 垂直方向または並行方向の行配置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 垂直方向または並行方向の行配置を指定します。行は、上から下（横書用の <codeph>BlockProgression.TB</codeph>）または右から左（縦書用の <codeph>BlockProgression.RL</codeph>）に配置されます。
		 <p>有効な値は、flashx.textLayout.formats.BlockProgression.RL、flashx.textLayout.formats.BlockProgression.TB および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は TB になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BlockProgression"><linktext>flashx.textLayout.formats.BlockProgression</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:breakOpportunity:get"><apiName>breakOpportunity</apiName><shortdesc>
		 折り返しのあるテキストを複数行に分割する際の、改行可能位置を制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 折り返しのあるテキストを複数行に分割する際の、改行可能位置を制御します。テキストを標準的に改行する場合は、<codeph>BreakOpportunity.AUTO</codeph> に設定します。テキストがサイズを超過し、改行する場所が他にない場合<i>以外</i>は改行しない場合は、<codeph>BreakOpportunity.NONE</codeph> に設定します。単語間のみでなく、どの位置でも改行を許可する場合は、<codeph>BreakOpportunity.ANY</codeph> に設定します。タイポグラフィッククラスタごとに改行する場合は、<codeph>BreakOpportunity.ALL</codeph> に設定します（パス上のテキストに有効）。
		 <p>有効な値は、flash.text.engine.BreakOpportunity.ALL、flash.text.engine.BreakOpportunity.ANY、flash.text.engine.BreakOpportunity.AUTO、flash.text.engine.BreakOpportunity.NONE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.BreakOpportunity.xml"><linktext>flash.text.engine.BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:cffHinting:get"><apiName>cffHinting</apiName><shortdesc>
		 このテキストに使用される CFF ヒンティングのタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される CFF ヒンティングのタイプです。CFF ヒンティングによって、Flash ランタイムで太い水平線がサブピクセルグリッドに合わされるか合わされないかが決定されます。このプロパティは、<codeph>renderingMode</codeph> プロパティが <codeph>RenderingMode.CFF</codeph> に設定されていて、フォントが埋め込まれている（<codeph>fontLookup</codeph> プロパティが <codeph>FontLookup.EMBEDDED_CFF</codeph> に設定されている）場合にのみ適用されます。スクリーンサイズが小さい場合は、ヒンティングによって、鮮明で読みやすいテキストの表示が可能になります。
		 <p>有効な値は、flash.text.engine.CFFHinting.NONE、flash.text.engine.CFFHinting.HORIZONTAL_STEM および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は HORIZONTAL_STEM になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.CFFHinting.xml"><linktext>flash.text.engine.CFFHinting</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:color:get"><apiName>color</apiName><shortdesc>
		 テキストの色です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの色です。3 つの 8 ビットの RGB（赤、緑、青）値を指定する 16 進値を指定できます。例えば、0xFF0000 は赤、0x00FF00 は緑です。 
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:columnCount:get"><apiName>columnCount</apiName><shortdesc>
		 テキスト列の数です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキスト列の数です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。列数は、列の他の設定をオーバーライドします。値は整数か、指定されない場合は <codeph>FormatValue.AUTO</codeph> になります。<codeph>columnCount</codeph> が指定されない場合は、<codeph>columnWidth</codeph> により、コンテナに収まる最大数の列が作成されます。
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 1 ～ 50 の int です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:columnGap:get"><apiName>columnGap</apiName><shortdesc>
		 列間のふち取り領域をピクセル単位で指定します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 列間のふち取り領域をピクセル単位で指定します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 20 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
		 列幅（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 列幅（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。列の幅を指定して列の数を指定しない場合、TextLayout により、コンテナ幅と <codeph>columnGap</codeph> の設定に基づき、その幅の列が可能な限り最大数作成されます。余りのスペースがある場合は、最後の列の後に置かれます。値は数値で指定します。
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 0 ～ 8000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#FormatValue"><linktext>flashx.textLayout.formats.FormatValue</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:digitCase:get"><apiName>digitCase</apiName><shortdesc>
		 このテキストに使用される数字の大文字小文字区別のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される数字の大文字小文字区別のタイプです。値を <codeph>DigitCase.OLD_STYLE</codeph> に設定すると、様々なアセンダとディセンダを持つ小文字の書体に近づきます。その文字幅は形状によって設定されます。このスタイルは、選択した書体（最も一般的には Supplemental フォントまたは Expert フォント）でのみ有効です。<codeph>DigitCase.LINING</codeph> に設定すると、大文字全体の高さとなり、一般にグラフで整列させる場合に文字幅が等幅になります。<p><adobeimage alt="digitCase" href="../../../images/textLayout_digitcase.gif"/></p>
		 <p>有効な値は、flash.text.engine.DigitCase.DEFAULT、flash.text.engine.DigitCase.LINING、flash.text.engine.DigitCase.OLD_STYLE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitCase.xml"><linktext>flash.text.engine.DigitCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:digitWidth:get"><apiName>digitWidth</apiName><shortdesc>
		 このテキストに使用される数字の幅のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される数字の幅のタイプです。値は、個々の数字を表示する場合に最適な <codeph>DigitWidth.PROPORTIONAL</codeph> と、表、グラフおよび縦の列に数字を表示する場合に最適な <codeph>DigitWidth.TABULAR</codeph> があります。<p><adobeimage alt="digitWidth" href="../../../images/textLayout_digitwidth.gif"/></p>
		 <p>有効な値は、flash.text.engine.DigitWidth.DEFAULT、flash.text.engine.DigitWidth.PROPORTIONAL、flash.text.engine.DigitWidth.TABULAR および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.DigitWidth.xml"><linktext>flash.text.engine.DigitWidth</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:direction:get"><apiName>direction</apiName><shortdesc>
		 テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。ラテン文字などでは左から右の読み順、アラビア文字やヘブライ文字などでは右から左の読み順となります。このプロパティは、コンテナレベルで適用された場合、列の方向にも影響します。列もテキストと同様、左から右、または右から左のいずれかに設定できます。以下に例を示します。<p><adobeimage alt="direction" href="../../../images/textLayout_direction.gif"/></p>
		 <p>有効な値は、flashx.textLayout.formats.Direction.LTR、flashx.textLayout.formats.Direction.RTL および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は LTR になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#Direction"><linktext>flashx.textLayout.formats.Direction</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:dominantBaseline:get"><apiName>dominantBaseline</apiName><shortdesc>
		 行のエレメントの垂直座標を決定するために alignmentBaseline に吸着させるエレメントのベースラインを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行のエレメントの垂直座標を決定するために <codeph>alignmentBaseline</codeph> に吸着させるエレメントのベースラインを指定します。<codeph>TextBaseline.AUTO</codeph> を指定した場合、親段落の <codeph>locale</codeph> プロパティに基づいて、行の基準が選択されます。日本語と中国語の場合、選択されるベースラインの値は <codeph>TextBaseline.IDEOGRAPHIC_CENTER</codeph> で、他のすべての言語では <codeph>TextBaseline.ROMAN</codeph> となります。ベースラインに関するこれらの選択は、フォントおよびフォントサイズの選択によって決定されます。<p><adobeimage alt="baselines" href="../../../images/textLayout_baselines.jpg"/></p>
		 <p>有効な値は、flashx.textLayout.formats.FormatValue.AUTO、flash.text.engine.TextBaseline.ROMAN、flash.text.engine.TextBaseline.ASCENT、flash.text.engine.TextBaseline.DESCENT、flash.text.engine.TextBaseline.IDEOGRAPHIC_TOP、flash.text.engine.TextBaseline.IDEOGRAPHIC_CENTER、flash.text.engine.TextBaseline.IDEOGRAPHIC_BOTTOM および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextBaseline.xml"><linktext>flash.text.engine.TextBaseline</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:firstBaselineOffset:get"><apiName>firstBaselineOffset</apiName><shortdesc>
		 コンテナ内の最初の行のベースライン位置を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 コンテナ内の最初の行のベースライン位置を指定します。このプロパティがどのベースラインを参照するかは、コンテナレベルのロケールにより異なります。これは、日本語と中国語で <codeph>TextBaseline.IDEOGRAPHIC_BOTTOM</codeph>、他のすべての言語で <codeph>TextBaseline.ROMAN</codeph> となります。コンテナの上部のインセット（<codeph>blockProgression</codeph> が RL の場合は右側のインセット）から 1 行目のベースラインへのオフセットの値には、<codeph>BaselineOffset.ASCENT</codeph>（行のアセント）、<codeph>BaselineOffset.LINE_HEIGHT</codeph>（1 行目の高さ）、または絶対距離を指定する任意の固定数値を指定できます。<codeph>BaselineOffset.AUTO</codeph> に指定すると、行のアセントとコンテナの上部のインセットが揃えられます。<p><adobeimage alt="firstBaselineOffset1" href="../../../images/textLayout_FBO1.png"/><adobeimage alt="firstBaselineOffset2" href="../../../images/textLayout_FBO2.png"/><adobeimage alt="firstBaselineOffset3" href="../../../images/textLayout_FBO3.png"/><adobeimage alt="firstBaselineOffset4" href="../../../images/textLayout_FBO4.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.BaselineOffset.AUTO、flashx.textLayout.formats.BaselineOffset.ASCENT、flashx.textLayout.formats.BaselineOffset.LINE_HEIGHT、flashx.textLayout.formats.FormatValue.INHERIT の文字列および 0 ～ 1000 の数値です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#BaselineOffset"><linktext>flashx.textLayout.formats.BaselineOffset</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		  使用するフォント名またはフォント名のカンマ区切りリストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		  使用するフォント名またはフォント名のカンマ区切りリストです。リスト内の使用できる先頭のフォントを使用してエレメントをレンダリングします。例えば、「Arial」、「Helvetica」、「_sans」の場合は、「Arial」が検索され、Arial が見つからないときは「Helvetica」が、それらがいずれも見つからないときは「_sans」が検索されます。
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は Arial になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontLookup:get"><apiName>fontLookup</apiName><shortdesc>
		 使用するフォント参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 使用するフォント参照です。<codeph>FontLookup.DEVICE</codeph> に指定すると、SWF ファイルが実行されるシステムにインストールされているフォントが使用されます。デバイスフォントを使用するとムービーサイズが小さくなりますが、異なるシステムおよびプラットフォームで、テキストが必ずしも同じようにレンダリングされる訳ではありません。<codeph>FontLookup.EMBEDDED_CFF</codeph> に指定すると、パブリッシュされた SWF ファイルに埋め込まれたフォントのアウトラインが使用されます。埋め込みフォントを使用すると、SWF ファイルのサイズが（ときには大幅に）大きくなりますが、テキストは常に選択されたフォントで表示されます。
		 <p>有効な値は、flash.text.engine.FontLookup.DEVICE、flash.text.engine.FontLookup.EMBEDDED_CFF および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEVICE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontLookup.xml"><linktext>flash.text.engine.FontLookup</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 テキストのサイズ（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのサイズ（ピクセル単位）です。
		 <p>有効な値は、1 ～ 720 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 12 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 テキストのスタイルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのスタイルです。プレーンテキストには <codeph>FontPosture.NORMAL</codeph>、イタリックには <codeph>FontPosture.ITALIC</codeph> を使用します。このプロパティは、デバイスフォント（<codeph>fontLookup</codeph> プロパティが flash.text.engine.FontLookup.DEVICE に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.FontPosture.NORMAL、flash.text.engine.FontPosture.ITALIC および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NORMAL になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontPosture.xml"><linktext>flash.text.engine.FontPosture</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 テキストの太さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの太さです。プレーンテキスト用の <codeph>FontWeight.NORMAL</codeph>、または <codeph>FontWeight.BOLD</codeph> を使用します。デバイスフォント（<codeph>fontLookup</codeph> プロパティが flash.text.engine.FontLookup.DEVICE に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.FontWeight.NORMAL、flash.text.engine.FontWeight.BOLD および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NORMAL になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.FontWeight.xml"><linktext>flash.text.engine.FontWeight</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:justificationRule:get"><apiName>justificationRule</apiName><shortdesc>
		 段落のテキストの均等配置に使用するルールです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落のテキストの均等配置に使用するルールです。デフォルト値は <codeph>FormatValue.AUTO</codeph> で、段落の <codeph>locale</codeph> プロパティに基づいてテキストの均等配置が行われます。日本語と中国語以外のすべての言語では、<codeph>FormatValue.AUTO</codeph> は <codeph>JustificationRule.SPACE</codeph> になり、空白文字に追加のスペースが追加されます。日本語と中国語の場合、<codeph>FormatValue.AUTO</codeph> は <codeph>JustficationRule.EAST_ASIAN</codeph> になります。均等配置によって、句読点のスペース設定の一部が変更されます。ローマンテキストの場合、カンマと日本語の句点には 1 文字分の幅を使用しますが、日中韓のテキストでは半文字分しか使用しません。また、従来の日中韓の活字規則に従って、連続する句読点間のスペースは狭くなります。次の例の、段落の 2 行目に適用された行送りにも注目してください。日中韓では、最後の 2 行が左に寄せられます。ローマンでは、2 行目以降が左に寄せられます。<p><adobeimage alt="justificationRule" href="../../../images/textLayout_justificationrule.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.JustificationRule.EAST_ASIAN、flashx.textLayout.formats.JustificationRule.SPACE、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#JustificationRule"><linktext>flashx.textLayout.formats.JustificationRule</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:justificationStyle:get"><apiName>justificationStyle</apiName><shortdesc>
		 段落の均等配置に使用するスタイルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の均等配置に使用するスタイルです。<codeph>JustificationRule.EAST_ASIAN</codeph> の <codeph>justificationRule</codeph> 設定との連携でのみ使用します。デフォルト値の <codeph>FormatValue.AUTO</codeph> は、すべてのロケールで <codeph>JustificationStyle.PUSH_IN_KINSOKU</codeph> に解決されます。JustificationStyle クラスで定義される定数値は、禁則文字の取扱いオプションを指定します。禁則文字とは日本語の文字で、行の最初や最後にすることのできない文字です。テキストの文字間隔を狭くしたくない場合は、<codeph>JustificationStyle.PUSH-OUT-ONLY</codeph> を指定します。<codeph>JustificationRule.SPACE</codeph> の <codeph>justificationRule</codeph> のような効果を得たい場合は、<codeph>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</codeph> を使用します。
		 <p>有効な値は、flash.text.engine.JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT、flash.text.engine.JustificationStyle.PUSH_IN_KINSOKU、flash.text.engine.JustificationStyle.PUSH_OUT_ONLY、flashx.textLayout.formats.FormatValue.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は flashx.textLayout.formats.FormatValue.AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.JustificationStyle.xml"><linktext>flash.text.engine.JustificationStyle</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:kerning:get"><apiName>kerning</apiName><shortdesc>
		 カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。カーニングは、カーニングテーブルを持つすべてのフォントに対してサポートされています。
		 <p>有効な値は、flash.text.engine.Kerning.ON、flash.text.engine.Kerning.OFF、flash.text.engine.Kerning.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.Kerning.xml"><linktext>flash.text.engine.Kerning</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:leadingModel:get"><apiName>leadingModel</apiName><shortdesc>
		 行送りの基準と行送り方向の組み合わせである、行送りモデルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 行送りの基準と行送り方向の組み合わせである、行送りモデルを指定します。行送り基準は、<codeph>lineHeight</codeph> プロパティが参照するベースラインです。行送り方向は、<codeph>lineHeight</codeph> プロパティが参照する特定の行までの距離が、その行の前の行のベースラインを基点とするのか、それともその行の後の行のベースラインを基点とするのかを決定します。デフォルト値の <codeph>FormatValue.AUTO</codeph> は、段落の <codeph>locale</codeph> プロパティに基づいて解決されます。これは、日本語と中国語で <codeph>LeadingModel.IDEOGRAPHIC_TOP_DOWN</codeph>、他のすべての言語で <codeph>LeadingModel.ROMAN_UP_UP</codeph> となります。<p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LB1.png"/><adobeimage alt="" href="../../../images/textLayout_LB2.png"/><adobeimage alt="" href="../../../images/textLayout_LB3.png"/></p><p><b/></p><p><adobeimage alt="" href="../../../images/textLayout_LD1.png"/><adobeimage alt="" href="../../../images/textLayout_LD2.png"/><adobeimage alt="" href="../../../images/textLayout_LD3.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.LeadingModel.ROMAN_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_UP、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_TOP_DOWN、flashx.textLayout.formats.LeadingModel.IDEOGRAPHIC_CENTER_DOWN、flashx.textLayout.formats.LeadingModel.APPROXIMATE_TEXT_FIELD、flashx.textLayout.formats.LeadingModel.ASCENT_DESCENT_UP、flashx.textLayout.formats.LeadingModel.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LeadingModel"><linktext>flashx.textLayout.formats.LeadingModel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:ligatureLevel:get"><apiName>ligatureLevel</apiName><shortdesc>
		 フォントで定義された合字のうち、どの合字がテキストで使用されるかを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 フォントで定義された合字のうち、どの合字がテキストで使用されるかを制御します。これらの各設定に出現する合字は、フォントによって異なります。2 つ以上の letter-form が 1 つの文字に結合された場合には、合字が起こります。合字は通常、「fi」、「fl」、「ae」などの文字の組の用に共通のコンポーネントを共有する連続した文字を置き換えます。合字は、ラテン語およびラテン語以外の文字セットの両方で使用されます。LigatureLevel クラス（<codeph>MINIMUM</codeph>、<codeph>COMMON</codeph>、<codeph>UNCOMMON</codeph>、<codeph>EXOTIC</codeph>）の値で有効化された合字は、追加的なものです。各値によって新しい合字が有効になりますが、以前からの型も含まれます。<p><b>メモ：</b>アラビア語またはシリア語フォントを使用する場合は、<codeph>ligatureLevel</codeph> を MINIMUM 以上に設定する必要があります。</p><p><adobeimage alt="ligatureLevel" href="../../../images/textLayout_ligatures.png"/></p>
		 <p>有効な値は、flash.text.engine.LigatureLevel.MINIMUM、flash.text.engine.LigatureLevel.COMMON、flash.text.engine.LigatureLevel.UNCOMMON、flash.text.engine.LigatureLevel.EXOTIC および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は COMMON になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.LigatureLevel.xml"><linktext>flash.text.engine.LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:lineBreak:get"><apiName>lineBreak</apiName><shortdesc>
		 コンテナ内のテキスト折り返しを制御します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 コンテナ内のテキスト折り返しを制御します（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナ内のテキストを、コンテナの幅に収まるよう設定（<codeph>LineBreak.TO_FIT</codeph>）するか、明示的な復帰またはラインフィード文字の箇所でのみ改行するよう設定（<codeph>LineBreak.EXPLICIT</codeph>）できます。
		 <p>有効な値は、flashx.textLayout.formats.LineBreak.EXPLICIT、flashx.textLayout.formats.LineBreak.TO_FIT および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TO_FIT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#LineBreak"><linktext>flashx.textLayout.formats.LineBreak</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 テキストの行送りを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの行送りを制御します。<codeph>LeadingModel</codeph> に基づいた、前または次の行のベースラインから現在の行のベースラインまでの距離は、行内の任意の文字に適用される最大行送り値と等しくなります。これは、数値またはパーセントのいずれかで指定します。パーセントで指定する場合、140％などのように文字列値を入力します。<p><adobeimage alt="lineHeight1" href="../../../images/textLayout_lineHeight1.jpg"/><adobeimage alt="lineHeight2" href="../../../images/textLayout_lineHeight2.jpg"/></p>
		 <p>有効な数値は、-720 ～ 720 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 120％になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:lineThrough:get"><apiName>lineThrough</apiName><shortdesc>
		 true の場合、打ち消し線が適用されます。打ち消し線はテキストの中央に描画される線です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 <codeph>true</codeph> の場合、打ち消し線が適用されます。打ち消し線はテキストの中央に描画される線です。
		 <p>有効な値は、true、false および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は false になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:locale:get"><apiName>locale</apiName><shortdesc>
		 テキストのロケールです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのロケールです。大文字小文字変換およびシェイピングを制御します。Unicode Technical Standard #35 に記述されている標準ロケール識別子が使用されます。例えば、「en」、「en_US」および「en-US」はすべて英語で、「ja」は日本語です。 
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は en になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 下部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 下部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの下端とテキストの間のスペースです。 値は数値で指定します。 <p> 複数列を含むスクロール可能なコンテナ内の横書きの場合、1 列目とそれに続く列にはコンテナの最下部に空白スペースとしてパディングが表示されますが、最後の列にテキストがすべて収まらない場合、パディングを表示するにはスクロールする必要があります。</p>
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 左側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 左側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの左端とテキストの間のスペースです。 値は数値で指定します。<p> 複数列を含むスクロール可能なコンテナ内の縦書きの場合、1 列目とそれに続く列にはコンテナの末尾に空白スペースとしてパディングが表示されますが、最後の列にテキストがすべて収まらない場合、パディングを表示するにはスクロールする必要があります。</p>
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 右側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 右側のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの右端とテキストの間のスペースです。 値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 上部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 上部のインセット（ピクセル単位）です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナの上端とテキストの間のスペースです。 値は数値で指定します。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphEndIndent:get"><apiName>paragraphEndIndent</apiName><shortdesc>
		 段落の終端をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の終端をどれだけインデントするかを指定する数値（ピクセル単位）です。左から右のテキストでは右端、右から左のテキストでは左端です。 
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceAfter:get"><apiName>paragraphSpaceAfter</apiName><shortdesc>
		 段落の後に空けるスペースを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の後に空けるスペースを指定する数値（ピクセル単位）です。<codeph>paragraphSpaceBefore</codeph> と連動して折りたたみを行います。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceBefore:get"><apiName>paragraphSpaceBefore</apiName><shortdesc>
		 段落の前に空けるスペースを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の前に空けるスペースを指定する数値（ピクセル単位）です。<codeph>paragraphSpaceAfter</codeph> と連動して折りたたみを行います。
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:paragraphStartIndent:get"><apiName>paragraphStartIndent</apiName><shortdesc>
		 段落の始端をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の始端をどれだけインデントするかを指定する数値（ピクセル単位）です。左から右のテキストでは左端、右から左のテキストでは右端です。 
		 <p>有効な値は、0 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:renderingMode:get"><apiName>renderingMode</apiName><shortdesc>
		 このテキストに使用されるレンダリングモードです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用されるレンダリングモードです。埋め込みフォント（<codeph>fontLookup</codeph> プロパティが <codeph>FontLookup.EMBEDDED_CFF</codeph> に設定されている場合）にのみ適用されます。
		 <p>有効な値は、flash.text.engine.RenderingMode.NORMAL、flash.text.engine.RenderingMode.CFF および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は CFF になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.RenderingMode.xml"><linktext>flash.text.engine.RenderingMode</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:tabStops:get"><apiName>tabStops</apiName><shortdesc>
		 段落に関連付けるタブストップを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落に関連付けるタブストップを指定します。Setter は、flashx.textLayout.formats.TabStopFormat の配列、圧縮されたストリング表現、未定義、または <codeph>FormatValue.INHERIT</codeph> を受け入れることができます。圧縮されたストリング表現は、常に flashx.textLayout.formats.TabStopFormat の配列に変換されます。 <p>文字列ベースのフォーマットはタブストップのリストです。リスト内で各タブストップは 1 つ以上のスペースにより区切られます。</p><p>タブストップの形式は、&lt;整列タイプ>&lt;整列位置>|&lt;整列トークン> です。</p><p>整列タイプは単一文字で、S、E、C または D（またはそれぞれの小文字）を指定できます。S または s で先頭、E または e で最後尾、C または c で中心、D または d で 10 進法に対応します。整列タイプはオプションで、指定しない場合は S にデフォルト設定されます。</p><p>整列位置は数値で、数値用の FXG スペック（10 進数表記または科学的表記）に従って指定します。整列位置は必須です。</p><p>垂直バーは、整列位置と整列トークンを区切るために使用され、整列トークンが存在する場合にのみ表示されます。</p><p> 整列トークンは、整列タイプが D の場合はオプションで、整列タイプが D 以外の場合は指定できません。整列トークンは、タブストップを終了させるスペースで終了する任意の一連の文字で指定できます（最後のタブストップでは、終了のためのスペースはオプションとなります。つまり整列トークンの終了が示唆されます）。スペースがバックスラッシュ（¥）によりエスケープされている場合、スペースは整列トークンの一部である可能性があります。バックスラッシュが他のバックスラッシュ（¥¥）によりエスケープされる場合、バックスラッシュは整列トークンの一部である可能性があります。整列タイプが D で、整列トークンが指定されない場合、null のデフォルト値が適用されます。</p><p>タブストップが指定されない場合、タブ操作は、行の最後にデフォルト設定されます。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は null になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textAlignLast:get"><apiName>textAlignLast</apiName><shortdesc>
		 均等配置テキストの、コンテナを基準とした段落内の最後（単一）の行の行揃えです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 均等配置テキストの、コンテナを基準とした段落内の最後（単一）の行の行揃えです。<codeph>textAlign</codeph> が <codeph>TextAlign.JUSTIFY</codeph> に設定されている場合、<codeph>textAlignLast</codeph> は、最後の行（または単一行ブロックの場合は単一行）をどのように揃えるかを指定します。値は、<codeph>textAlign</codeph> と同じです。
		 <p>有効な値は、flashx.textLayout.formats.TextAlign.LEFT、flashx.textLayout.formats.TextAlign.RIGHT、flashx.textLayout.formats.TextAlign.CENTER、flashx.textLayout.formats.TextAlign.JUSTIFY、flashx.textLayout.formats.TextAlign.START、flashx.textLayout.formats.TextAlign.END および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は START になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 コンテナを基準とした段落内の行揃えです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 コンテナを基準とした段落内の行揃えです。<codeph>TextAlign.LEFT</codeph> に設定すると、コンテナの左端に沿って行揃えされます。<codeph>TextAlign.RIGHT</codeph> に設定すると、右端に行揃えされます。<codeph>TextAlign.CENTER</codeph> に設定すると、右端と左端から等距離になるよう行が配置されます。<codeph>TextAlign.JUSTIFY</codeph> に設定すると、行はスペースを埋めるよう拡がります。<codeph>TextAlign.START</codeph> は、左から右のテキストでの LEFT の指定、または右から左のテキストでの RIGHT の指定と同様です。<codeph>TextAlign.END</codeph> は、左から右のテキストでの RIGHT の指定、または右から左のテキストでの LEFT の指定と同様です。
		 <p>有効な値は、flashx.textLayout.formats.TextAlign.LEFT、flashx.textLayout.formats.TextAlign.RIGHT、flashx.textLayout.formats.TextAlign.CENTER、flashx.textLayout.formats.TextAlign.JUSTIFY、flashx.textLayout.formats.TextAlign.START、flashx.textLayout.formats.TextAlign.END および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は START になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextAlign"><linktext>flashx.textLayout.formats.TextAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textAlpha:get"><apiName>textAlpha</apiName><shortdesc>
		 テキストのアルファ（透明）値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストのアルファ（透明）値です。値 0 は完全に透明、値 1 は完全に不透明です。<codeph>textAlpha</codeph> が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
		 <p>有効な値は、0 ～ 1 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 1 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 テキストの装飾です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの装飾です。アンダーラインを適用する場合に使用します。デフォルトは、なしです。
		 <p>有効な値は、flashx.textLayout.formats.TextDecoration.NONE、flashx.textLayout.formats.TextDecoration.UNDERLINE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は NONE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextDecoration"><linktext>flashx.textLayout.formats.TextDecoration</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 段落の一行目をどれだけインデントするかを指定する数値（ピクセル単位）です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 段落の一行目をどれだけインデントするかを指定する数値（ピクセル単位）です。一行目インデントをマイナスに指定すると、行はインデント内に寄せられ、コンテナより外に押し出される場合もあります。
		 <p>有効な値は、-1000 ～ 1000 の数値および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textJustify:get"><apiName>textJustify</apiName><shortdesc>
		 テキストの均等配置オプションを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの均等配置オプションを指定します。デフォルト値は <codeph>TextJustify.INTER_WORD</codeph> で、空白文字に追加のスペースが追加されます。<codeph>TextJustify.DISTRIBUTE</codeph> は、空白文字や個々の文字間に追加のスペースを追加します。<codeph>JustificationRule.SPACE</codeph> の <codeph>justificationRule</codeph> 値との連携でのみ使用します。
		 <p>有効な値は、flashx.textLayout.formats.TextJustify.INTER_WORD、flashx.textLayout.formats.TextJustify.DISTRIBUTE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は INTER_WORD になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TextJustify"><linktext>flashx.textLayout.formats.TextJustify</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:textRotation:get"><apiName>textRotation</apiName><shortdesc>
		 テキストの回転角度を決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストの回転角度を決定します。
		 <p>有効な値は、flash.text.engine.TextRotation.ROTATE_0、flash.text.engine.TextRotation.ROTATE_180、flash.text.engine.TextRotation.ROTATE_270、flash.text.engine.TextRotation.ROTATE_90、flash.text.engine.TextRotation.AUTO および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は AUTO になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.engine.TextRotation.xml"><linktext>flash.text.engine.TextRotation</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:trackingLeft:get"><apiName>trackingLeft</apiName><shortdesc>
		 各文字の左側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または fontSize のパーセント（120％など））です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 各文字の左側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または <codeph>fontSize</codeph> のパーセント（120％など））です。kerning が有効にされている場合、フォントのカーニングテーブルの値に <codeph>trackingLeft</codeph> 値が追加されます。kerning が無効にされている場合、<codeph>trackingLeft</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。 
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:trackingRight:get"><apiName>trackingRight</apiName><shortdesc>
		 各文字の右側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または fontSize のパーセント（120％など））です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 各文字の右側にトラッキング（または手動カーニング）をどれだけ適用するかの数値（ピクセル単位または <codeph>fontSize</codeph> のパーセント（120％など））です。kerning が有効にされている場合、フォントのカーニングテーブルの値に <codeph>trackingRight</codeph> 値が追加されます。kerning が無効にされている場合、<codeph>trackingRight</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。 
		 <p>有効な数値は、-1000 ～ 1000 です。</p>
		 <p>有効なパーセント値は、-1000 ～ 1000％の数値です。</p>
		 <p>有効な値には、flashx.textLayout.formats.FormatValue.INHERIT があります。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は 0 になります。</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:typographicCase:get"><apiName>typographicCase</apiName><shortdesc>
		 このテキストに使用される文字の大文字小文字区別のタイプです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 このテキストに使用される文字の大文字小文字区別のタイプです。次に例を示します。<p><adobeimage alt="typographicCase" href="../../../images/textLayout_typographiccase.png"/></p>
		 <p>有効な値は、flashx.textLayout.formats.TLFTypographicCase.DEFAULT、flashx.textLayout.formats.TLFTypographicCase.CAPS_TO_SMALL_CAPS、flashx.textLayout.formats.TLFTypographicCase.UPPERCASE、flashx.textLayout.formats.TLFTypographicCase.LOWERCASE、flashx.textLayout.formats.TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は DEFAULT になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#TLFTypographicCase"><linktext>flashx.textLayout.formats.TLFTypographicCase</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 垂直方向の行揃えまたは均等配置です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 垂直方向の行揃えまたは均等配置です（カスケード時に定義されていない場合、デフォルトの値が採用されます）。コンテナ内で TextFlow エレメントを整列させる方法を決定します。
		 <p>有効な値は、flashx.textLayout.formats.VerticalAlign.TOP、flashx.textLayout.formats.VerticalAlign.MIDDLE、flashx.textLayout.formats.VerticalAlign.BOTTOM、flashx.textLayout.formats.VerticalAlign.JUSTIFY および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティの値は TOP になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#VerticalAlign"><linktext>flashx.textLayout.formats.VerticalAlign</linktext></link></related-links></apiValue><apiValue id="flashx.textLayout.formats:ITextLayoutFormat:flashx.textLayout.formats:ITextLayoutFormat:whiteSpaceCollapse:get"><apiName>whiteSpaceCollapse</apiName><shortdesc>
		 テキストを TextFlow にインポートする際、空白を圧縮または保持します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/><apiException><apiDesc>設定値がこのプロパティの範囲にない場合。
		 
		 </apiDesc><apiItemName>RangeError</apiItemName><apiOperationClassifier>RangeError</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 テキストを TextFlow にインポートする際、空白を圧縮または保持します。<codeph>WhiteSpaceCollapse.PRESERVE</codeph> では、すべての空白文字が保持されます。<codeph>WhiteSpaceCollapse.COLLAPSE</codeph> では、インポートしたテキストブロック内で、改行、タブ、行送りまたは行末の空白が削除されます。改行タグ () および Unicode の行区切り文字は保持されます。
		 <p>有効な値は、flashx.textLayout.formats.WhiteSpaceCollapse.PRESERVE、flashx.textLayout.formats.WhiteSpaceCollapse.COLLAPSE および flashx.textLayout.formats.FormatValue.INHERIT です。</p>
		 <p>デフォルト値は定義されていません。つまり、未設定です。</p>
		 <p>カスケード時に定義されていない場合、このプロパティは祖先から値を継承します。このプロパティを設定している祖先がない場合、値は COLLAPSE になります。</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flashx.textLayout.formats.xml#WhiteSpaceCollapse"><linktext>flashx.textLayout.formats.WhiteSpaceCollapse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:LeadingModel"><apiName>LeadingModel</apiName><shortdesc>
	  TextLayoutFormat クラスの leadingModel プロパティを設定する値を定義します。これは、行送り基準と行送りの方向の有効な組み合わせから成ります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayoutFormat</codeph> クラスの <codeph>leadingModel</codeph> プロパティを設定する値を定義します。これは、行送り基準と行送りの方向の有効な組み合わせから成ります。行送り基準は、段落内の行の間隔（または <codeph>lineHeight</codeph>）を決定するベースラインを示します。行送り方向は、<codeph>lineHeight</codeph> プロパティが参照する特定の行までの距離が、その行の前の行のベースラインを基点とするのか、それともその行の後の行のベースラインを基点とするのかを指定します。 
	  <p>
	  <adobeimage alt="baselines" border="0" href="../../../images/textLayout_baselines.jpg"/> <adobeimage alt="leadingDirection_1" border="0" href="../../../images/textLayout_LD1.jpg"/> <adobeimage alt="leadingDirection_2" border="0" href="../../../images/textLayout_LD2.jpg"/> <adobeimage alt="leadingDirection_3" border="0" href="../../../images/textLayout_LD3.jpg"/>
	  </p>
	  </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/leadingModel"><linktext>TextLayoutFormat.leadingModel</linktext></link><link href="flashx.textLayout.formats.xml#TextLayoutFormat/lineHeight"><linktext>TextLayoutFormat.lineHeight</linktext></link><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.engine.TextLine.xml"><linktext>flash.text.engine.TextLine</linktext></link></related-links><apiValue id="flashx.textLayout.formats:LeadingModel:APPROXIMATE_TEXT_FIELD"><apiName>APPROXIMATE_TEXT_FIELD</apiName><shortdesc> TextField の行間のビヘイビアーとほぼ同じになる行送りモデルを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>approximateTextField</apiData><apiType value="String"/></apiValueDef><apiDesc> <codeph>TextField</codeph> の行間のビヘイビアーとほぼ同じになる行送りモデルを指定します。これは <codeph>lineHeight</codeph> 内の <codeph>ASCENT_DESCENT_UP</codeph> と類似しており、前の行のディセントのベースラインから行のアセントのベースラインまでの距離を表します。ただし、ベースライン位置は、<codeph>TextLine</codeph> によって提供される測定値を使用せず、<codeph>TextField</codeph> によって特定される位置とほぼ同じになります。  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:ASCENT_DESCENT_UP"><apiName>ASCENT_DESCENT_UP</apiName><shortdesc> 行送り基準が ASCENT/DESCENT で行送りの方向が UP であることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ascentDescentUp</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送り基準が ASCENT/DESCENT で行送りの方向が UP であることを指定します。つまり、<codeph>lineHeight</codeph> は、前の行のディセントのベースラインから行のアセントのベースラインまでの距離を指します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:AUTO"><apiName>AUTO</apiName><shortdesc> 行送りモデルが、段落の locale プロパティに基づいて自動的に選択されることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage name="3.0" version="#IDEOGRAPHIC_TOP_DOWN"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送りモデルが、段落の <codeph>locale</codeph> プロパティに基づいて自動的に選択されることを指定します。これは、日本語と中国語で IDEOGRAPHIC_TOP_DOWN、他のすべての言語で ROMAN_UP となります。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_CENTER_DOWN"><apiName>IDEOGRAPHIC_CENTER_DOWN</apiName><shortdesc> 行送り基準が IDEOGRAPHIC_CENTER で行送りの方向が下方向であることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicCenterDown</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送り基準が IDEOGRAPHIC_CENTER で行送りの方向が下方向であることを指定します。つまり、<codeph>lineHeight</codeph> は、次の行の文字の中心のベースラインから行の文字の中心のベースラインまでの距離を指します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_CENTER_UP"><apiName>IDEOGRAPHIC_CENTER_UP</apiName><shortdesc> 行送り基準が IDEOGRAPHIC_CENTER で行送りの方向が UP であることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicCenterUp</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送り基準が IDEOGRAPHIC_CENTER で行送りの方向が UP であることを指定します。つまり、<codeph>lineHeight</codeph> は、前の行の文字の中心のベースラインから行の文字の中心のベースラインまでの距離を指します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_TOP_DOWN"><apiName>IDEOGRAPHIC_TOP_DOWN</apiName><shortdesc> 行送り基準が IDEOGRAPHIC_TOP で行送りの方向が DOWN であることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicTopDown</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送り基準が IDEOGRAPHIC_TOP で行送りの方向が DOWN であることを指定します。つまり、<codeph>lineHeight</codeph> は、次の行の文字の最上部のベースラインから行の文字の最上部のベースラインまでの距離を指します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:IDEOGRAPHIC_TOP_UP"><apiName>IDEOGRAPHIC_TOP_UP</apiName><shortdesc> 行送り基準が IDEOGRAPHIC_TOP で行送りの方向が UP であることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ideographicTopUp</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送り基準が IDEOGRAPHIC_TOP で行送りの方向が UP であることを指定します。つまり、<codeph>lineHeight</codeph> は、前の行の文字の最上部のベースラインから行の文字の最上部のベースラインまでの距離を指します。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:LeadingModel:ROMAN_UP"><apiName>ROMAN_UP</apiName><shortdesc> 行送り基準が ROMAN で行送りの方向が UP であることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>romanUp</apiData><apiType value="String"/></apiValueDef><apiDesc> 行送り基準が ROMAN で行送りの方向が UP であることを指定します。つまり、<codeph>lineHeight</codeph> は、前の行の文字の欧文ベースラインから行の文字の欧文ベースラインまでの距離を指します。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:IMEStatus"><apiName>IMEStatus</apiName><shortdesc>
	  IME テキスト入力セッション中の、IME テキストの句のステータスを指定するために内部的に使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  IME テキスト入力セッション中の、IME テキストの句のステータスを指定するために内部的に使用されます。
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="flashx.textLayout.formats:IMEStatus:IMEStatus"><apiName>IMEStatus</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="flashx.textLayout.formats:IMEStatus:DEAD_KEY_INPUT_STATE"><apiName>DEAD_KEY_INPUT_STATE</apiName><shortdesc> デッドキー入力状態 - 複数キーの文字（アクセント記号付き文字など）の入力プロセス中
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deadKeyInputState</apiData><apiType value="String"/></apiValueDef><apiDesc> デッドキー入力状態 - 複数キーの文字（アクセント記号付き文字など）の入力プロセス中
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:IME_CLAUSE"><apiName>IME_CLAUSE</apiName><shortdesc> IMEClause プロパティの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>imeClause</apiData><apiType value="String"/></apiValueDef><apiDesc> IMEClause プロパティの名前です。値は整数です。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:IME_STATUS"><apiName>IME_STATUS</apiName><shortdesc> IMEStatus プロパティ名
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>imeStatus</apiData><apiType value="String"/></apiValueDef><apiDesc> IMEStatus プロパティ名
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:NOT_SELECTED_CONVERTED"><apiName>NOT_SELECTED_CONVERTED</apiName><shortdesc> 変換済み未選択 - テキストは変換済みで、IME セッションの現在の節の一部ではありません
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>notSelectedConverted</apiData><apiType value="String"/></apiValueDef><apiDesc> 変換済み未選択 - テキストは変換済みで、IME セッションの現在の節の一部ではありません
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:NOT_SELECTED_RAW"><apiName>NOT_SELECTED_RAW</apiName><shortdesc> 未処理未選択 - テキストは変換されておらず、IME セッションの現在の節の一部ではありません
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>notSelectedRaw</apiData><apiType value="String"/></apiValueDef><apiDesc> 未処理未選択 - テキストは変換されておらず、IME セッションの現在の節の一部ではありません
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:SELECTED_CONVERTED"><apiName>SELECTED_CONVERTED</apiName><shortdesc> 変換および選択済み - テキストは変換済みで、IME セッションの現在の節です
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectedConverted</apiData><apiType value="String"/></apiValueDef><apiDesc> 変換および選択済み - テキストは変換済みで、IME セッションの現在の節です
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:IMEStatus:SELECTED_RAW"><apiName>SELECTED_RAW</apiName><shortdesc> 未処理選択済み - テキストは変換されておらず、IME セッションの現在の節です
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectedRaw</apiData><apiType value="String"/></apiValueDef><apiDesc> 未処理選択済み - テキストは変換されておらず、IME セッションの現在の節です
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:BaselineOffset"><apiName>BaselineOffset</apiName><shortdesc>
	  TextLayoutFormat および ContainerFormattedElement クラスの firstBaselineOffset プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayoutFormat</codeph>および <codeph>ContainerFormattedElement</codeph> クラスの <codeph>firstBaselineOffset</codeph> プロパティの値を定義します。コンテナの上部のインセットから最初の行のベースラインまでのオフセットを設定します。ベースラインのオフセットは、行のアセント、行の高さ、または自動生成値として指定できます。
	  <p>
	  <adobeimage alt="firstBaselineOffset_1" border="0" href="../../../images/textLayout_FBO1.jpg"/> <adobeimage alt="firstBaselineOffset_2" border="0" href="../../../images/textLayout_FBO2.jpg"/> <adobeimage alt="firstBaselineOffset_3" border="0" href="../../../images/textLayout_FBO3.jpg"/> <adobeimage alt="firstBaselineOffset_4" border="0" href="../../../images/textLayout_FBO4.jpg"/>
	  </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/firstBaselineOffset"><linktext>TextLayoutFormat.firstBaselineOffset</linktext></link></related-links><apiValue id="flashx.textLayout.formats:BaselineOffset:ASCENT"><apiName>ASCENT</apiName><shortdesc> 行のアセントと等しいオフセットを指定します。これは、行の最も高さのあるフォントのアセントであり、インライングラフィックはグラフィックの最下部がベースライン上にあるとします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ascent</apiData><apiType value="String"/></apiValueDef><apiDesc> 行のアセントと等しいオフセットを指定します。これは、行の最も高さのあるフォントのアセントであり、インライングラフィックはグラフィックの最下部がベースライン上にあるとします。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BaselineOffset:AUTO"><apiName>AUTO</apiName><shortdesc> 行のアセントとコンテナの上部のインセットを揃えます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auto</apiData><apiType value="String"/></apiValueDef><apiDesc> 行のアセントとコンテナの上部のインセットを揃えます。
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:BaselineOffset:LINE_HEIGHT"><apiName>LINE_HEIGHT</apiName><shortdesc> 行の高さと等しいオフセットを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineHeight</apiData><apiType value="String"/></apiValueDef><apiDesc> 行の高さと等しいオフセットを指定します。
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flashx.textLayout.formats:WhiteSpaceCollapse"><apiName>WhiteSpaceCollapse</apiName><shortdesc>
	  TextLayoutFormat クラスの whiteSpaceCollapse プロパティを設定する値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  <codeph>TextLayoutFormat</codeph> クラスの <codeph>whiteSpaceCollapse</codeph> プロパティを設定する値を定義します。 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flashx.textLayout.formats.xml#TextLayoutFormat/whiteSpaceCollapse"><linktext>TextLayoutFormat.whiteSpaceCollapse</linktext></link></related-links><apiValue id="flashx.textLayout.formats:WhiteSpaceCollapse:COLLAPSE"><apiName>COLLAPSE</apiName><shortdesc> 
		 テキストのインポート時に空白文字を圧縮します（デフォルト）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collapse</apiData><apiType value="String"/></apiValueDef><apiDesc> 
		 テキストのインポート時に空白文字を圧縮します（デフォルト）。インポートされたテキストのブロック内で、改行文字、タブ、先行および後続の空白を削除します。改行のタグ（br/）および Unicode 行区切り文字は保持されます。
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flashx.textLayout.formats:WhiteSpaceCollapse:PRESERVE"><apiName>PRESERVE</apiName><shortdesc> テキストのインポート時に空白文字を維持します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>preserve</apiData><apiType value="String"/></apiValueDef><apiDesc> テキストのインポート時に空白文字を維持します。 
		</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>