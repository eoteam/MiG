<?xml version="1.0" encoding="utf-8"?>
<mx:HBox  xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" 
	 verticalAlign="middle" horizontalAlign="left" verticalScrollPolicy="off"
	 paddingTop="2" paddingBottom="2" paddingRight="2" paddingLeft="2" 
	 implements="mx.controls.listClasses.IDropInListItemRenderer"
	 backgroundAlpha="0" xmlns:controls="com.mapx.view.controls.*">
	
	<mx:Script>
		<![CDATA[
			import mx.core.UITextField;
		import mx.events.FlexEvent;
		import mx.controls.advancedDataGridClasses.AdvancedDataGridListData;
		import mx.controls.listClasses.BaseListData;
         
		[Bindable] public var isPassword:Boolean = false;	         
        [Bindable] public var editable:Boolean = true;
        [Bindable] public var textColor:Number = 0x666666;
     
        [Bindable] private var cellValue:String; 
        [Bindable] public var enabledField:String;
        [Bindable] public var fieldStyleName:String = "inputFieldBlack";
        public var outerFunction:Function;
        public var colorEnabled:Boolean = false;
          	    	
        private var _listData:BaseListData;
    
		public function get listData():BaseListData
		{
			return _listData;
		}
		public function set listData(value:BaseListData):void
		{
			_listData = value;
		}				
        override public function get data():Object
        {
            return super.data;
        }    
		override public function set data(value:Object):void 
		{  
			super.data = value;  
            if(value != null)  
            {
            	if(outerFunction != null)
				{
			 		cellValue = outerFunction.call(null,data) as String;
			 	}
			 	else
	                cellValue = value[AdvancedDataGridListData(this.listData).dataField]; 
	            if(cellValue == null)
	                 cellValue = value[AdvancedDataGridListData(this.listData).dataField];       
                if(data.hasOwnProperty("active"))
                {
                	this.enabled = (data.active == 1) ? true:false;
                }
                    
            }   
         } 
         private function handleValueChange():void
         {
         	data[AdvancedDataGridListData(this.listData).dataField] = input.text;
         }
		override protected function measure():void
		{
			super.measure();
			var tf:UITextField = input.mx_internal::getTextField();
			var metrics:TextLineMetrics = tf.getLineMetrics(0);
			var h:Number = input.mx_internal::getTextField().numLines*metrics.height + 5;
			this.measuredHeight = h;
			input.height = h;			
		}         
		]]>
	</mx:Script>
	<mx:TextArea borderThickness="0" styleName="{fieldStyleName}" verticalScrollPolicy="off"    fontFamily="Transit-Bold"   width="100%" displayAsPassword="{isPassword}" id="input" text="{cellValue}" 
		backgroundAlpha="0" borderStyle="solid" color="{textColor}"  change="handleValueChange()" editable="{editable}" mouseChildren="{editable}"  />
</mx:HBox>